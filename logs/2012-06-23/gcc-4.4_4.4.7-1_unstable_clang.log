DC-Build-Header: gcc-4.4 4.4.7-1 / Sat Jun 23 01:47:18 +0000 2012
DC-Task: logfile:/tmp/gcc-4.4_4.4.7-1_unstable_clang.log version:4.4.7-1 chroot:unstable modes:binary-only:clang source:gcc-4.4 architecture:any esttime:2000
DC-Sbuild-call: su user -c 'sbuild -n --apt-update -d unstable -v  --chroot-setup-commands=/tmp/switch-to-clang gcc-4.4_4.4.7-1'
sbuild (Debian sbuild) 0.62.5 (13 Jul 2011) on ip-10-28-64-76.ec2.internal

╔══════════════════════════════════════════════════════════════════════════════╗
║ gcc-4.4 4.4.7-1 (amd64)                                    23 Jun 2012 01:47 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: gcc-4.4
Version: 4.4.7-1
Source Version: 4.4.7-1
Distribution: unstable
Architecture: amd64

I: NOTICE: Log filtering will replace 'build/gcc-4.4-965RZ_/gcc-4.4-4.4.7' with '«PKGBUILDDIR»'
I: NOTICE: Log filtering will replace 'build/gcc-4.4-965RZ_' with '«BUILDDIR»'
I: NOTICE: Log filtering will replace 'var/lib/schroot/mount/unstable-amd64-sbuild-f325c33b-7a09-4790-aed0-024283b9fb55' with '«CHROOT»'

┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Ign http://localhost unstable InRelease
Get:1 http://localhost unstable Release.gpg [836 B]
Get:2 http://localhost unstable Release [233 kB]
Get:3 http://localhost unstable/main Sources/DiffIndex [7876 B]
Get:4 http://localhost unstable/main amd64 Packages/DiffIndex [7876 B]
Get:5 http://localhost unstable/main Translation-en/DiffIndex [7876 B]
Get:6 http://localhost unstable/main 2012-06-22-1416.06.pdiff [15.9 kB]
Get:7 http://localhost unstable/main amd64 2012-06-22-1416.06.pdiff [23.9 kB]
Get:8 http://localhost unstable/main 2012-06-22-1416.06.pdiff [15.9 kB]
Get:9 http://localhost unstable/main 2012-06-22-1416.06.pdiff [1537 B]
Get:10 http://localhost unstable/main amd64 2012-06-22-1416.06.pdiff [23.9 kB]
Get:11 http://localhost unstable/main 2012-06-22-2014.37.pdiff [14.8 kB]
Get:12 http://localhost unstable/main 2012-06-22-1416.06.pdiff [1537 B]
Get:13 http://localhost unstable/main amd64 2012-06-22-2014.37.pdiff [12.8 kB]
Get:14 http://localhost unstable/main 2012-06-22-2014.37.pdiff [14.8 kB]
Get:15 http://localhost unstable/main 2012-06-22-2014.37.pdiff [234 B]
Get:16 http://localhost unstable/main amd64 2012-06-22-2014.37.pdiff [12.8 kB]
Get:17 http://localhost unstable/main 2012-06-22-2014.37.pdiff [234 B]
Fetched 327 kB in 5s (60.9 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages will be upgraded:
  base-passwd zlib1g
2 upgraded, 0 newly installed, 0 to remove and 0 not upgraded.
Need to get 128 kB of archives.
After this operation, 11.3 kB disk space will be freed.
Get:1 http://localhost/debian/ unstable/main base-passwd amd64 3.5.25 [40.9 kB]
Get:2 http://localhost/debian/ unstable/main zlib1g amd64 1:1.2.7.dfsg-13 [87.4 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 128 kB in 0s (9501 kB/s)
(Reading database ... 11730 files and directories currently installed.)
Preparing to replace base-passwd 3.5.24 (using .../base-passwd_3.5.25_amd64.deb) ...
Unpacking replacement base-passwd ...
Setting up base-passwd (3.5.25) ...
(Reading database ... 11730 files and directories currently installed.)
Preparing to replace zlib1g:amd64 1:1.2.7.dfsg-12 (using .../zlib1g_1%3a1.2.7.dfsg-13_amd64.deb) ...
Unpacking replacement zlib1g:amd64 ...
Setting up zlib1g:amd64 (1:1.2.7.dfsg-13) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
NOTICE: 'gcc-4.4' packaging is maintained in the 'Svn' version control system at:
svn://svn.debian.org/svn/gcccvs/branches/sid/gcc-4.4
Need to get 51.2 MB of source archives.
Get:1 http://localhost/debian/ unstable/main gcc-4.4 4.4.7-1 (dsc) [4093 B]
Get:2 http://localhost/debian/ unstable/main gcc-4.4 4.4.7-1 (tar) [49.9 MB]
Get:3 http://localhost/debian/ unstable/main gcc-4.4 4.4.7-1 (diff) [1250 kB]
Fetched 51.2 MB in 1s (34.2 MB/s)
Download complete and in download only mode

Check arch
──────────


┌──────────────────────────────────────────────────────────────────────────────┐
│ Chroot Setup Commands                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


/tmp/switch-to-clang
────────────────────

+ echo 'Entering customization script...'
Entering customization script...
+ apt-get update
Ign http://localhost unstable InRelease
Hit http://localhost unstable Release.gpg
Hit http://localhost unstable Release
Hit http://localhost unstable/main Sources/DiffIndex
Hit http://localhost unstable/main amd64 Packages/DiffIndex
Hit http://localhost unstable/main Translation-en/DiffIndex
Reading package lists...
+ echo 'Install of clang'
Install of clang
+ apt-get update
Ign http://localhost unstable InRelease
Hit http://localhost unstable Release.gpg
Hit http://localhost unstable Release
Hit http://localhost unstable/main Sources/DiffIndex
Hit http://localhost unstable/main amd64 Packages/DiffIndex
Hit http://localhost unstable/main Translation-en/DiffIndex
Reading package lists...
+ apt-get install --yes --no-install-recommends clang -t unstable
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  libclang-common-dev libffi5 libllvm3.1
Recommended packages:
  llvm-3.1-dev python
The following NEW packages will be installed:
  clang libclang-common-dev libffi5 libllvm3.1
0 upgraded, 4 newly installed, 0 to remove and 0 not upgraded.
Need to get 13.1 MB of archives.
After this operation, 35.6 MB of additional disk space will be used.
Get:1 http://localhost/debian/ unstable/main libffi5 amd64 3.0.10-3 [24.8 kB]
Get:2 http://localhost/debian/ unstable/main libllvm3.1 amd64 3.1-1 [7276 kB]
Get:3 http://localhost/debian/ unstable/main libclang-common-dev amd64 3.1-6 [84.0 kB]
Get:4 http://localhost/debian/ unstable/main clang amd64 3.1-6 [5755 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 13.1 MB in 0s (41.4 MB/s)
Selecting previously unselected package libffi5:amd64.
(Reading database ... 11730 files and directories currently installed.)
Unpacking libffi5:amd64 (from .../libffi5_3.0.10-3_amd64.deb) ...
Selecting previously unselected package libllvm3.1:amd64.
Unpacking libllvm3.1:amd64 (from .../libllvm3.1_3.1-1_amd64.deb) ...
Selecting previously unselected package libclang-common-dev.
Unpacking libclang-common-dev (from .../libclang-common-dev_3.1-6_amd64.deb) ...
Selecting previously unselected package clang.
Unpacking clang (from .../archives/clang_3.1-6_amd64.deb) ...
Setting up libffi5:amd64 (3.0.10-3) ...
Setting up libllvm3.1:amd64 (3.1-1) ...
Setting up libclang-common-dev (3.1-6) ...
Setting up clang (3.1-6) ...
+ echo 'Replace gcc, g++ & cpp by clang'
Replace gcc, g++ & cpp by clang
+ VERSION=4.7
+ cd /usr/bin
+ rm g++-4.7 gcc-4.7 cpp-4.7
+ ln -s clang++ g++-4.7
+ ln -s clang gcc-4.7
+ ln -s clang cpp-4.7
+ cd -
/«BUILDDIR»
+ echo 'Block the installation of new gcc version'
Block the installation of new gcc version
+ echo 'gcc-4.6 hold'
+ dpkg --set-selections
+ echo 'cpp-4.6 hold'
+ dpkg --set-selections
+ echo 'g++-4.6 hold'
+ dpkg --set-selections
+ echo 'gcc-4.7 hold'
+ dpkg --set-selections
+ echo 'cpp-4.7 hold'
+ dpkg --set-selections
+ echo 'g++-4.7 hold'
+ dpkg --set-selections
+ echo 'Check if gcc, g++ & cpp are actually clang'
Check if gcc, g++ & cpp are actually clang
+ gcc --version
+ grep clang

I: Finished running '/tmp/switch-to-clang'.

Finished processing commands.
────────────────────────────────────────────────────────────────────────────────
Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/«BUILDDIR»/resolver-gDIHYI/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
debconf: delaying package configuration, since apt-utils is not installed
0 upgraded, 1 newly installed, 0 to remove and 0 not upgraded.
Need to get 0 B/706 B of archives.
After this operation, 0 B of additional disk space will be used.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 11810 files and directories currently installed.)
Unpacking sbuild-build-depends-core-dummy (from .../sbuild-build-depends-core-dummy.deb) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Merged Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), dpkg-dev (>= 1.16.0.3), debhelper (>= 5.0.62), g++-multilib, libc6-dev (>= 2.13-5), libc6-dev-i386, lib32gcc1, m4, libtool, autoconf2.59, automake1.9, zlib1g-dev, gawk, lzma, xz-utils, patchutils, binutils (>= 2.20.1-15~) | binutils-multiarch (>= 2.20.1-15~), gperf (>= 3.0.1), bison (>= 1:2.3), flex, gettext, texinfo (>= 4.3), locales, procps, sharutils, libcloog-ppl-dev (>= 0.15.8-1~), libmpfr-dev (>= 3.0.0-9~), libgmp-dev (>= 2:5.0.1~), dejagnu, autogen, realpath (>= 1.9.12), chrpath, lsb-release, make (>= 3.81), quilt
Filtered Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), dpkg-dev (>= 1.16.0.3), debhelper (>= 5.0.62), g++-multilib, libc6-dev (>= 2.13-5), libc6-dev-i386, lib32gcc1, m4, libtool, autoconf2.59, automake1.9, zlib1g-dev, gawk, lzma, xz-utils, patchutils, binutils (>= 2.20.1-15~), gperf (>= 3.0.1), bison (>= 1:2.3), flex, gettext, texinfo (>= 4.3), locales, procps, sharutils, libcloog-ppl-dev (>= 0.15.8-1~), libmpfr-dev (>= 3.0.0-9~), libgmp-dev (>= 2:5.0.1~), dejagnu, autogen, realpath (>= 1.9.12), chrpath, lsb-release, make (>= 3.81), quilt
dpkg-deb: building package `sbuild-build-depends-gcc-4.4-dummy' in `/«BUILDDIR»/resolver-i3D0QI/apt_archive/sbuild-build-depends-gcc-4.4-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install gcc-4.4 build dependencies (apt-based resolver)                      │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  autoconf autoconf2.59 autogen automake1.9 autotools-dev bison bsdmainutils
  chrpath debhelper dejagnu diffstat expect file flex g++-4.7-multilib
  g++-multilib gawk gcc-4.7-multilib gcc-multilib gettext gettext-base gperf
  groff-base guile-1.8-libs html2text intltool-debian lib32gcc1 lib32gomp1
  lib32itm1 lib32quadmath0 lib32stdc++6 libasprintf0c2 libbison-dev
  libc6-dev-i386 libc6-i386 libcloog-ppl-dev libcloog-ppl0 libcroco3 libexpat1
  libgettextpo0 libglib2.0-0 libgmp-dev libgmpxx4ldbl libltdl7 libmagic1
  libmpfr-dev libncursesw5 libopts25 libopts25-dev libpcre3 libpipeline1
  libppl-c4 libppl0.11-dev libppl9 libprocps0 libpwl5 libsigsegv2 libsqlite3-0
  libssl1.0.0 libtool libunistring0 libxml2 locales lsb-release m4 man-db
  mime-support patchutils po-debconf procps python python-minimal python2.7
  python2.7-minimal quilt realpath sharutils tcl8.5 texinfo zlib1g-dev
Suggested packages:
  autoconf2.13 autoconf-archive gnu-standards autoconf-doc automake1.9-doc
  bison-doc wamerican wordlist whois vacation dh-make lib32stdc++6-4.7-dbg
  gawk-doc lib32mudflap0 gettext-doc groff libgmp10-doc libmpfr-doc libppl-doc
  libtool-doc gfortran fortran95-compiler gcj lsb less www-browser
  libmail-box-perl python-doc python-tk python2.7-doc binfmt-support procmail
  graphviz default-mta mail-transport-agent bsd-mailx mailx tcl-tclreadline
  texlive-base texlive-latex-base texlive-generic-recommended
  texinfo-doc-nonfree
Recommended packages:
  automake automaken curl wget lynx-cur autopoint libglib2.0-data
  shared-mime-info libgpm2 libgmp3-dev libltdl-dev xml-core
  libmail-sendmail-perl psmisc
The following NEW packages will be installed:
  autoconf autoconf2.59 autogen automake1.9 autotools-dev bison bsdmainutils
  chrpath debhelper dejagnu diffstat expect file flex g++-4.7-multilib
  g++-multilib gawk gcc-4.7-multilib gcc-multilib gettext gettext-base gperf
  groff-base guile-1.8-libs html2text intltool-debian lib32gcc1 lib32gomp1
  lib32itm1 lib32quadmath0 lib32stdc++6 libasprintf0c2 libbison-dev
  libc6-dev-i386 libc6-i386 libcloog-ppl-dev libcloog-ppl0 libcroco3 libexpat1
  libgettextpo0 libglib2.0-0 libgmp-dev libgmpxx4ldbl libltdl7 libmagic1
  libmpfr-dev libncursesw5 libopts25 libopts25-dev libpcre3 libpipeline1
  libppl-c4 libppl0.11-dev libppl9 libprocps0 libpwl5 libsigsegv2 libsqlite3-0
  libssl1.0.0 libtool libunistring0 libxml2 locales lsb-release m4 man-db
  mime-support patchutils po-debconf procps python python-minimal python2.7
  python2.7-minimal quilt realpath sbuild-build-depends-gcc-4.4-dummy
  sharutils tcl8.5 texinfo zlib1g-dev
0 upgraded, 81 newly installed, 0 to remove and 0 not upgraded.
Need to get 51.2 MB/51.2 MB of archives.
After this operation, 144 MB of additional disk space will be used.
Get:1 http://localhost/debian/ unstable/main libncursesw5 amd64 5.9-9 [141 kB]
Get:2 http://localhost/debian/ unstable/main libpipeline1 amd64 1.2.1-1 [39.2 kB]
Get:3 http://localhost/debian/ unstable/main libprocps0 amd64 1:3.3.3-2 [58.1 kB]
Get:4 http://localhost/debian/ unstable/main libssl1.0.0 amd64 1.0.1c-3 [1211 kB]
Get:5 http://localhost/debian/ unstable/main libasprintf0c2 amd64 0.18.1.1-9 [26.8 kB]
Get:6 http://localhost/debian/ unstable/main libmagic1 amd64 5.11-1 [250 kB]
Get:7 http://localhost/debian/ unstable/main libpcre3 amd64 1:8.30-5 [242 kB]
Get:8 http://localhost/debian/ unstable/main libsqlite3-0 amd64 3.7.13-1 [455 kB]
Get:9 http://localhost/debian/ unstable/main libxml2 amd64 2.8.0+dfsg1-4 [903 kB]
Get:10 http://localhost/debian/ unstable/main m4 amd64 1.4.16-3 [260 kB]
Get:11 http://localhost/debian/ unstable/main flex amd64 2.5.35-10 [332 kB]
Get:12 http://localhost/debian/ unstable/main libgmpxx4ldbl amd64 2:5.0.5+dfsg-2 [21.6 kB]
Get:13 http://localhost/debian/ unstable/main libppl9 amd64 0.11.2-6 [532 kB]
Get:14 http://localhost/debian/ unstable/main libpwl5 amd64 0.11.2-6 [30.1 kB]
Get:15 http://localhost/debian/ unstable/main libppl-c4 amd64 0.11.2-6 [1522 kB]
Get:16 http://localhost/debian/ unstable/main libcloog-ppl0 amd64 0.15.11-4 [64.0 kB]
Get:17 http://localhost/debian/ unstable/main libglib2.0-0 amd64 2.32.3-1 [2081 kB]
Get:18 http://localhost/debian/ unstable/main libcroco3 amd64 0.6.5-1 [151 kB]
Get:19 http://localhost/debian/ unstable/main libexpat1 amd64 2.1.0-1 [141 kB]
Get:20 http://localhost/debian/ unstable/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:21 http://localhost/debian/ unstable/main libgettextpo0 amd64 0.18.1.1-9 [145 kB]
Get:22 http://localhost/debian/ unstable/main libltdl7 amd64 2.4.2-1.1 [352 kB]
Get:23 http://localhost/debian/ unstable/main bsdmainutils amd64 9.0.3 [209 kB]
Get:24 http://localhost/debian/ unstable/main groff-base amd64 1.21-8 [1152 kB]
Get:25 http://localhost/debian/ unstable/main man-db amd64 2.6.2-1 [1061 kB]
Get:26 http://localhost/debian/ unstable/main procps amd64 1:3.3.3-2 [252 kB]
Get:27 http://localhost/debian/ unstable/main file amd64 5.11-1 [53.2 kB]
Get:28 http://localhost/debian/ unstable/main gettext-base amd64 0.18.1.1-9 [154 kB]
Get:29 http://localhost/debian/ unstable/main locales all 2.13-33 [5712 kB]
Get:30 http://localhost/debian/ unstable/main mime-support all 3.52-1 [35.5 kB]
Get:31 http://localhost/debian/ unstable/main python2.7-minimal amd64 2.7.3-1 [1770 kB]
Get:32 http://localhost/debian/ unstable/main python2.7 amd64 2.7.3-1 [2726 kB]
Get:33 http://localhost/debian/ unstable/main python-minimal all 2.7.3~rc2-1 [40.4 kB]
Get:34 http://localhost/debian/ unstable/main python all 2.7.3~rc2-1 [179 kB]
Get:35 http://localhost/debian/ unstable/main texinfo amd64 4.13a.dfsg.1-10 [983 kB]
Get:36 http://localhost/debian/ unstable/main autoconf all 2.69-1 [589 kB]
Get:37 http://localhost/debian/ unstable/main guile-1.8-libs amd64 1.8.8+1-8 [762 kB]
Get:38 http://localhost/debian/ unstable/main libopts25 amd64 1:5.12-0.1 [73.8 kB]
Get:39 http://localhost/debian/ unstable/main libopts25-dev amd64 1:5.12-0.1 [117 kB]
Get:40 http://localhost/debian/ unstable/main autogen amd64 1:5.12-0.1 [1076 kB]
Get:41 http://localhost/debian/ unstable/main autotools-dev all 20120608.1 [73.0 kB]
Get:42 http://localhost/debian/ unstable/main automake1.9 all 1.9.6+nogfdl-3.1 [392 kB]
Get:43 http://localhost/debian/ unstable/main libbison-dev amd64 1:2.5.dfsg-2.1 [289 kB]
Get:44 http://localhost/debian/ unstable/main bison amd64 1:2.5.dfsg-2.1 [689 kB]
Get:45 http://localhost/debian/ unstable/main chrpath amd64 0.13-2 [13.9 kB]
Get:46 http://localhost/debian/ unstable/main html2text amd64 1.3.2a-15 [103 kB]
Get:47 http://localhost/debian/ unstable/main gettext amd64 0.18.1.1-9 [1975 kB]
Get:48 http://localhost/debian/ unstable/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:49 http://localhost/debian/ unstable/main po-debconf all 1.0.16+nmu2 [224 kB]
Get:50 http://localhost/debian/ unstable/main debhelper all 9.20120608 [700 kB]
Get:51 http://localhost/debian/ unstable/main tcl8.5 amd64 8.5.11-2 [1627 kB]
Get:52 http://localhost/debian/ unstable/main expect amd64 5.45-2 [190 kB]
Get:53 http://localhost/debian/ unstable/main dejagnu all 1.5-3 [885 kB]
Get:54 http://localhost/debian/ unstable/main diffstat amd64 1.55-3 [30.0 kB]
Get:55 http://localhost/debian/ unstable/main libc6-i386 amd64 2.13-33 [4024 kB]
Get:56 http://localhost/debian/ unstable/main libc6-dev-i386 amd64 2.13-33 [1575 kB]
Get:57 http://localhost/debian/ unstable/main lib32gcc1 amd64 1:4.7.1-1 [53.2 kB]
Get:58 http://localhost/debian/ unstable/main lib32gomp1 amd64 4.7.1-1 [30.0 kB]
Get:59 http://localhost/debian/ unstable/main lib32itm1 amd64 4.7.1-1 [35.9 kB]
Get:60 http://localhost/debian/ unstable/main lib32quadmath0 amd64 4.7.1-1 [198 kB]
Get:61 http://localhost/debian/ unstable/main gcc-4.7-multilib amd64 4.7.1-1 [2600 kB]
Get:62 http://localhost/debian/ unstable/main lib32stdc++6 amd64 4.7.1-1 [347 kB]
Get:63 http://localhost/debian/ unstable/main g++-4.7-multilib amd64 4.7.1-1 [1047 kB]
Get:64 http://localhost/debian/ unstable/main gcc-multilib amd64 4:4.7.0-6 [896 B]
Get:65 http://localhost/debian/ unstable/main g++-multilib amd64 4:4.7.0-6 [834 B]
Get:66 http://localhost/debian/ unstable/main libsigsegv2 amd64 2.9-4 [28.9 kB]
Get:67 http://localhost/debian/ unstable/main gawk amd64 1:4.0.1+dfsg-2 [972 kB]
Get:68 http://localhost/debian/ unstable/main gperf amd64 3.0.3-1+b1 [139 kB]
Get:69 http://localhost/debian/ unstable/main libppl0.11-dev amd64 0.11.2-6 [3346 kB]
Get:70 http://localhost/debian/ unstable/main libgmp-dev amd64 2:5.0.5+dfsg-2 [610 kB]
Get:71 http://localhost/debian/ unstable/main libcloog-ppl-dev amd64 0.15.11-4 [106 kB]
Get:72 http://localhost/debian/ unstable/main libmpfr-dev amd64 3.1.0-5 [602 kB]
Get:73 http://localhost/debian/ unstable/main libtool amd64 2.4.2-1.1 [619 kB]
Get:74 http://localhost/debian/ unstable/main lsb-release all 4.1+Debian7 [25.8 kB]
Get:75 http://localhost/debian/ unstable/main patchutils amd64 0.3.2-1.1 [110 kB]
Get:76 http://localhost/debian/ unstable/main quilt all 0.60-2 [377 kB]
Get:77 http://localhost/debian/ unstable/main realpath amd64 1.17 [16.6 kB]
Get:78 http://localhost/debian/ unstable/main sharutils amd64 1:4.11.1-1 [195 kB]
Get:79 http://localhost/debian/ unstable/main zlib1g-dev amd64 1:1.2.7.dfsg-13 [215 kB]
Get:80 http://localhost/debian/ unstable/main autoconf2.59 all 2.59-1 [358 kB]
debconf: delaying package configuration, since apt-utils is not installed
Fetched 51.2 MB in 1s (26.1 MB/s)
Selecting previously unselected package libncursesw5:amd64.
(Reading database ... 11810 files and directories currently installed.)
Unpacking libncursesw5:amd64 (from .../libncursesw5_5.9-9_amd64.deb) ...
Selecting previously unselected package libpipeline1:amd64.
Unpacking libpipeline1:amd64 (from .../libpipeline1_1.2.1-1_amd64.deb) ...
Selecting previously unselected package libprocps0:amd64.
Unpacking libprocps0:amd64 (from .../libprocps0_1%3a3.3.3-2_amd64.deb) ...
Selecting previously unselected package libssl1.0.0:amd64.
Unpacking libssl1.0.0:amd64 (from .../libssl1.0.0_1.0.1c-3_amd64.deb) ...
Selecting previously unselected package libasprintf0c2:amd64.
Unpacking libasprintf0c2:amd64 (from .../libasprintf0c2_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package libmagic1:amd64.
Unpacking libmagic1:amd64 (from .../libmagic1_5.11-1_amd64.deb) ...
Selecting previously unselected package libpcre3:amd64.
Unpacking libpcre3:amd64 (from .../libpcre3_1%3a8.30-5_amd64.deb) ...
Selecting previously unselected package libsqlite3-0:amd64.
Unpacking libsqlite3-0:amd64 (from .../libsqlite3-0_3.7.13-1_amd64.deb) ...
Selecting previously unselected package libxml2:amd64.
Unpacking libxml2:amd64 (from .../libxml2_2.8.0+dfsg1-4_amd64.deb) ...
Selecting previously unselected package m4.
Unpacking m4 (from .../archives/m4_1.4.16-3_amd64.deb) ...
Selecting previously unselected package flex.
Unpacking flex (from .../flex_2.5.35-10_amd64.deb) ...
Selecting previously unselected package libgmpxx4ldbl:amd64.
Unpacking libgmpxx4ldbl:amd64 (from .../libgmpxx4ldbl_2%3a5.0.5+dfsg-2_amd64.deb) ...
Selecting previously unselected package libppl9:amd64.
Unpacking libppl9:amd64 (from .../libppl9_0.11.2-6_amd64.deb) ...
Selecting previously unselected package libpwl5:amd64.
Unpacking libpwl5:amd64 (from .../libpwl5_0.11.2-6_amd64.deb) ...
Selecting previously unselected package libppl-c4:amd64.
Unpacking libppl-c4:amd64 (from .../libppl-c4_0.11.2-6_amd64.deb) ...
Selecting previously unselected package libcloog-ppl0:amd64.
Unpacking libcloog-ppl0:amd64 (from .../libcloog-ppl0_0.15.11-4_amd64.deb) ...
Selecting previously unselected package libglib2.0-0:amd64.
Unpacking libglib2.0-0:amd64 (from .../libglib2.0-0_2.32.3-1_amd64.deb) ...
Selecting previously unselected package libcroco3:amd64.
Unpacking libcroco3:amd64 (from .../libcroco3_0.6.5-1_amd64.deb) ...
Selecting previously unselected package libexpat1:amd64.
Unpacking libexpat1:amd64 (from .../libexpat1_2.1.0-1_amd64.deb) ...
Selecting previously unselected package libunistring0:amd64.
Unpacking libunistring0:amd64 (from .../libunistring0_0.9.3-5_amd64.deb) ...
Selecting previously unselected package libgettextpo0:amd64.
Unpacking libgettextpo0:amd64 (from .../libgettextpo0_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package libltdl7:amd64.
Unpacking libltdl7:amd64 (from .../libltdl7_2.4.2-1.1_amd64.deb) ...
Selecting previously unselected package bsdmainutils.
Unpacking bsdmainutils (from .../bsdmainutils_9.0.3_amd64.deb) ...
Selecting previously unselected package groff-base.
Unpacking groff-base (from .../groff-base_1.21-8_amd64.deb) ...
Selecting previously unselected package man-db.
Unpacking man-db (from .../man-db_2.6.2-1_amd64.deb) ...
Selecting previously unselected package procps.
Unpacking procps (from .../procps_1%3a3.3.3-2_amd64.deb) ...
Selecting previously unselected package file.
Unpacking file (from .../archives/file_5.11-1_amd64.deb) ...
Selecting previously unselected package gettext-base.
Unpacking gettext-base (from .../gettext-base_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package locales.
Unpacking locales (from .../locales_2.13-33_all.deb) ...
Selecting previously unselected package mime-support.
Unpacking mime-support (from .../mime-support_3.52-1_all.deb) ...
Selecting previously unselected package python2.7-minimal.
Unpacking python2.7-minimal (from .../python2.7-minimal_2.7.3-1_amd64.deb) ...
Selecting previously unselected package python2.7.
Unpacking python2.7 (from .../python2.7_2.7.3-1_amd64.deb) ...
Selecting previously unselected package python-minimal.
Unpacking python-minimal (from .../python-minimal_2.7.3~rc2-1_all.deb) ...
Selecting previously unselected package python.
Unpacking python (from .../python_2.7.3~rc2-1_all.deb) ...
Selecting previously unselected package texinfo.
Unpacking texinfo (from .../texinfo_4.13a.dfsg.1-10_amd64.deb) ...
Selecting previously unselected package autoconf.
Unpacking autoconf (from .../autoconf_2.69-1_all.deb) ...
Selecting previously unselected package guile-1.8-libs.
Unpacking guile-1.8-libs (from .../guile-1.8-libs_1.8.8+1-8_amd64.deb) ...
Selecting previously unselected package libopts25.
Unpacking libopts25 (from .../libopts25_1%3a5.12-0.1_amd64.deb) ...
Selecting previously unselected package libopts25-dev.
Unpacking libopts25-dev (from .../libopts25-dev_1%3a5.12-0.1_amd64.deb) ...
Selecting previously unselected package autogen.
Unpacking autogen (from .../autogen_1%3a5.12-0.1_amd64.deb) ...
Replaced by files in installed package libopts25-dev ...
Selecting previously unselected package autotools-dev.
Unpacking autotools-dev (from .../autotools-dev_20120608.1_all.deb) ...
Selecting previously unselected package automake1.9.
Unpacking automake1.9 (from .../automake1.9_1.9.6+nogfdl-3.1_all.deb) ...
Selecting previously unselected package libbison-dev:amd64.
Unpacking libbison-dev:amd64 (from .../libbison-dev_1%3a2.5.dfsg-2.1_amd64.deb) ...
Selecting previously unselected package bison.
Unpacking bison (from .../bison_1%3a2.5.dfsg-2.1_amd64.deb) ...
Selecting previously unselected package chrpath.
Unpacking chrpath (from .../chrpath_0.13-2_amd64.deb) ...
Selecting previously unselected package html2text.
Unpacking html2text (from .../html2text_1.3.2a-15_amd64.deb) ...
Selecting previously unselected package gettext.
Unpacking gettext (from .../gettext_0.18.1.1-9_amd64.deb) ...
Selecting previously unselected package intltool-debian.
Unpacking intltool-debian (from .../intltool-debian_0.35.0+20060710.1_all.deb) ...
Selecting previously unselected package po-debconf.
Unpacking po-debconf (from .../po-debconf_1.0.16+nmu2_all.deb) ...
Selecting previously unselected package debhelper.
Unpacking debhelper (from .../debhelper_9.20120608_all.deb) ...
Selecting previously unselected package tcl8.5.
Unpacking tcl8.5 (from .../tcl8.5_8.5.11-2_amd64.deb) ...
Selecting previously unselected package expect.
Unpacking expect (from .../expect_5.45-2_amd64.deb) ...
Selecting previously unselected package dejagnu.
Unpacking dejagnu (from .../archives/dejagnu_1.5-3_all.deb) ...
Selecting previously unselected package diffstat.
Unpacking diffstat (from .../diffstat_1.55-3_amd64.deb) ...
Selecting previously unselected package libc6-i386.
Unpacking libc6-i386 (from .../libc6-i386_2.13-33_amd64.deb) ...
Selecting previously unselected package libc6-dev-i386.
Unpacking libc6-dev-i386 (from .../libc6-dev-i386_2.13-33_amd64.deb) ...
Selecting previously unselected package lib32gcc1.
Unpacking lib32gcc1 (from .../lib32gcc1_1%3a4.7.1-1_amd64.deb) ...
Selecting previously unselected package lib32gomp1.
Unpacking lib32gomp1 (from .../lib32gomp1_4.7.1-1_amd64.deb) ...
Selecting previously unselected package lib32itm1.
Unpacking lib32itm1 (from .../lib32itm1_4.7.1-1_amd64.deb) ...
Selecting previously unselected package lib32quadmath0.
Unpacking lib32quadmath0 (from .../lib32quadmath0_4.7.1-1_amd64.deb) ...
Selecting previously unselected package gcc-4.7-multilib.
Unpacking gcc-4.7-multilib (from .../gcc-4.7-multilib_4.7.1-1_amd64.deb) ...
Selecting previously unselected package lib32stdc++6.
Unpacking lib32stdc++6 (from .../lib32stdc++6_4.7.1-1_amd64.deb) ...
Selecting previously unselected package g++-4.7-multilib.
Unpacking g++-4.7-multilib (from .../g++-4.7-multilib_4.7.1-1_amd64.deb) ...
Selecting previously unselected package gcc-multilib.
Unpacking gcc-multilib (from .../gcc-multilib_4%3a4.7.0-6_amd64.deb) ...
Selecting previously unselected package g++-multilib.
Unpacking g++-multilib (from .../g++-multilib_4%3a4.7.0-6_amd64.deb) ...
Selecting previously unselected package libsigsegv2.
Unpacking libsigsegv2 (from .../libsigsegv2_2.9-4_amd64.deb) ...
Selecting previously unselected package gawk.
Unpacking gawk (from .../gawk_1%3a4.0.1+dfsg-2_amd64.deb) ...
Selecting previously unselected package gperf.
Unpacking gperf (from .../gperf_3.0.3-1+b1_amd64.deb) ...
Selecting previously unselected package libppl0.11-dev:amd64.
Unpacking libppl0.11-dev:amd64 (from .../libppl0.11-dev_0.11.2-6_amd64.deb) ...
Selecting previously unselected package libgmp-dev:amd64.
Unpacking libgmp-dev:amd64 (from .../libgmp-dev_2%3a5.0.5+dfsg-2_amd64.deb) ...
Selecting previously unselected package libcloog-ppl-dev:amd64.
Unpacking libcloog-ppl-dev:amd64 (from .../libcloog-ppl-dev_0.15.11-4_amd64.deb) ...
Selecting previously unselected package libmpfr-dev:amd64.
Unpacking libmpfr-dev:amd64 (from .../libmpfr-dev_3.1.0-5_amd64.deb) ...
Selecting previously unselected package libtool.
Unpacking libtool (from .../libtool_2.4.2-1.1_amd64.deb) ...
Selecting previously unselected package lsb-release.
Unpacking lsb-release (from .../lsb-release_4.1+Debian7_all.deb) ...
Selecting previously unselected package patchutils.
Unpacking patchutils (from .../patchutils_0.3.2-1.1_amd64.deb) ...
Selecting previously unselected package quilt.
Unpacking quilt (from .../archives/quilt_0.60-2_all.deb) ...
Selecting previously unselected package realpath.
Unpacking realpath (from .../realpath_1.17_amd64.deb) ...
Selecting previously unselected package sharutils.
Unpacking sharutils (from .../sharutils_1%3a4.11.1-1_amd64.deb) ...
Selecting previously unselected package zlib1g-dev:amd64.
Unpacking zlib1g-dev:amd64 (from .../zlib1g-dev_1%3a1.2.7.dfsg-13_amd64.deb) ...
Selecting previously unselected package autoconf2.59.
Unpacking autoconf2.59 (from .../autoconf2.59_2.59-1_all.deb) ...
Selecting previously unselected package sbuild-build-depends-gcc-4.4-dummy.
Unpacking sbuild-build-depends-gcc-4.4-dummy (from .../sbuild-build-depends-gcc-4.4-dummy.deb) ...
Setting up libncursesw5:amd64 (5.9-9) ...
Setting up libpipeline1:amd64 (1.2.1-1) ...
Setting up libprocps0:amd64 (1:3.3.3-2) ...
Setting up libssl1.0.0:amd64 (1.0.1c-3) ...
Setting up libasprintf0c2:amd64 (0.18.1.1-9) ...
Setting up libmagic1:amd64 (5.11-1) ...
Setting up libpcre3:amd64 (1:8.30-5) ...
Setting up libsqlite3-0:amd64 (3.7.13-1) ...
Setting up libxml2:amd64 (2.8.0+dfsg1-4) ...
Setting up m4 (1.4.16-3) ...
Setting up flex (2.5.35-10) ...
Setting up libgmpxx4ldbl:amd64 (2:5.0.5+dfsg-2) ...
Setting up libppl9:amd64 (0.11.2-6) ...
Setting up libpwl5:amd64 (0.11.2-6) ...
Setting up libppl-c4:amd64 (0.11.2-6) ...
Setting up libcloog-ppl0:amd64 (0.15.11-4) ...
Setting up libglib2.0-0:amd64 (2.32.3-1) ...
No schema files found: doing nothing.
Setting up libcroco3:amd64 (0.6.5-1) ...
Setting up libexpat1:amd64 (2.1.0-1) ...
Setting up libunistring0:amd64 (0.9.3-5) ...
Setting up libgettextpo0:amd64 (0.18.1.1-9) ...
Setting up libltdl7:amd64 (2.4.2-1.1) ...
Setting up bsdmainutils (9.0.3) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode.
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode.
Setting up groff-base (1.21-8) ...
Setting up man-db (2.6.2-1) ...
Building database of manual pages ...
Setting up procps (1:3.3.3-2) ...
update-alternatives: using /usr/bin/w.procps to provide /usr/bin/w (w) in auto mode.
All runlevel operations denied by policy
invoke-rc.d: policy-rc.d denied execution of start.
Setting up file (5.11-1) ...
Setting up gettext-base (0.18.1.1-9) ...
Setting up locales (2.13-33) ...
Generating locales (this might take a while)...
Generation complete.
Setting up mime-support (3.52-1) ...
update-alternatives: using /usr/bin/see to provide /usr/bin/view (view) in auto mode.
Setting up python2.7-minimal (2.7.3-1) ...
Setting up python2.7 (2.7.3-1) ...
Setting up python-minimal (2.7.3~rc2-1) ...
Setting up python (2.7.3~rc2-1) ...
Setting up texinfo (4.13a.dfsg.1-10) ...
Setting up autoconf (2.69-1) ...
Setting up guile-1.8-libs (1.8.8+1-8) ...
Setting up libopts25 (1:5.12-0.1) ...
Setting up libopts25-dev (1:5.12-0.1) ...
Setting up autogen (1:5.12-0.1) ...
Setting up autotools-dev (20120608.1) ...
Setting up automake1.9 (1.9.6+nogfdl-3.1) ...
update-alternatives: using /usr/bin/automake-1.9 to provide /usr/bin/automake (automake) in auto mode.
Setting up libbison-dev:amd64 (1:2.5.dfsg-2.1) ...
Setting up bison (1:2.5.dfsg-2.1) ...
update-alternatives: using /usr/bin/bison.yacc to provide /usr/bin/yacc (yacc) in auto mode.
Setting up chrpath (0.13-2) ...
Setting up html2text (1.3.2a-15) ...
Setting up gettext (0.18.1.1-9) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu2) ...
Setting up debhelper (9.20120608) ...
Setting up tcl8.5 (8.5.11-2) ...
update-alternatives: using /usr/bin/tclsh8.5 to provide /usr/bin/tclsh (tclsh) in auto mode.
Setting up expect (5.45-2) ...
Setting up dejagnu (1.5-3) ...
Setting up diffstat (1.55-3) ...
Setting up libc6-i386 (2.13-33) ...
Setting up libc6-dev-i386 (2.13-33) ...
Setting up lib32gcc1 (1:4.7.1-1) ...
Setting up lib32gomp1 (4.7.1-1) ...
Setting up lib32itm1 (4.7.1-1) ...
Setting up lib32quadmath0 (4.7.1-1) ...
Setting up gcc-4.7-multilib (4.7.1-1) ...
Setting up lib32stdc++6 (4.7.1-1) ...
Setting up g++-4.7-multilib (4.7.1-1) ...
Setting up gcc-multilib (4:4.7.0-6) ...
Setting up g++-multilib (4:4.7.0-6) ...
Setting up libsigsegv2 (2.9-4) ...
Setting up gawk (1:4.0.1+dfsg-2) ...
Setting up gperf (3.0.3-1+b1) ...
install-info: warning: maintainer scripts should not call install-info anymore,
install-info: warning: this is handled now by a dpkg trigger provided by the
install-info: warning: install-info package; package gperf should be updated.
Setting up libppl0.11-dev:amd64 (0.11.2-6) ...
Setting up libgmp-dev:amd64 (2:5.0.5+dfsg-2) ...
Setting up libcloog-ppl-dev:amd64 (0.15.11-4) ...
Setting up libmpfr-dev:amd64 (3.1.0-5) ...
Setting up libtool (2.4.2-1.1) ...
Setting up lsb-release (4.1+Debian7) ...
Setting up patchutils (0.3.2-1.1) ...
Setting up quilt (0.60-2) ...
Setting up realpath (1.17) ...
Setting up sharutils (1:4.11.1-1) ...
Setting up zlib1g-dev:amd64 (1:1.2.7.dfsg-13) ...
Setting up autoconf2.59 (2.59-1) ...
Setting up sbuild-build-depends-gcc-4.4-dummy (0.invalid.0) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-xen-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.22-6.1 dpkg-dev_1.16.4.3 g++-4.6_4.6.3-7 g++-4.7_4.7.1-1 gcc-4.6_4.6.3-7 gcc-4.7_4.7.1-1 libc6-dev_2.13-33 libstdc++6_4.7.1-1 libstdc++6-4.6-dev_4.6.3-7 libstdc++6-4.7-dev_4.7.1-1 linux-libc-dev_3.2.20-1
Package versions: apt_0.9.7 autoconf_2.69-1 autoconf2.59_2.59-1 autogen_1:5.12-0.1 automake1.9_1.9.6+nogfdl-3.1 autotools-dev_20120608.1 base-files_6.11 base-passwd_3.5.25 bash_4.2-2 binutils_2.22-6.1 bison_1:2.5.dfsg-2.1 bsdmainutils_9.0.3 bsdutils_1:2.20.1-5 build-essential_11.5 bzip2_1.0.6-3 chrpath_0.13-2 clang_3.1-6 coreutils_8.13-3.2 cpp_4:4.7.0-6 cpp-4.6_4.6.3-7 cpp-4.7_4.7.1-1 dash_0.5.7-3 debconf_1.5.44 debconf-i18n_1.5.44 debfoster_2.7-1.1 debhelper_9.20120608 debian-archive-keyring_2012.4 debianutils_4.3.1 dejagnu_1.5-3 diffstat_1.55-3 diffutils_1:3.2-6 dpkg_1.16.4.3 dpkg-dev_1.16.4.3 e2fslibs_1.42.4-3 e2fsprogs_1.42.4-3 expect_5.45-2 fakeroot_1.18.4-2 file_5.11-1 findutils_4.4.2-4 flex_2.5.35-10 g++_4:4.7.0-6 g++-4.6_4.6.3-7 g++-4.7_4.7.1-1 g++-4.7-multilib_4.7.1-1 g++-multilib_4:4.7.0-6 gawk_1:4.0.1+dfsg-2 gcc_4:4.7.0-6 gcc-4.4-base_4.4.7-1 gcc-4.5-base_4.5.3-12 gcc-4.6_4.6.3-7 gcc-4.6-base_4.6.3-7 gcc-4.7_4.7.1-1 gcc-4.7-base_4.7.1-1 gcc-4.7-multilib_4.7.1-1 gcc-multilib_4:4.7.0-6 gettext_0.18.1.1-9 gettext-base_0.18.1.1-9 gnupg_1.4.12-4 gperf_3.0.3-1+b1 gpgv_1.4.12-4 grep_2.12-2 groff-base_1.21-8 guile-1.8-libs_1.8.8+1-8 gzip_1.5-1.1 hostname_3.11 html2text_1.3.2a-15 initscripts_2.88dsf-27 insserv_1.14.0-3 intltool-debian_0.35.0+20060710.1 lib32gcc1_1:4.7.1-1 lib32gomp1_4.7.1-1 lib32itm1_4.7.1-1 lib32quadmath0_4.7.1-1 lib32stdc++6_4.7.1-1 libacl1_2.2.51-8 libapt-pkg4.12_0.9.7 libasprintf0c2_0.18.1.1-9 libattr1_1:2.4.46-8 libbison-dev_1:2.5.dfsg-2.1 libblkid1_2.20.1-5 libbz2-1.0_1.0.6-3 libc-bin_2.13-33 libc-dev-bin_2.13-33 libc6_2.13-33 libc6-dev_2.13-33 libc6-dev-i386_2.13-33 libc6-i386_2.13-33 libclang-common-dev_3.1-6 libclass-isa-perl_0.36-3 libcloog-ppl-dev_0.15.11-4 libcloog-ppl0_0.15.11-4 libcomerr2_1.42.4-3 libcroco3_0.6.5-1 libdb5.1_5.1.29-4 libdpkg-perl_1.16.4.3 libexpat1_2.1.0-1 libffi5_3.0.10-3 libfile-fcntllock-perl_0.14-2 libgc1c2_1:7.1-8 libgcc1_1:4.7.1-1 libgdbm3_1.8.3-11 libgettextpo0_0.18.1.1-9 libglib2.0-0_2.32.3-1 libgmp-dev_2:5.0.5+dfsg-2 libgmp10_2:5.0.5+dfsg-2 libgmpxx4ldbl_2:5.0.5+dfsg-2 libgomp1_4.7.1-1 libitm1_4.7.1-1 libllvm3.1_3.1-1 liblocale-gettext-perl_1.05-7+b1 libltdl7_2.4.2-1.1 liblzma5_5.1.1alpha+20120614-1 libmagic1_5.11-1 libmount1_2.20.1-5 libmpc2_0.9-4 libmpfr-dev_3.1.0-5 libmpfr4_3.1.0-5 libncurses5_5.9-9 libncursesw5_5.9-9 libopts25_1:5.12-0.1 libopts25-dev_1:5.12-0.1 libpam-modules_1.1.3-7.1 libpam-modules-bin_1.1.3-7.1 libpam-runtime_1.1.3-7.1 libpam0g_1.1.3-7.1 libpcre3_1:8.30-5 libpipeline1_1.2.1-1 libppl-c4_0.11.2-6 libppl0.11-dev_0.11.2-6 libppl9_0.11.2-6 libprocps0_1:3.3.3-2 libpwl5_0.11.2-6 libquadmath0_4.7.1-1 libreadline6_6.2-8 libselinux1_2.1.9-5 libsemanage-common_2.1.6-6 libsemanage1_2.1.6-6 libsepol1_2.1.4-3 libsigsegv2_2.9-4 libslang2_2.2.4-13 libsqlite3-0_3.7.13-1 libss2_1.42.4-3 libssl1.0.0_1.0.1c-3 libstdc++6_4.7.1-1 libstdc++6-4.6-dev_4.6.3-7 libstdc++6-4.7-dev_4.7.1-1 libswitch-perl_2.16-2 libtext-charwidth-perl_0.04-7+b1 libtext-iconv-perl_1.7-5 libtext-wrapi18n-perl_0.06-7 libtimedate-perl_1.2000-1 libtinfo5_5.9-9 libtool_2.4.2-1.1 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-23 libustr-1.0-1_1.0.4-3 libuuid1_2.20.1-5 libxml2_2.8.0+dfsg1-4 linux-libc-dev_3.2.20-1 locales_2.13-33 login_1:4.1.5.1-1 lsb-base_4.1+Debian7 lsb-release_4.1+Debian7 m4_1.4.16-3 make_3.81-8.2 man-db_2.6.2-1 mawk_1.3.3-17 mime-support_3.52-1 mount_2.20.1-5 multiarch-support_2.13-33 ncurses-base_5.9-9 ncurses-bin_5.9-9 passwd_1:4.1.5.1-1 patch_2.6.1-3 patchutils_0.3.2-1.1 perl_5.14.2-12 perl-base_5.14.2-12 perl-modules_5.14.2-12 po-debconf_1.0.16+nmu2 procps_1:3.3.3-2 python_2.7.3~rc2-1 python-minimal_2.7.3~rc2-1 python2.7_2.7.3-1 python2.7-minimal_2.7.3-1 quilt_0.60-2 readline-common_6.2-8 realpath_1.17 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-gcc-4.4-dummy_0.invalid.0 sed_4.2.1-10 sensible-utils_0.0.7 sharutils_1:4.11.1-1 sysv-rc_2.88dsf-27 sysvinit_2.88dsf-27 sysvinit-utils_2.88dsf-27 tar_1.26-4 tcl8.5_8.5.11-2 texinfo_4.13a.dfsg.1-10 tzdata_2012c-1 ucf_3.0025+nmu3 util-linux_2.20.1-5 xz-utils_5.1.1alpha+20120614-1 zlib1g_1:1.2.7.dfsg-13 zlib1g-dev_1:1.2.7.dfsg-13

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/sbuild-nonexistent/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Tue Mar 13 18:40:31 2012 UTC using DSA key ID 0F932C9C
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./gcc-4.4_4.4.7-1.dsc
dpkg-source: info: extracting gcc-4.4 in gcc-4.4-4.4.7
dpkg-source: info: unpacking gcc-4.4_4.4.7.orig.tar.gz
dpkg-source: info: applying gcc-4.4_4.4.7-1.diff.gz

Check disc space
────────────────

Sufficient free space for build

User Environment
────────────────

HOME=/sbuild-nonexistent
LOGNAME=root
PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/bin/X11
SCHROOT_CHROOT_NAME=unstable-amd64-sbuild
SCHROOT_COMMAND=env
SCHROOT_GID=0
SCHROOT_GROUP=root
SCHROOT_SESSION_ID=unstable-amd64-sbuild-f325c33b-7a09-4790-aed0-024283b9fb55
SCHROOT_UID=0
SCHROOT_USER=root
SHELL=/bin/sh
USER=root

dpkg-buildpackage
─────────────────

dpkg-buildpackage: warning: using a gain-root-command while being root
dpkg-buildpackage: source package gcc-4.4
dpkg-buildpackage: source version 4.4.7-1
dpkg-buildpackage: source changed by Matthias Klose <doko@debian.org>
 dpkg-source --before-build gcc-4.4-4.4.7
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
rm -rf stamps
rm -rf gcc-4.4.7  p  d
/usr/bin/make -f debian/rules2 clean
make[1]: Entering directory `/«PKGBUILDDIR»'
dh_testdir
rm -f pxxx status
rm -f *-summary *-protocol testsuite-comparision summary-diff
if [ -f /«PKGBUILDDIR»/src/gcc/p/config-lang.in.debian ]; then \
	  mv -f /«PKGBUILDDIR»/src/gcc/p/config-lang.in.debian /«PKGBUILDDIR»/src/gcc/p/config-lang.in; \
	else true; fi
rm -f /«PKGBUILDDIR»/src/gcc/po/*.gmo
rm -f debian/lib{gcc,gcj,objc,stdc++}{-v3,[0-9]}*.{{pre,post}{inst,rm},shlibs}
fs=`echo debian/*BV* debian/*GCJ* debian/*CXX* debian/*LC* debian/*MF* | sort -u`; \
	for f in $fs; do \
	  [ -f $f ] || continue; \
	  f2=$(echo $f | sed 's/BV/4.4/;s/PV//;s/CXX/6/;s/LGCJ/10/;s/GCJ/10/;s/LC/1/;s/MF/0/;s/-CRB//;s/\.in$//'); \
	  rm -f $f2; \
	done
rm -f debian/shlibs.local debian/substvars.local
rm -f debian/*.debhelper
[ -d debian/bugs ] && /usr/bin/make -C debian/bugs clean
make[1]: [clean] Error 1 (ignored)
rm -f debian/README.libstdc++-baseline debian/README.Bugs debian/README.Debian
rm -f debian/lib*gcj-bc.shlibs
rm -rf bin locales share
rm -rf check-inst
rm -rf .pc
dh_clean
make[1]: Leaving directory `/«PKGBUILDDIR»'
rm -rf /«PKGBUILDDIR»/src* /«PKGBUILDDIR»/build* debian/tmp* html
rm -f bootstrap-* first-move-stamp
rm -f autotools_files
rm -f debian/*.tmp
rm -f debian/soname-cache
find debian -name '.#*' | xargs -r rm -f
rm -f debian/patches/series*
dh_clean
dpkg-buildpackage: warning: debian/rules must be updated to support the 'build-arch' and 'build-indep' targets (at least 'build-arch' seems to be missing)
 debian/rules build
: # unpack gcc tarball
mkdir stamps
if [ -d /«PKGBUILDDIR»/src ]; then \
	  echo >&2 "Source directory /«PKGBUILDDIR»/src exists. Delete by hand"; \
	  false; \
	fi
rm -rf gcc-4.4.7
case gcc-4.4.7-dfsg.tar.xz in \
	  *.bz2)  tar -x --bzip2 -f gcc-4.4.7-dfsg.tar.xz;; \
	  *.gz)   tar -x --gzip  -f gcc-4.4.7-dfsg.tar.xz;; \
	  *.lzma) lzcat gcc-4.4.7-dfsg.tar.xz | tar -x -f -;; \
	  *.xz) xzcat gcc-4.4.7-dfsg.tar.xz | tar -x -f -;; \
	  *)     false; \
	esac
mv gcc-4.4.7 /«PKGBUILDDIR»/src
rm -f /«PKGBUILDDIR»/src/gcc/doc/*.1
rm -f /«PKGBUILDDIR»/src/gcc/doc/fsf-funding.7
rm -f /«PKGBUILDDIR»/src/gcc/doc/*.info
rm -f /«PKGBUILDDIR»/src/gcc/fortran/*.info
rm -f /«PKGBUILDDIR»/src/libgomp/*.info
rm -f /«PKGBUILDDIR»/src/gcc/java/*.1
rm -f /«PKGBUILDDIR»/src/gcc/java/*.info
touch /«PKGBUILDDIR»/src/gcc/doc/plugins.texi
for i in gcc/doc/arm-neon-intrinsics.texi gcc/doc/bugreport.texi gcc/doc/c-tree.texi gcc/doc/cfg.texi gcc/doc/collect2.texi gcc/doc/compat.texi gcc/doc/configfiles.texi gcc/doc/configterms.texi gcc/doc/contrib.texi gcc/doc/contribute.texi gcc/doc/cpp.texi gcc/doc/cppenv.texi gcc/doc/cppinternals.texi gcc/doc/cppopts.texi gcc/doc/extend.texi gcc/doc/fragments.texi gcc/doc/frontends.texi gcc/doc/gccint.texi gcc/doc/gcov.texi gcc/doc/generic.texi gcc/doc/gimple.texi gcc/doc/gnu.texi gcc/doc/gty.texi gcc/doc/headerdirs.texi gcc/doc/hostconfig.texi gcc/doc/implement-c.texi gcc/doc/install-old.texi gcc/doc/install.texi gcc/doc/interface.texi gcc/doc/invoke.texi gcc/doc/languages.texi gcc/doc/libgcc.texi gcc/doc/loop.texi gcc/doc/makefile.texi gcc/doc/md.texi gcc/doc/objc.texi gcc/doc/options.texi gcc/doc/passes.texi gcc/doc/plugins.texi gcc/doc/portability.texi gcc/doc/rtl.texi gcc/doc/service.texi gcc/doc/sourcebuild.texi gcc/doc/standards.texi gcc/doc/tm.texi gcc/doc/tree-ssa.texi gcc/doc/trouble.texi gcc/doc/include/gcc-common.texi gcc/doc/include/funding.texi gcc/fortran/gfc-internals.texi gcc/fortran/invoke.texi gcc/fortran/intrinsic.texi ; do \
	  if [ -f /«PKGBUILDDIR»/src/$i ]; then \
	    cp debian/dummy.texi /«PKGBUILDDIR»/src/$i; \
	  else \
	    echo >&2 "$i does not exist, fix debian/rules.unpack"; \
	  fi; \
	done
for i in gcc/doc/gcc.texi gcc/java/gcj.texi gcc/ada/gnat-style.texi gcc/ada/gnat_rm.texi gcc/ada/gnat_ugn.texi gcc/fortran/gfortran.texi libgomp/libgomp.texi ; do \
	  n=$(basename $i .texi); \
	  if [ -f /«PKGBUILDDIR»/src/$i ]; then \
	    sed "s/@name@/$n/g" debian/gcc-dummy.texi \
	      > /«PKGBUILDDIR»/src/$i; \
	  else \
	    echo >&2 "$i does not exist, fix debian/rules.unpack"; \
	  fi; \
	done
for i in gcc/doc/cpp.1 gcc/doc/g++.1 gcc/doc/gc-analyze.1 gcc/doc/gcc.1 gcc/doc/gcj.1 gcc/doc/gcj-dbtool.1 gcc/doc/gcjh.1 gcc/doc/gcov.1 gcc/doc/gfortran.1 gcc/doc/gij.1 gcc/doc/grmic.1 gcc/doc/grmiregistry.1 gcc/doc/jcf-dump.1 gcc/doc/jv-convert.1 gcc/doc/fsf-funding.7 ; do \
	  touch /«PKGBUILDDIR»/src/$i; \
	done
rm -f /«PKGBUILDDIR»/src/INSTALL/*.html
echo "gcc-4.4.7-dfsg.tar.xz unpacked." > stamps/01-unpack-stamp-gcc-4.4.7-dfsg.tar.xz
echo -e "\nBuilt from Debian source package gcc-4.4-4.4.7-1" \
		> pxxx
echo -e "Integrated upstream packages in this version:\n" >> pxxx
for i in gcc-4.4.7-dfsg.tar.xz ; do echo "  $i" >> pxxx; done
mv -f pxxx stamps/01-unpack-stamp
echo gcc-textdomain.diff gcc-driver-extra-langs.diff gcc-hash-style-both.diff gcc-no-add-needed.diff gcc-build-id.diff libstdc++-pic.diff libstdc++-doclink.diff libstdc++-man-3cxx.diff libjava-stacktrace.diff libjava-subdir.diff libjava-jnipath.diff libjava-sjlj.diff libjava-disable-plugin.diff alpha-no-ev4-directive.diff boehm-gc-getnprocs.diff note-gnu-stack.diff pr25509.diff pr38333.diff gcc-cloog-dl.diff libgomp-omp_h-multilib.diff sparc-force-cpu.diff gcc-stack_chk_fail-check.diff sh4_atomic_update.diff libstdc++-arm-wno-abi.diff gold-and-ld.diff libstdc++-test-installed.diff pr40816.diff gnat-snapshot-build-fix.diff gcc-java-align-data.diff linux-atomic-builtin-expect.diff mips-fix-loongson2f-nop.diff gcc-system-root.diff no_fpr_in_libgcc.diff pr44364.diff gcc-lfs.diff pr50090.diff arm-dynamic-linker.diff libjava-atomic-builtins-eabi.diff pr39429.diff rev146451.diff gcc-unwind-debug-hook.diff pr40521-revert-workaround.diff pr41848.diff gcc-arm-thumb2-sched.diff arm-boehm-gc-locks.diff gcj-use-atomic-builtins.diff sh4-scheduling.diff pr42748.diff pr43323.diff pr42321.diff libsupc++-vmi_class_type_info.diff gcc-m68k-support-for-tls-backport.diff pr44626.diff arm-thumb2-speedup-division.diff gcc-arm-implicit-it.diff pr39491.diff deb-protoize.diff gcc-d-lang.diff gcc-arm-earlyclobbers.diff pr40133.diff pr40134.diff gcc-ice-hack.diff gcc-ice-apport.diff libjava-disable-static.diff libjava-fixed-symlinks.diff ada-arm-eabi.diff ada-mips.diff arm-unbreak-eabi-armv4t.diff gcc-multiarch.diff gcc-multiarch-fsf.diff libjava-multiarch.diff gcc-powerpc-nof.diff libjava-nobiarch-check.diff config-ml.diff mips-triarch.diff gcc-multilib64-multiarch.diff \
	  | sed -r 's/  +/ /g' | tr " " "\n" > debian/patches/series
sed -r 's/(.)$/\1 -p1/' -i debian/patches/series
touch stamps/02-series-stamp
QUILT_PATCHES=debian/patches \
	  quilt --quiltrc /dev/null push -a || test $? = 2
Applying patch gcc-textdomain.diff
patching file src/gcc/Makefile.in
Hunk #1 succeeded at 4752 (offset -40 lines).
patching file src/gcc/intl.c
patching file src/libcpp/Makefile.in
Hunk #1 succeeded at 46 (offset -1 lines).
Hunk #2 succeeded at 67 (offset -1 lines).
Hunk #3 succeeded at 159 (offset -1 lines).
patching file src/libcpp/init.c
Hunk #1 succeeded at 133 (offset 1 line).
patching file src/libcpp/system.h
Hunk #1 succeeded at 259 (offset -1 lines).

Applying patch gcc-driver-extra-langs.diff
patching file src/gcc/Makefile.in

Applying patch gcc-hash-style-both.diff
patching file src/gcc/config/alpha/linux-elf.h
patching file src/gcc/config/i386/linux.h
patching file src/gcc/config/i386/linux64.h
Hunk #1 succeeded at 75 (offset 5 lines).
patching file src/gcc/config/ia64/linux.h
patching file src/gcc/config/rs6000/linux64.h
Hunk #1 succeeded at 357 (offset 5 lines).
patching file src/gcc/config/rs6000/sysv4.h
Hunk #1 succeeded at 909 (offset 3 lines).
patching file src/gcc/config/s390/linux.h
patching file src/gcc/config/sparc/linux.h
patching file src/gcc/config/sparc/linux64.h
patching file src/gcc/config/arm/linux-elf.h

Applying patch gcc-no-add-needed.diff
patching file src/gcc/config/rs6000/sysv4.h
Hunk #1 succeeded at 914 (offset -2 lines).
patching file src/gcc/config/alpha/elf.h
Hunk #1 succeeded at 421 (offset -2 lines).
patching file src/gcc/config/ia64/linux.h
Hunk #1 succeeded at 56 (offset -24 lines).
patching file src/gcc/config/linux.h

Applying patch gcc-build-id.diff
patching file src/gcc/configure.ac
Hunk #1 succeeded at 3610 with fuzz 2 (offset 100 lines).
patching file src/gcc/gcc.c
Hunk #1 succeeded at 717 (offset -13 lines).
Hunk #2 succeeded at 1838 (offset -13 lines).
patching file src/gcc/config.in
Hunk #2 succeeded at 1038 (offset 7 lines).

Applying patch libstdc++-pic.diff
patching file src/libstdc++-v3/src/Makefile.am
Hunk #1 succeeded at 356 (offset 4 lines).
patching file src/libstdc++-v3/src/Makefile.in
Hunk #3 succeeded at 948 (offset 5 lines).

Applying patch libstdc++-doclink.diff
patching file src/libstdc++-v3/doc/doxygen/mainpage.html
patching file src/libstdc++-v3/doc/xml/api.xml
patching file src/libstdc++-v3/doc/html/api.html

Applying patch libstdc++-man-3cxx.diff
patching file src/libstdc++-v3/doc/doxygen/user.cfg.in
patching file src/libstdc++-v3/scripts/run_doxygen

Applying patch libjava-stacktrace.diff
patching file src/libjava/stacktrace.cc

Applying patch libjava-subdir.diff
patching file src/gcc/java/Make-lang.in
Hunk #1 succeeded at 308 (offset -12 lines).
patching file src/libjava/Makefile.am
patching file src/libjava/Makefile.in
Hunk #1 succeeded at 798 (offset -89 lines).
Hunk #2 succeeded at 820 (offset -89 lines).
Hunk #3 succeeded at 875 (offset -89 lines).
patching file src/libjava/classpath/configure.ac
patching file src/libjava/configure.ac
Hunk #2 succeeded at 1494 (offset 24 lines).
Hunk #3 succeeded at 1505 (offset 24 lines).
Hunk #4 succeeded at 1513 (offset 24 lines).
patching file src/libjava/testsuite/Makefile.am
patching file src/libjava/testsuite/Makefile.in
Hunk #1 succeeded at 372 (offset -1 lines).
Hunk #2 succeeded at 620 (offset -1 lines).
Hunk #3 succeeded at 636 (offset -1 lines).
patching file src/libjava/testsuite/lib/libjava.exp

Applying patch libjava-jnipath.diff
patching file src/libjava/configure.ac
Hunk #1 succeeded at 1442 (offset -46 lines).
patching file src/libjava/Makefile.am
Hunk #1 succeeded at 159 (offset -165 lines).
patching file src/libjava/Makefile.in
Hunk #2 succeeded at 868 (offset -227 lines).
patching file src/libjava/gnu/classpath/natSystemProperties.cc

Applying patch libjava-sjlj.diff
patching file src/libjava/sysdep/generic/backtrace.h

Applying patch libjava-disable-plugin.diff
patching file src/libjava/configure.ac

Applying patch alpha-no-ev4-directive.diff
patching file src/gcc/config/alpha/alpha.c
Hunk #1 succeeded at 9443 (offset 22 lines).
Hunk #2 succeeded at 9453 (offset 22 lines).

Applying patch boehm-gc-getnprocs.diff
patching file src/boehm-gc/pthread_support.c

Applying patch note-gnu-stack.diff
patching file src/boehm-gc/ia64_save_regs_in_stack.s
patching file src/boehm-gc/ia64_save_regs_in_stack.S
patching file src/gcc/config/ia64/crtbegin.asm
Hunk #1 succeeded at 252 (offset -3 lines).
patching file src/gcc/config/ia64/crtend.asm
Hunk #1 succeeded at 119 (offset -3 lines).
patching file src/gcc/config/ia64/crti.asm
Hunk #1 succeeded at 51 (offset -11 lines).
patching file src/gcc/config/ia64/crtn.asm
Hunk #1 succeeded at 41 (offset -11 lines).
patching file src/gcc/config/ia64/lib1funcs.asm
Hunk #1 succeeded at 793 (offset -3 lines).
patching file src/gcc/config/ia64/linux.h
patching file src/gcc/config/rs6000/ppc-asm.h
patching file src/libffi/src/ia64/unix.S
patching file src/libffi/src/powerpc/linux64.S
patching file src/libffi/src/powerpc/linux64_closure.S

Applying patch pr25509.diff
patching file src/gcc/testsuite/g++.dg/warn/unused-result1-Werror.c
patching file src/gcc/c.opt
patching file src/gcc/c-common.c
Hunk #1 succeeded at 7561 (offset -6 lines).

Applying patch pr38333.diff
patching file src/gcc/ada/sem_prag.adb
patching file src/gcc/testsuite/gnat.dg/specs/import_abstract.ads

Applying patch gcc-cloog-dl.diff
patching file src/gcc/Makefile.in
Hunk #1 succeeded at 914 (offset -1 lines).
Hunk #2 succeeded at 3061 (offset -15 lines).
patching file src/gcc/graphite.c
Hunk #2 succeeded at 4179 (offset 56 lines).
Hunk #3 succeeded at 6213 (offset 48 lines).

Applying patch libgomp-omp_h-multilib.diff
patching file src/libgomp/omp.h.in
Hunk #1 succeeded at 39 (offset -3 lines).

Applying patch sparc-force-cpu.diff
patching file src/gcc/config.gcc
Hunk #1 succeeded at 3181 (offset 25 lines).

Applying patch gcc-stack_chk_fail-check.diff
patching file src/gcc/configure.ac
Hunk #1 succeeded at 3676 (offset 82 lines).

Applying patch sh4_atomic_update.diff
patching file src/gcc/config/sh/linux-atomic.asm

Applying patch libstdc++-arm-wno-abi.diff
patching file src/libstdc++-v3/testsuite/lib/libstdc++.exp
Hunk #1 succeeded at 237 (offset -28 lines).

Applying patch gold-and-ld.diff
patching file src/gcc/gcc.c
Hunk #1 succeeded at 733 (offset 7 lines).
patching file src/gcc/opts.c
patching file src/gcc/configure.ac
patching file src/gcc/exec-tool.in
patching file src/gcc/common.opt
patching file src/gcc/collect2.c
patching file src/configure.ac

Applying patch libstdc++-test-installed.diff
patching file src/libstdc++-v3/testsuite/lib/libstdc++.exp

Applying patch pr40816.diff
patching file src/libjava/include/jni_md.h

Applying patch gnat-snapshot-build-fix.diff
patching file src/gcc/ada/uintp.adb

Applying patch gcc-java-align-data.diff
patching file src/gcc/java/class.c

Applying patch linux-atomic-builtin-expect.diff
patching file src/gcc/config/arm/linux-atomic.c

Applying patch mips-fix-loongson2f-nop.diff
patching file src/gcc/config/mips/mips.h

Applying patch gcc-system-root.diff
patching file src/gcc/configure.ac
Hunk #1 succeeded at 738 (offset -13 lines).

Applying patch no_fpr_in_libgcc.diff
patching file src/gcc/config/rs6000/crtresfpr.asm
patching file src/gcc/config/rs6000/crtresxfpr.asm
patching file src/gcc/config/rs6000/crtsavfpr.asm

Applying patch pr44364.diff
patching file src/gcc/caller-save.c
patching file src/gcc/config/rs6000/e500.h

Applying patch gcc-lfs.diff
patching file src/gcc/configure.ac
patching file src/gcc/config.in
Hunk #1 succeeded at 1542 (offset -4 lines).
patching file src/gcc/Makefile.in
Hunk #1 succeeded at 3454 (offset -3 lines).
patching file src/libcpp/configure.ac
patching file src/libcpp/config.in

Applying patch pr50090.diff
patching file src/gcc/config/arm/bpabi.h
Hunk #1 succeeded at 78 (offset 50 lines).

Applying patch arm-dynamic-linker.diff
patching file src/gcc/config/arm/linux-elf.h

Applying patch libjava-atomic-builtins-eabi.diff
patching file src/libjava/configure.host
Hunk #2 succeeded at 89 (offset 1 line).
patching file src/libjava/configure.ac
Hunk #1 succeeded at 1467 (offset 20 lines).
patching file src/libjava/sysdep/arm/locks.h
patching file src/libjava/libgcj.spec.in

Applying patch pr39429.diff
patching file src/gcc/config/arm/arm.c
Hunk #1 succeeded at 7413 (offset 12 lines).
patching file src/gcc/testsuite/gcc.target/arm/pr39429.c

Applying patch rev146451.diff
patching file src/gcc/config/arm/arm.c
Hunk #1 succeeded at 5470 (offset 12 lines).

Applying patch gcc-unwind-debug-hook.diff
patching file src/gcc/unwind-dw2.c

Applying patch pr40521-revert-workaround.diff
patching file src/gcc/config/arm/arm.c
Hunk #1 succeeded at 1656 (offset 5 lines).

Applying patch pr41848.diff
patching file src/gcc/objc/lang-specs.h
patching file src/gcc/testsuite/objc/execute/forward-1.x
Hunk #1 succeeded at 4 (offset -2 lines).

Applying patch gcc-arm-thumb2-sched.diff
patching file src/gcc/config/arm/arm.c
Hunk #1 succeeded at 1621 (offset 5 lines).
patching file src/gcc/config/arm/arm.md
patching file src/gcc/config/arm/arm.h

Applying patch arm-boehm-gc-locks.diff
patching file src/boehm-gc/include/private/gc_locks.h
Hunk #1 succeeded at 221 (offset 14 lines).
Hunk #2 succeeded at 239 (offset 14 lines).

Applying patch gcj-use-atomic-builtins.diff
patching file src/gcc/java/builtins.c
patching file src/gcc/java/jvspec.c
patching file src/gcc/java/lang.opt
patching file src/gcc/java/java-tree.h

Applying patch sh4-scheduling.diff
patching file src/gcc/config/sh/sh.h
Hunk #1 succeeded at 712 (offset 3 lines).
Hunk #2 succeeded at 729 (offset 3 lines).

Applying patch pr42748.diff
patching file src/gcc/testsuite/g++.dg/abi/arm_va_list2.C
patching file src/gcc/testsuite/g++.dg/abi/arm_va_list2.h
patching file src/gcc/config/arm/arm.c
Hunk #1 succeeded at 19614 (offset -1758 lines).

Applying patch pr43323.diff
patching file src/gcc/gimple.h
patching file src/gcc/testsuite/gcc.c-torture/execute/bitfld-5.c
patching file src/gcc/testsuite/gcc.c-torture/execute/pr43323.c
patching file src/gcc/tree-ssa.c
patching file src/gcc/tree.c
Hunk #1 succeeded at 9098 (offset 4 lines).
patching file src/gcc/tree.h

Applying patch pr42321.diff
patching file src/gcc/config/arm/arm.c
Hunk #1 succeeded at 12213 (offset -1518 lines).

Applying patch libsupc++-vmi_class_type_info.diff
patching file src/gcc/testsuite/g++.dg/rtti/dyncast3.C
patching file src/gcc/testsuite/g++.dg/rtti/dyncast4.C
patching file src/libstdc++-v3/libsupc++/vmi_class_type_info.cc
patching file src/libstdc++-v3/libsupc++/dyncast.cc

Applying patch gcc-m68k-support-for-tls-backport.diff
patching file src/gcc/config/m68k/constraints.md
Hunk #1 succeeded at 124 (offset -5 lines).
patching file src/gcc/config/m68k/m68k-protos.h
Hunk #1 succeeded at 60 (offset 1 line).
patching file src/gcc/config/m68k/m68k.c
Hunk #2 succeeded at 151 (offset 6 lines).
Hunk #3 succeeded at 254 (offset 3 lines).
Hunk #4 succeeded at 1160 (offset 1 line).
Hunk #5 succeeded at 1786 (offset -76 lines).
Hunk #6 succeeded at 1814 (offset -76 lines).
Hunk #7 succeeded at 1881 (offset -76 lines).
Hunk #8 succeeded at 2036 (offset -76 lines).
Hunk #9 succeeded at 2324 (offset -76 lines).
Hunk #10 succeeded at 2345 (offset -76 lines).
Hunk #11 succeeded at 4370 (offset -81 lines).
Hunk #12 succeeded at 4545 (offset -81 lines).
Hunk #13 succeeded at 4579 (offset -81 lines).
Hunk #14 succeeded at 5087 (offset -61 lines).
Hunk #15 succeeded at 5354 (offset -61 lines).
Hunk #16 succeeded at 6300 (offset -61 lines).
patching file src/gcc/config/m68k/m68k.h
Hunk #1 succeeded at 751 (offset 1 line).
Hunk #2 succeeded at 1029 (offset 61 lines).
patching file src/gcc/config/m68k/m68k.md
Hunk #2 succeeded at 780 (offset -90 lines).
Hunk #3 succeeded at 2373 (offset -90 lines).
Hunk #4 succeeded at 2417 (offset -90 lines).
patching file src/gcc/config/m68k/m68k.opt
patching file src/gcc/config/m68k/predicates.md
Hunk #1 succeeded at 130 (offset -5 lines).
patching file src/gcc/configure
Hunk #1 succeeded at 22188 (offset 204 lines).
patching file src/gcc/configure.ac
Hunk #1 succeeded at 2649 (offset 79 lines).
patching file src/gcc/testsuite/gcc.target/m68k/tls-gd-xgot.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-gd.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-ie-xgot.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-ie.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-ld-xgot-xtls.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-ld-xgot.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-ld-xtls.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-ld.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-le-xtls.c
patching file src/gcc/testsuite/gcc.target/m68k/tls-le.c
patching file src/gcc/config/m68k/m68k.h

Applying patch pr44626.diff
patching file src/gcc/config/arm/arm.c
Hunk #1 succeeded at 13862 (offset -1 lines).
patching file src/gcc/config/arm/arm.md
patching file src/gcc/config/arm/constraints.md
patching file src/gcc/config/arm/thumb2.md
patching file src/gcc/config/arm/vfp.md

Applying patch arm-thumb2-speedup-division.diff
patching file src/gcc/config/arm/lib1funcs.asm

Applying patch gcc-arm-implicit-it.diff
patching file src/gcc/config/arm/elf.h

Applying patch pr39491.diff
patching file src/libstdc++-v3/src/math_stubs_long_double.cc
Hunk #1 succeeded at 221 (offset 8 lines).
patching file src/libstdc++-v3/config/abi/pre/gnu.ver
Hunk #1 succeeded at 649 (offset 14 lines).

Applying patch deb-protoize.diff
patching file src/gcc/Makefile.in
Hunk #2 succeeded at 3505 (offset 4 lines).

Applying patch gcc-d-lang.diff
patching file src/gcc/d/lang.opt
patching file src/gcc/d/lang-specs.h

Applying patch gcc-arm-earlyclobbers.diff
patching file src/gcc/config/arm/arm.md
Hunk #1 succeeded at 3134 (offset -188 lines).
Hunk #2 succeeded at 3193 (offset -188 lines).
Hunk #3 succeeded at 3249 (offset -189 lines).

Applying patch pr40133.diff
patching file src/libstdc++-v3/acinclude.m4
Hunk #1 succeeded at 2429 (offset -9 lines).
Hunk #2 succeeded at 2441 (offset -9 lines).
Hunk #3 succeeded at 2576 (offset -9 lines).
Hunk #4 succeeded at 2606 (offset -9 lines).
Hunk #5 succeeded at 2637 (offset -9 lines).
Hunk #6 succeeded at 2667 (offset -9 lines).

Applying patch pr40134.diff
patching file src/gcc/config.gcc
Hunk #1 succeeded at 906 (offset 6 lines).
Hunk #2 succeeded at 1758 (offset 13 lines).
Hunk #3 succeeded at 1869 (offset 13 lines).
Hunk #4 succeeded at 1877 (offset 13 lines).
patching file src/gcc/config/pa/pa-linux.h

Applying patch gcc-ice-hack.diff
patching file src/gcc/Makefile.in
Hunk #1 succeeded at 181 with fuzz 1.
patching file src/gcc/diagnostic.c
patching file src/gcc/gcc.c
Hunk #2 succeeded at 3036 (offset 18 lines).
Hunk #3 succeeded at 3093 (offset 18 lines).
Hunk #4 succeeded at 3123 (offset 18 lines).
Hunk #5 succeeded at 6142 (offset 18 lines).

Applying patch gcc-ice-apport.diff
patching file src/gcc/gcc.c
Hunk #1 succeeded at 6343 (offset 18 lines).

Applying patch libjava-disable-static.diff
patching file src/Makefile.in
Hunk #1 succeeded at 49850 (offset 387 lines).
Hunk #2 succeeded at 50734 (offset 387 lines).

Applying patch libjava-fixed-symlinks.diff
patching file src/libjava/Makefile.am
Hunk #1 succeeded at 582 (offset 2 lines).
patching file src/libjava/Makefile.in
Hunk #1 succeeded at 12199 (offset -234 lines).

Applying patch ada-arm-eabi.diff
patching file src/gcc/ada/gcc-interface/Makefile.in
patching file src/gcc/ada/system-linux-armel.ads
patching file src/gcc/ada/system-linux-armeb.ads

Applying patch ada-mips.diff
patching file src/gcc/ada/gcc-interface/Makefile.in
Hunk #1 succeeded at 1452 (offset 20 lines).

Applying patch arm-unbreak-eabi-armv4t.diff
patching file src/gcc/config/arm/linux-eabi.h

Applying patch gcc-multiarch.diff
patching file src/gcc/common.opt
patching file src/gcc/cppdefault.h
patching file src/gcc/gcc.c
Hunk #11 succeeded at 6850 (offset -64 lines).
Hunk #12 succeeded at 7862 (offset -64 lines).
Hunk #13 succeeded at 7943 (offset -64 lines).
patching file src/gcc/cppdefault.c
patching file src/gcc/config/s390/t-linux64
patching file src/gcc/config/pa/t-linux
patching file src/gcc/config/rs6000/t-linux64
patching file src/gcc/config/mips/t-linux64
patching file src/gcc/config/sparc/t-linux64
patching file src/gcc/config/sparc/t-linux
patching file src/gcc/config/ia64/t-glibc
patching file src/gcc/config/m68k/t-linux
patching file src/gcc/config/alpha/t-linux
patching file src/gcc/config/i386/t-linux64
patching file src/gcc/config/i386/t-linux
patching file src/gcc/Makefile.in
patching file src/gcc/incpath.c
patching file src/gcc/config/arm/t-linux-eabi
patching file src/gcc/config/i386/t-gnu
patching file src/gcc/config/i386/t-kfreebsd
patching file src/gcc/configure.ac
patching file src/gcc/config/rs6000/t-spe
Hunk #1 succeeded at 66 (offset -18 lines).
patching file src/gcc/config/sh/t-linux
Hunk #1 succeeded at 7 with fuzz 1 (offset 1 line).
patching file src/gcc/config.gcc
Hunk #1 succeeded at 1867 (offset -4 lines).
Hunk #2 succeeded at 3092 (offset -4 lines).
patching file src/gcc/config/rs6000/t-linux
patching file src/gcc/config/s390/t-linux

Applying patch gcc-multiarch-fsf.diff
patching file src/gcc/genmultilib
patching file src/gcc/Makefile.in

Applying patch libjava-multiarch.diff
patching file src/libjava/classpath/m4/acinclude.m4
patching file src/libjava/configure.ac
patching file src/libjava/Makefile.am
patching file src/libjava/Makefile.in

Applying patch gcc-powerpc-nof.diff
patching file src/gcc/config/rs6000/t-linux64
Hunk #1 succeeded at 14 (offset -17 lines).

Applying patch libjava-nobiarch-check.diff
patching file src/libjava/testsuite/Makefile.in
patching file src/libffi/testsuite/Makefile.in
Hunk #1 succeeded at 289 (offset -146 lines).

Applying patch config-ml.diff
patching file src/config-ml.in

Applying patch mips-triarch.diff
patching file src/gcc/config.gcc
patching file src/gcc/config/mips/linux64.h
patching file src/gcc/config/mips/t-linux

Applying patch gcc-multilib64-multiarch.diff
patching file src/gcc/config/s390/t-linux64
patching file src/gcc/config/rs6000/t-linux64
Hunk #1 succeeded at 17 (offset -17 lines).
patching file src/gcc/config/sparc/t-linux64
patching file src/gcc/config/i386/t-linux64
Hunk #1 succeeded at 7 with fuzz 2 (offset -18 lines).

Now at patch gcc-multilib64-multiarch.diff
if ! test -f ./autotools_files ; then touch ./autotools_files ; fi
cd /«PKGBUILDDIR»/src/fixincludes && ./genfixes
AutoGen appears to be out of date or not correctly installed.
Please download and install:
   ftp://gcc.gnu.org/pub/gcc/infrastructure/autogen.tar.gz
rm -f /«PKGBUILDDIR»/src/gcc/gengtype-lex.c
for f in ./src/Makefile.in ./src/configure.ac ./src/gcc/Makefile.in ./src/gcc/ada/gcc-interface/Makefile.in ./src/gcc/configure.ac ./src/libcpp/Makefile.in ./src/libcpp/configure.ac ./src/libffi/testsuite/Makefile.in ./src/libjava/Makefile.am ./src/libjava/Makefile.in ./src/libjava/classpath/configure.ac ./src/libjava/classpath/m4/acinclude.m4 ./src/libjava/configure.ac ./src/libjava/testsuite/Makefile.am ./src/libjava/testsuite/Makefile.in ./src/libstdc++-v3/acinclude.m4 ./src/libstdc++-v3/src/Makefile.am ./src/libstdc++-v3/src/Makefile.in ; \
	  do case $f in \
	    */classpath/m4/acinclude.m4) \
		: ;; \
	    */configure.*|*/acinclude.m4) \
		if grep ^"$(md5sum $f)"$ ./autotools_files >/dev/null ; \
		  then echo "Skipping already regenerated file $f." ; \
		else \
		  echo "Running autoconf2.59 in $(dirname $f)..." ; \
		  dir="/«PKGBUILDDIR»"; cd /«PKGBUILDDIR»/$(dirname $f) \
		    && AUTOM4TE=/usr/bin/autom4te2.59 autoconf2.59 \
		    && cd $dir \
		    && echo "$(md5sum $f)" >> ./autotools_files ; \
		fi ;; \
	    */Makefile.*) ;; \
	    *) echo "Unknown file: $f"; false; \
	  esac; \
	done
Running autoconf2.59 in ./src...
Running autoconf2.59 in ./src/gcc...
Running autoconf2.59 in ./src/libcpp...
Running autoconf2.59 in ./src/libjava/classpath...
Running autoconf2.59 in ./src/libjava...
Running autoconf2.59 in ./src/libstdc++-v3...
for i in   gcc-textdomain gcc-driver-extra-langs gcc-hash-style-both gcc-no-add-needed gcc-build-id libstdc++-pic libstdc++-doclink libstdc++-man-3cxx libjava-stacktrace libjava-subdir libjava-jnipath libjava-sjlj libjava-disable-plugin alpha-no-ev4-directive boehm-gc-getnprocs note-gnu-stack pr25509 pr38333 gcc-cloog-dl libgomp-omp_h-multilib sparc-force-cpu gcc-stack_chk_fail-check sh4_atomic_update libstdc++-arm-wno-abi gold-and-ld libstdc++-test-installed pr40816 gnat-snapshot-build-fix gcc-java-align-data linux-atomic-builtin-expect mips-fix-loongson2f-nop gcc-system-root no_fpr_in_libgcc pr44364 gcc-lfs pr50090 arm-dynamic-linker  libjava-atomic-builtins-eabi pr39429 rev146451 gcc-unwind-debug-hook pr40521-revert-workaround pr41848 gcc-arm-thumb2-sched arm-boehm-gc-locks gcj-use-atomic-builtins sh4-scheduling pr42748 pr43323 pr42321 libsupc++-vmi_class_type_info gcc-m68k-support-for-tls-backport pr44626 arm-thumb2-speedup-division gcc-arm-implicit-it  pr39491 deb-protoize gcc-d-lang gcc-arm-earlyclobbers pr40133 pr40134  gcc-ice-hack gcc-ice-apport libjava-disable-static libjava-fixed-symlinks ada-arm-eabi ada-mips arm-unbreak-eabi-armv4t gcc-multiarch gcc-multiarch-fsf libjava-multiarch gcc-powerpc-nof libjava-nobiarch-check config-ml mips-triarch gcc-multilib64-multiarch; do \
	  echo -e "\n$i:" >> pxxx; \
	  sed -n 's/^# *DP: */  /p' debian/patches/$i.diff >> pxxx; \
	done
mv pxxx stamps/02-patch-stamp
mkdir -p stamps
/usr/bin/make -f debian/rules.conf control
make[1]: Entering directory `/«PKGBUILDDIR»'
echo "addons: gccbase cdev c++dev fdev objcdev source objppdev multilib mudflap libs source proto"; \
	m4 -DBINUTILSV=2.20.1-15~ -DSRCNAME=gcc-4.4 -D__x86_64__ -DARCH=amd64 -DDIST=Debian -DLIBC_DEV_DEP="libc6-dev (>= 2.13-5)" -DLIBC_BIARCH_BUILD_DEP="libc6-dev-amd64 [i386], libc6-dev-sparc64 [sparc], libc6-dev-s390 [s390x], libc6-dev-s390x [s390], libc6-dev-i386 [amd64], libc6-dev-powerpc [ppc64], libc6-dev-ppc64 [powerpc], libc0.1-dev-i386 [kfreebsd-amd64], lib32gcc1 [amd64 ppc64 kfreebsd-amd64 s390x], lib64gcc1 [i386 powerpc sparc s390], libc6-dev-mips64 [mips mipsel], libc6-dev-mipsn32 [mips mipsel]," -DFORTRAN_BUILD_DEP="" -DGNAT_BUILD_DEP="" -DJAVA_BUILD_DEP="" -DJAVA_BUILD_INDEP=", " -DLIBSTDCXX_BUILD_INDEP="doxygen (>= 1.4.2), graphviz (>= 2.2), gsfonts-x11, texlive-latex-base" -DPASCAL_BUILD_DEP="" -DGDC_BUILD_DEP="" -DSPU_BUILD_DEP="binutils-spu (>= 2.20.1-15~) [powerpc ppc64], newlib-spu (>= 1.16.0) [powerpc ppc64]," -DBINUTILS_BUILD_DEP="binutils (>= 2.20.1-15~) | binutils-multiarch (>= 2.20.1-15~)" -DLIBC_BUILD_DEP="libc6.1-dev (>= 2.13-5) [alpha ia64] | libc0.3-dev (>= 2.13-5) [hurd-i386] | libc0.1-dev (>= 2.13-5) [kfreebsd-i386 kfreebsd-amd64] | libc6-dev (>= 2.13-5)" -DCHECK_BUILD_DEP="dejagnu [!m68k !hurd-i386 !hurd-alpha], autogen," -DAUTO_BUILD_DEP="m4, libtool, autoconf2.59, automake1.9," -DAUTOGEN_BUILD_DEP="" -DCLOOG_BUILD_DEP="libcloog-ppl-dev (>= 0.15.8-1~)," -DGMP_BUILD_DEP="libgmp-dev (>= 2:5.0.1~)," -DMPFR_BUILD_DEP="libmpfr-dev (>= 3.0.0-9~)," -DMPC_BUILD_DEP="" -DELF_BUILD_DEP="" -DDPKG_BUILD_DEP="dpkg-dev (>= 1.16.0.3)," -DSOURCE_BUILD_DEP="" -DCROSS_BUILD_DEP="" -DMULTILIB_ARCHS="amd64 i386 kfreebsd-amd64 mips mipsel powerpc ppc64 s390 s390x sparc" -DNEON_ARCHS="" -DTP= -DTS= -DLS= -DMULTIARCH=yes \
	  -DPV=-4.4 \
	  -DCXX_SO=6 \
	  -DGCC_SO=1 \
	  -DOBJC_SO=2 \
	  -DFORTRAN_SO=3 \
	  -DGCJ_SO=10 \
	  -DLIBGCJ_EXT=10 \
	  -DGNAT_SO=4.4 \
	  -DGNAT_V=4.4 \
	  -DPHOBOS_V= \
	  -DGOMP_SO=1 \
	  -DGCCMATH_SO= \
	  -DMF_SO=0 \
	  -DSSP_SO=0 \
	  -Denabled_languages="c c++ fortran objc objpp gccbase cdev c++dev fdev objcdev source objppdev multilib mudflap libs source proto" \
	  -Dada_no_archs="!m32r !m68k !sh3 !sh3eb !sh4 !sh4eb !hurd-i386 !hurd-alpha !knetbsd-i386 !knetbsd-alpha" \
	  -Djava_no_archs="!knetbsd-i386 !knetbsd-alpha" \
	  -Dpascal_no_archs="" \
	  -Dfortran_no_archs="" \
	  -Dlibgc_no_archs="!avr !mips !mipsel !knetbsd-i386 !knetbsd-alpha" \
	  -Dcheck_no_archs="!m68k !hurd-i386 !hurd-alpha" \
	  -Dlocale_no_archs="!knetbsd-i386 !knetbsd-alpha" \
	  -Dlinux_gnu_archs="" \
	  -Dlibphobos_no_archs="" \
	  -Dbiarch32_archs="amd64 ppc64 kfreebsd-amd64 s390x" \
	  -Dbiarch64_archs="i386 powerpc sparc s390 mips mipsel" \
	  -Dbiarchn32_archs="mips mipsel" \
		debian/control.m4 > debian/control.tmp2
addons: gccbase cdev c++dev fdev objcdev source objppdev multilib mudflap libs source proto
uniq debian/control.tmp2 | sed '/^Build/s/ *, */, /g' \
		> debian/control.tmp
rm -f debian/control.tmp2
[ -e debian/control ] \
	  && cmp -s debian/control debian/control.tmp \
	  && rm -f debian/control.tmp && exit 0; \
	  mv debian/control.tmp debian/control; touch stamps/03-control-stamp
m4 -DDIST=Debian -DSRCNAME=gcc-4.4 \
		debian/README.Bugs.m4 > debian/README.Bugs
rm -f debian/rules.parameters.tmp
( \
		echo '# configuration parameters taken from upstream source files'; \
		echo 'GCC_VERSION	:= 4.4.7'; \
		echo 'NEXT_GCC_VERSION	:= 4.4.8'; \
		echo 'BASE_VERSION	:= 4.4'; \
		echo 'SOURCE_VERSION	:= 4.4.7-1'; \
		echo 'DEB_VERSION	:= 4.4.7-1'; \
		echo 'DEB_EVERSION	:= 1:4.4.7-1'; \
		echo 'GPC_BASE_VERSION	:= '; \
		echo 'GDC_BASE_VERSION  := '; \
		echo 'DEB_GPC_VERSION	:= '; \
		echo 'DEB_GDC_VERSION	:= '; \
		echo 'DEB_SOVERSION	:= 4.4'; \
		echo 'DEB_SOEVERSION	:= 1:4.4'; \
		echo 'DEB_LIBGCC_SOVERSION	:= 1:4.4'; \
		echo 'DEB_LIBGCC_VERSION	:= 1:4.4.7-1'; \
		echo 'DEB_STDCXX_SOVERSION	:= 4.4'; \
		echo 'DEB_GCJ_SOVERSION	:= 4.4'; \
		echo 'PKG_GCJ_EXT	:= 10'; \
		echo 'PKG_LIBGCJ_EXT	:= 10'; \
		echo 'DEB_GOMP_SOVERSION	:= 4.4'; \
		echo 'DEB_GCCMATH_SOVERSION	:= 4.4'; \
		echo 'GCC_SONAME	:= 1'; \
		echo 'CXX_SONAME	:= 6'; \
		echo 'FORTRAN_SONAME	:= 3'; \
		echo 'OBJC_SONAME	:= 2'; \
		echo 'GCJ_SONAME	:= 10'; \
		echo 'GNAT_VERSION	:= 4.4'; \
		echo 'GNAT_SONAME	:= 4.4'; \
		echo 'FFI_SONAME	:= 4'; \
		echo 'MUDFLAP_SONAME	:= 0'; \
		echo 'SSP_SONAME	:= 0'; \
		echo 'GOMP_SONAME	:= 1'; \
		echo 'GCCMATH_SONAME	:= '; \
		echo 'LIBC_DEP		:= libc6'; \
	) > debian/rules.parameters.tmp
[ -e debian/rules.parameters ] \
	  && cmp -s debian/rules.parameters debian/rules.parameters.tmp \
	  && rm -f debian/rules.parameters.tmp && exit 0; \
	  mv debian/rules.parameters.tmp debian/rules.parameters; \
	  touch stamps/03-control-stamp
rm -f debian/copyright
if echo 4.4.7-1 | grep -E ^'[0-9]\.[0-9]-[0-9]{8}' ; \
		then SVN_BRANCH="trunk" ; \
	else \
		SVN_BRANCH="gcc-4_4-branch" ; \
	fi ; \
	sed debian/copyright.in		\
		-e "s/@BV@/4.4/g"		\
		-e "s/@SVN_BRANCH@/$SVN_BRANCH/g"	\
		> debian/copyright
rm -f debian/substvars.local.tmp
( \
		echo 'gcc:Version=4.4.7-1'; \
		echo 'gcc:EpochVersion=1:4.4.7-1'; \
		echo 'gcc:SoftVersion=4.4.6-15'; \
		echo 'gpc:Version='; \
		echo 'gdc:Version='; \
		echo 'gcj:Version=4.4.7-1'; \
		echo 'gcj:SoftVersion=4.4.6-11'; \
		echo 'gcj:BaseVersion=4.4'; \
		echo 'gnat:Version=4.4.7-1'; \
		echo 'binutils:Version=2.20.1-15~'; \
		echo 'dep:libgcc=libgcc1 (>= 1:4.4.7-1)'; \
		echo 'dep:libgccbiarch=lib32gcc1 (>= 1:4.4.7-1)'; \
		echo 'dep:libcdev=libc6-dev (>= 2.13-5)'; \
		echo 'dep:libcbiarch=libc6-i386 (>= 2.5)'; \
		echo 'dep:libcbiarchdev=libc6-dev-i386 (>= 2.5)'; \
		echo 'dep:libunwinddev='; \
		echo 'dep:libcxxbiarch=lib32stdc++6 (>= ${gcc:Version})'; \
		echo 'dep:libcxxbiarchdbg=lib32stdc++6-4.4-dbg'; \
		echo 'dep:libgnat='; \
		echo 'dep:ecj=ecj-gcj, libecj-java-gcj (>= 3.3.0-2)'; \
		echo 'dep:libcloog=libcloog-ppl0 (>= 0.15.8-1~), libppl-c2, libppl7'; \
	) > debian/substvars.local.tmp
( \
		echo 'gcc:multilib=gcc-4.4-multilib'; \
		echo 'gxx:multilib=g++-4.4-multilib'; \
		echo 'gobjc:multilib=gobjc-4.4-multilib'; \
		echo 'gobjcxx:multilib=gobjc++-4.4-multilib'; \
		echo 'gfortran:multilib=gfortran-4.4-multilib'; \
	) >> debian/substvars.local.tmp
echo 'dep:libgomp=libgomp1 (>= ${gcc:Version})' \
		>> debian/substvars.local.tmp
echo 'dep:libgfortranbiarch=lib32gfortran3 (>= ${gcc:Version})' \
		>> debian/substvars.local.tmp
echo 'dep:libobjcbiarch=lib32objc2 (>= ${gcc:Version})' \
		>> debian/substvars.local.tmp
echo 'dep:libmudflapbiarch=lib32mudflap0 (>= ${gcc:Version})' \
		>> debian/substvars.local.tmp
echo 'dep:libgompbiarch=lib32gomp1 (>= ${gcc:Version})' \
		>> debian/substvars.local.tmp
echo 'dep:gcj=gcc-4.4 (>= 4.4.6-15)' \
		>> debian/substvars.local.tmp
echo 'confl:lib32=libc6-i386 (<< 2.9-22)' >> debian/substvars.local.tmp
[ -e debian/substvars.local ] \
	  && cmp -s debian/substvars.local debian/substvars.local.tmp \
	  && rm -f debian/substvars.local.tmp && exit 0; \
	  mv debian/substvars.local.tmp debian/substvars.local; \
	  touch stamps/03-control-stamp
fs=`echo debian/*BV* debian/*GCJ* debian/*CXX* debian/*LC* debian/*MF* | sort -u`; \
	for f in $fs debian/source.lintian-overrides.in; do \
	  [ -f $f ] || echo "CANNOT FIND $f"; \
	  [ -f $f ] || continue; \
	  if [ -z "" ]; then case "$f" in *-CR*) continue; esac; fi; \
	  f2=$(echo $f | sed 's/BV/4.4/;s/PV//;s/CXX/6/;s/LGCJ/10/;s/GCJ/10/;s/LC/1/;s/MF/0/;s/-CRB//;s/\.in$//'); \
	  sed -e 's/@BV@/4.4/g' \
	      -e 's/@PV@//g' \
	      -e 's/@CXX@/6/g' \
	      -e 's/@LGCJ@/10/g' \
	      -e 's/@GCJ@/10/g' \
	      -e 's/@GCJSO@/10/g' \
	      -e 's/@LC@/1/g' \
	      -e 's/@MF@/0/g' \
	      -e 's/@SRC@/gcc-4.4/g' \
	      -e 's/@GFDL@/#/g' \
	      -e 's/@java_priority@//g' \
	      -e 's/@gcc_priority@/44/g' \
	      -e 's/@TARGET@/x86_64-linux-gnu/g' \
	    $f > $f2; \
	  touch -r $f $f2; \
	done
make[1]: Leaving directory `/«PKGBUILDDIR»'
/usr/bin/make -f debian/rules2 stamps/04-configure-stamp
make[1]: Entering directory `/«PKGBUILDDIR»'
dh_testdir
: # give information about the build process
------------------------ Build process variables ------------------------
Number of parallel processes used for the build: 3
Package source: gcc-4.4
GCC version: 4.4.7
Base Debian version: 4.4
Configured with: -v
	 --with-pkgversion='Debian 4.4.7-1'
	 --with-bugurl='file:///usr/share/doc/gcc-4.4/README.Bugs'
	 --enable-languages=c,c++,fortran,objc,obj-c++
	 --prefix=/usr
	 --program-suffix=-4.4
	 --enable-shared
	 --enable-linker-build-id
	 --with-system-zlib
	 --libexecdir=/usr/lib
	 --without-included-gettext
	 --enable-threads=posix
	 --with-gxx-include-dir=/usr/include/c++/4.4
	 --libdir=/usr/lib
	 --enable-nls
	 --enable-clocale=gnu
	 --enable-libstdcxx-debug
	 --enable-objc-gc
	 --with-arch-32=i586
	 --with-tune=generic
	 --enable-checking=release
	 --build=x86_64-linux-gnu
	 --host=x86_64-linux-gnu
	 --target=x86_64-linux-gnu
	
Using shell /bin/bash -e		
Architecture: amd64 (GNU: x86_64-linux-gnu)
CPPFLAGS: 
CFLAGS: 
LDFLAGS: 
BOOT_CFLAGS: 
DEBIAN_BUILDARCH: 
Install prefix: /usr
Will build the biarch compilers (64/32, defaulting to 64bit)
Will build the C++ compiler
Will build the ObjC compiler.
Will build the extra ObjC runtime for garbage collection.
Will build the Obj-C++ compiler
Will build the Fortran 95 compiler.
Will not build the Java compiler: built from separate source
Will not build the Pascal compiler: not yet ported to GCC 4.4
Will not build the Ada compiler: built from separate source
Will not build the D compiler: built from separate source
Will build with SSP support.
Will run the testsuite.
Will run the testsuite with -m32: yes
Will enable national language support.
-----------------------------------------------------------------------------

rm -f stamps/04-configure-stamp stamps/05-build-stamp
: # generate debian/README.Debian
cat debian/README stamps/02-patch-stamp > debian/README.Debian
rm -rf /«PKGBUILDDIR»/build
mkdir /«PKGBUILDDIR»/build
: # configure
cd /«PKGBUILDDIR»/build \
	  && PATH=/«PKGBUILDDIR»/bin:/usr/lib/x86_64-linux-gnu/gcc/bin:$PATH \
		CC="gcc" \
		 \
	LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+$LD_LIBRARY_PATH:}/«PKGBUILDDIR»/build/gcc/ada/rts \
		../src/configure -v --with-pkgversion='Debian 4.4.7-1' --with-bugurl='file:///usr/share/doc/gcc-4.4/README.Bugs' --enable-languages=c,c++,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.4 --enable-shared --enable-linker-build-id --with-system-zlib  --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.4 --libdir=/usr/lib --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-objc-gc --with-arch-32=i586 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking target system type... x86_64-pc-linux-gnu
checking for a BSD-compatible install... /usr/bin/install -c
checking whether ln works... yes
checking whether ln -s works... yes
checking for x86_64-linux-gnu-gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
checking for x86_64-linux-gnu-g++... x86_64-linux-gnu-g++
checking whether we are using the GNU C++ compiler... yes
checking whether x86_64-linux-gnu-g++ accepts -g... yes
checking for x86_64-linux-gnu-gnatbind... no
checking for gnatbind... no
checking for x86_64-linux-gnu-gnatmake... no
checking for gnatmake... no
checking whether compiler driver understands Ada... no
checking how to compare bootstrapped objects... cmp --ignore-initial=16 $$f1 $$f2
checking for correct version of gmp.h... yes
checking for correct version of mpfr.h... yes
checking for version 0.10 of PPL... no
checking for correct version of CLooG... yes
*** This configuration is not supported in the following subdirectories:
     target-libada gnattools target-libffi target-zlib target-libjava zlib
    (Any other directories should still work fine.)
checking for bison... bison -y
checking for bison... bison
checking for gm4... no
checking for gnum4... no
checking for m4... m4
checking for flex... flex
checking for flex... flex
checking for makeinfo... makeinfo
checking for expect... expect
checking for runtest... runtest
checking for x86_64-linux-gnu-ar... no
checking for ar... ar
checking for x86_64-linux-gnu-as... no
checking for as... as
checking for x86_64-linux-gnu-dlltool... no
checking for dlltool... no
checking for ld... (cached) /usr/bin/ld
checking for x86_64-linux-gnu-ld... (cached) /usr/bin/ld
checking for x86_64-linux-gnu-lipo... no
checking for lipo... no
checking for x86_64-linux-gnu-nm... no
checking for nm... nm
checking for x86_64-linux-gnu-ranlib... no
checking for ranlib... ranlib
checking for x86_64-linux-gnu-strip... no
checking for strip... strip
checking for x86_64-linux-gnu-windres... no
checking for windres... no
checking for x86_64-linux-gnu-windmc... no
checking for windmc... no
checking for x86_64-linux-gnu-objcopy... no
checking for objcopy... objcopy
checking for x86_64-linux-gnu-objdump... no
checking for objdump... objdump
checking for x86_64-linux-gnu-cc... no
checking for cc... cc
checking for x86_64-linux-gnu-c++... no
checking for c++... c++
checking for x86_64-linux-gnu-gcc... x86_64-linux-gnu-gcc
checking for x86_64-linux-gnu-gcj... no
checking for gcj... no
checking for x86_64-linux-gnu-gfortran... no
checking for gfortran... no
checking for ar... no
checking for x86_64-linux-gnu-ar... no
checking for ar... ar
checking for as... no
checking for x86_64-linux-gnu-as... no
checking for as... as
checking for dlltool... no
checking for x86_64-linux-gnu-dlltool... no
checking for dlltool... no
checking for ld... no
checking for x86_64-linux-gnu-ld... no
checking for ld... ld
checking for lipo... no
checking for x86_64-linux-gnu-lipo... no
checking for lipo... no
checking for nm... no
checking for x86_64-linux-gnu-nm... no
checking for nm... nm
checking for objdump... no
checking for x86_64-linux-gnu-objdump... no
checking for objdump... objdump
checking for ranlib... no
checking for x86_64-linux-gnu-ranlib... no
checking for ranlib... ranlib
checking for strip... no
checking for x86_64-linux-gnu-strip... no
checking for strip... strip
checking for windres... no
checking for x86_64-linux-gnu-windres... no
checking for windres... no
checking for windmc... no
checking for x86_64-linux-gnu-windmc... no
checking for windmc... no
checking where to find the target ar... host tool
checking where to find the target as... host tool
checking where to find the target cc... just compiled
checking where to find the target c++... just compiled
checking where to find the target c++ for libstdc++... just compiled
checking where to find the target dlltool... host tool
checking where to find the target gcc... just compiled
checking where to find the target gcj... host tool
checking where to find the target gfortran... just compiled
checking where to find the target ld... host tool
checking where to find the target lipo... host tool
checking where to find the target nm... host tool
checking where to find the target objdump... host tool
checking where to find the target ranlib... host tool
checking where to find the target strip... host tool
checking where to find the target windres... host tool
checking where to find the target windmc... host tool
checking whether to enable maintainer-specific portions of Makefiles... no
checking whether -fkeep-inline-functions is supported... yes
configure: creating ./config.status
config.status: creating Makefile
touch stamps/04-configure-stamp
make[1]: Leaving directory `/«PKGBUILDDIR»'
/usr/bin/make -f debian/rules2 stamps/05-build-stamp
make[1]: Entering directory `/«PKGBUILDDIR»'
: # build locales needed by libstdc++ testsuite
rm -rf locales
mkdir locales
sh debian/locale-gen
Generating locales...
  de_DE.ISO-8859-1... done
  de_DE.ISO-8859-15@euro... done
  en_HK.ISO-8859-1... done
  en_PH.ISO-8859-1... done
  en_US.ISO-8859-1... done
  en_US.ISO-8859-1... done
  en_US.ISO-8859-15... done
  en_US.UTF-8... done
  es_ES.ISO-8859-1... done
  es_MX.ISO-8859-1... done
  fr_FR.ISO-8859-1... done
  fr_FR.ISO-8859-15@euro... done
  is_IS.ISO-8859-1... done
  is_IS.UTF-8... done
  it_IT.ISO-8859-1... done
  ja_JP.EUC-JP... done
  se_NO.UTF-8... done
  ta_IN.UTF-8... done
  zh_TW.BIG5... done
Generation complete.
touch stamps/05-build-locale-stamp
dh_testdir
rm -f bootstrap-protocol
: # build native compiler
( \
	  set +e; \
	  PATH=/«PKGBUILDDIR»/bin:/usr/lib/x86_64-linux-gnu/gcc/bin:$PATH \
	   \
	  LOCPATH=/«PKGBUILDDIR»/locales \
	    /usr/bin/make -C /«PKGBUILDDIR»/build -j 3 bootstrap-lean \
		CC="gcc" \
		    \
		 \
		 \
		; \
	  echo $? > status; \
	) 2>&1 | tee bootstrap-protocol
make[2]: Entering directory `/«PKGBUILDDIR»/build'
echo stage3 > stage_final
make[3]: Entering directory `/«PKGBUILDDIR»/build'
make[4]: Entering directory `/«PKGBUILDDIR»/build'
make[4]: Leaving directory `/«PKGBUILDDIR»/build'
make[4]: Entering directory `/«PKGBUILDDIR»/build'
mkdir -p -- build-x86_64-linux-gnu/libiberty
Configuring in build-x86_64-linux-gnu/libiberty
Configuring stage 1 in ./libiberty
Configuring stage 1 in ./intl
configure: creating cache ../config.cache
checking whether to enable maintainer-specific portions of Makefiles... no
checking for makeinfo... makeinfo --split-size=5000000 --split-size=5000000
checking for perl... perl
configure: creating cache ./config.cache
checking build system type... checking whether to enable maintainer-specific portions of Makefiles... no
checking for makeinfo... makeinfo --split-size=5000000 --split-size=5000000
checking for perl... perl
configure: creating cache ./config.cache
x86_64-pc-linux-gnu
checking whether /usr/bin/make sets $(MAKE)... checking host system type... checking build system type... x86_64-pc-linux-gnu
x86_64-pc-linux-gnu
checking for x86_64-linux-gnu-ar... ar
checking for x86_64-linux-gnu-ranlib... ranlib
yes
checking for a BSD-compatible install... checking for x86_64-linux-gnu-gcc... gcc
/usr/bin/install -c
checking whether NLS is requested... yes
checking for msgfmt... checking host system type... x86_64-pc-linux-gnu
checking for x86_64-linux-gnu-ar... ar
checking for x86_64-linux-gnu-ranlib... ranlib
checking for x86_64-linux-gnu-gcc... gcc
checking for C compiler default output file name... /usr/bin/msgfmt
checking for gmsgfmt... /usr/bin/msgfmt
checking for xgettext... checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... /usr/bin/xgettext

checking for suffix of object files... a.out
checking whether the C compiler works... checking for msgmerge... yes
checking whether we are cross compiling... no
checking for suffix of executables... /usr/bin/msgmerge
o
checking whether we are using the GNU C compiler... checking for x86_64-linux-gnu-gcc... gcc

checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... checking for C compiler default output file name... yes
yes
checking for gcc option to accept ANSI C... checking whether gcc accepts -g... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... yes
checking for gcc option to accept ANSI C... 
checking for suffix of object files... none needed
o
checking whether we are using the GNU C compiler... none needed
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... yes
checking whether gcc accepts -g... checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking for _LARGE_FILES value needed for large files... no
yes
checking for gcc option to accept ANSI C... checking for _LARGE_FILES value needed for large files... no
checking how to run the C preprocessor... no
checking how to run the C preprocessor... none needed
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
gcc -E
checking for x86_64-linux-gnu-ranlib... ranlib
checking for library containing strerror... gcc -E
checking whether gcc supports -W... checking whether gcc supports -W... none required
checking how to run the C preprocessor... yes
checking whether gcc supports -Wall... yes
checking whether gcc supports -Wall... gcc -E
yes
yes
checking whether gcc supports -Wwrite-strings... checking whether gcc supports -Wwrite-strings... yes
checking whether gcc supports -Wc++-compat... checking for egrep... grep -E
checking for ANSI C header files... yes
checking whether gcc supports -Wc++-compat... yes
yes
checking whether gcc supports -Wstrict-prototypes... checking whether gcc supports -Wstrict-prototypes... yes
yes
checking whether gcc supports -pedantic ... checking whether gcc supports -pedantic ... yes
checking whether gcc and cc understand -c and -o together... yes
checking whether gcc and cc understand -c and -o together... yes
checking for an ANSI C-conforming const... yes
checking for inline... yes
checking for an ANSI C-conforming const... yes
checking for an ANSI C-conforming const... inline
checking for sys/types.h... yes
checking for inline... yes
checking for inline... yes
inline
checking whether byte ordering is bigendian... inline
checking whether byte ordering is bigendian... checking for sys/stat.h... yes
checking for stdlib.h... no
checking for a BSD-compatible install... /usr/bin/install -c
no
checking for a BSD-compatible install... /usr/bin/install -c
checking for sys/file.h... checking for sys/file.h... yes
yes
yes
checking for string.h... checking for sys/param.h... checking for sys/param.h... yes
yes
checking for limits.h... checking for memory.h... yes
checking for limits.h... yes
yes
checking for stdlib.h... yes
checking for stdlib.h... checking for strings.h... yes
yes
checking for malloc.h... checking for malloc.h... yes
yes
yes
checking for string.h... checking for inttypes.h... checking for string.h... yes
checking for unistd.h... yes
yes
checking for unistd.h... checking for stdint.h... yes
checking for strings.h... yes
checking for strings.h... yes
yes
checking for sys/time.h... checking for unistd.h... yes
checking for sys/time.h... yes
yes
checking for time.h... yes
checking for off_t... checking for time.h... yes
yes
checking for sys/resource.h... yes
checking for size_t... checking for sys/resource.h... yes
checking for sys/stat.h... yes
yes
checking for working alloca.h... checking for sys/stat.h... yes
checking for sys/mman.h... yes
yes
checking for alloca... checking for sys/mman.h... yes
checking for fcntl.h... yes
checking for fcntl.h... yes
yes
checking for stdlib.h... (cached) yes
checking for alloca.h... checking for unistd.h... (cached) yes
yes
checking for alloca.h... checking for getpagesize... yes
checking for sys/pstat.h... yes
checking for sys/pstat.h... no
checking for sys/sysmp.h... yes
checking for working mmap... no
checking for sys/sysmp.h... no
checking for sys/sysinfo.h... no
checking for sys/sysinfo.h... yes
checking whether we are using the GNU C Library 2.1 or newer... yes
yes
checking whether integer division by zero raises SIGFPE... checking for machine/hal_sysinfo.h... yes
checking for machine/hal_sysinfo.h... no
no
checking for sys/table.h... checking for sys/table.h... yes
no
checking for inttypes.h... checking for sys/sysctl.h... no
checking for sys/sysctl.h... yes
yes
checking for stdint.h... yes
checking for sys/systemcfg.h... checking for sys/systemcfg.h... no
yes
checking for unsigned long long... checking for stdint.h... no
yes
checking for stdint.h... checking for stdio_ext.h... yes
yes
yes
checking for inttypes.h... checking for sys/wait.h that is POSIX.1 compatible... checking for stdio_ext.h... yes
checking for sys/wait.h that is POSIX.1 compatible... yes
checking whether the inttypes.h PRIxNN macros are broken... yes
checking whether time.h and sys/time.h may both be included... yes
checking whether time.h and sys/time.h may both be included... no
checking for ld used by GCC... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for shared library run path origin... yes
yes
checking whether errno must be declared... checking whether errno must be declared... done
no
no
checking for egrep... checking for egrep... grep -E
checking for ANSI C header files... grep -E
checking for ANSI C header files... checking argz.h usability... yes
checking argz.h presence... yes
checking for argz.h... yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for sys/types.h... yes
checking for sys/types.h... yes
checking for limits.h... yes
yes
checking locale.h usability... checking for sys/stat.h... (cached) yes
yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) checking for sys/stat.h... (cached) yes
yes
checking for stdlib.h... (cached) checking for memory.h... yes
yes
checking locale.h presence... checking for string.h... (cached) yes
checking for memory.h... yes
yes
checking for locale.h... yes
checking for strings.h... (cached) yes
checking nl_types.h usability... checking for inttypes.h... yes
checking for strings.h... (cached) yes
checking for inttypes.h... yes
checking nl_types.h presence... yes
yes
checking for stdint.h... (cached) yes
checking for stdint.h... (cached) yes
yes
checking for nl_types.h... yes
checking for unistd.h... (cached) yes
checking for unistd.h... (cached) checking for int... yes
checking malloc.h usability... checking for int... yes
checking size of int... yes
checking size of int... yes
checking malloc.h presence... yes
checking for malloc.h... yes
checking stddef.h usability... 4
checking for uintptr_t... 4
checking for uintptr_t... yes
checking for a 64-bit type... yes
checking stddef.h presence... yes
checking for a 64-bit type... uint64_t
yes
checking for stddef.h... yes
checking for pid_t... checking for stdlib.h... (cached) yes
uint64_t
checking for pid_t... checking for string.h... (cached) yes
checking for unistd.h... (cached) yes
yes
checking for library containing strerror... checking sys/param.h usability... yes
checking for library containing strerror... none required
checking for asprintf... none required
checking for asprintf... yes
checking sys/param.h presence... yes
checking for sys/param.h... yes
checking for feof_unlocked... yes
yes
checking for atexit... checking for atexit... yes
checking for fgets_unlocked... yes
yes
checking for basename... checking for basename... yes
yes
checking for getc_unlocked... checking for bcmp... yes
checking for bcmp... yes
yes
checking for getcwd... checking for bcopy... yes
checking for bcopy... yes
checking for getegid... yes
yes
checking for bsearch... checking for bsearch... yes
checking for geteuid... yes
checking for bzero... yes
yes
checking for bzero... checking for getgid... yes
checking for calloc... yes
checking for getuid... yes
checking for calloc... yes
yes
checking for clock... checking for mempcpy... yes
checking for clock... yes
yes
checking for ffs... checking for munmap... yes
yes
checking for putenv... checking for ffs... yes
checking for getcwd... yes
yes
checking for setenv... checking for getcwd... yes
yes
checking for getpagesize... checking for getpagesize... yes
checking for setlocale... yes
checking for gettimeofday... yes
checking for gettimeofday... yes
yes
checking for index... checking for stpcpy... yes
checking for index... yes
checking for insque... yes
checking for strcasecmp... yes
yes
checking for memchr... checking for insque... yes
checking for strdup... yes
yes
checking for memchr... checking for memcmp... yes
checking for strtoul... yes
yes
checking for memcmp... checking for memcpy... yes
checking for tsearch... yes
yes
checking for memcpy... yes
checking for memmove... checking for __argz_count... yes
yes
checking for mempcpy... checking for memmove... yes
checking for __argz_stringify... yes
yes
checking for mempcpy... checking for memset... yes
checking for __argz_next... yes
checking for mkstemps... yes
yes
checking for memset... checking for __fsetlocking... yes
checking for putenv... yes
yes
checking for iconv... checking for mkstemps... yes
checking for random... yes
checking for iconv declaration... yes
checking for putenv... 
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
checking for nl_langinfo and CODESET... yes
checking for rename... yes
yes
checking for LC_MESSAGES... yes
checking for random... checking for rindex... yes
yes
checking for bison... bison
checking version of bison... checking for rename... yes
2.5, ok
checking whether NLS is requested... yes
checking whether included gettext is requested... no
checking for GNU gettext in libc... checking for setenv... yes
yes
checking whether to use NLS... yes
checking where the gettext function comes from... libc
checking for rindex... checking for aclocal... aclocal
checking for autoconf... autoconf
checking for autoheader... autoheader
yes
updating cache ./config.cache
configure: creating ./config.status
checking for snprintf... yes
checking for setenv... yes
checking for sigsetmask... yes
checking for snprintf... yes
checking for stpcpy... yes
yes
checking for sigsetmask... checking for stpncpy... config.status: creating Makefile
yes
checking for stpcpy... config.status: creating config.intl
yes
checking for strcasecmp... config.status: creating config.h
yes
checking for stpncpy... config.status: executing default-1 commands
yes
checking for strchr... yes
checking for strcasecmp... yes
checking for strdup... mkdir -p -- build-x86_64-linux-gnu/fixincludes
Configuring in build-x86_64-linux-gnu/fixincludes
yes
yes
checking for strchr... checking for strncasecmp... yes
yes
checking for strndup... checking for strdup... yes
yes
checking for strrchr... checking for strncasecmp... yes
yes
checking for strstr... checking for strndup... yes
yes
checking for strtod... checking for strrchr... yes
yes
checking for strtol... checking for strstr... yes
configure: loading cache ../config.cache
checking for strtoul... yes
checking for strtod... checking build system type... x86_64-pc-linux-gnu
checking host system type... yes
yes
x86_64-pc-linux-gnu
checking for strverscmp... checking target system type... checking for strtol... x86_64-pc-linux-gnu
checking for x86_64-linux-gnu-gcc... gcc
yes
checking for tmpnam... yes
checking for strtoul... checking for C compiler default output file name... yes
yes
checking for strverscmp... a.out
checking whether the C compiler works... checking for vasprintf... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
yes
checking for vfprintf... checking for tmpnam... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... yes
yes
checking for vasprintf... checking for vprintf... none needed
yes
checking for vfprintf... yes
checking for a sed that does not truncate output... /bin/sed
checking whether gcc supports -W... checking for vsnprintf... yes
yes
checking whether gcc supports -Wall... checking for vprintf... yes
checking for vsprintf... yes
checking whether gcc supports -Wwrite-strings... yes
yes
checking for waitpid... checking for vsnprintf... yes
checking whether gcc supports -Wstrict-prototypes... yes
yes
checking whether alloca needs Cray hooks... checking for vsprintf... yes
checking whether gcc supports -Wmissing-prototypes... no
checking stack direction for C alloca... yes
checking whether gcc supports -Wold-style-definition... yes
checking for waitpid... -1
checking for unistd.h... (cached) yes
checking for vfork.h... yes
checking whether gcc supports -Wmissing-format-attribute... no
checking for fork... yes
yes
checking whether alloca needs Cray hooks... checking whether gcc supports -Wno-overlength-strings... no
checking stack direction for C alloca... yes
yes
checking for vfork... checking whether gcc supports -pedantic -Wno-long-long... -1
checking for unistd.h... (cached) yes
checking for vfork.h... yes
yes
checking how to run the C preprocessor... checking for working fork... no
checking for fork... gcc -E
yes
checking for working vfork... (cached) yes
checking for _doprnt... yes
checking for vfork... checking for egrep... grep -E
checking for ANSI C header files... no
checking for sys_errlist... yes
checking for working fork... yes
checking for sys_nerr... yes
checking for working vfork... (cached) yes
checking for _doprnt... yes
no
checking for sys_errlist... checking for sys_siglist... yes
checking for sys/types.h... yes
checking for sys_nerr... yes
checking for external symbol _system_configuration... yes
checking for sys/stat.h... no
yes
checking for getrusage... checking for sys_siglist... yes
checking for stdlib.h... yes
yes
checking for external symbol _system_configuration... checking for on_exit... no
yes
checking for getrusage... checking for string.h... yes
checking for psignal... yes
yes
checking for memory.h... checking for on_exit... yes
checking for strerror... yes
yes
checking for strings.h... checking for psignal... yes
yes
yes
checking for strsignal... checking for strerror... checking for inttypes.h... yes
yes
checking for sysconf... checking for stdint.h... yes
checking for strsignal... yes
yes
checking for unistd.h... checking for times... yes
checking for sysconf... yes
yes
checking for sbrk... checking stddef.h usability... yes
checking for times... yes
yes
checking stddef.h presence... yes
checking for gettimeofday... (cached) checking for sbrk... yes
yes
checking for stddef.h... yes
checking for realpath... checking for stdlib.h... (cached) yes
checking for strings.h... (cached) yes
checking for unistd.h... (cached) yes
yes
checking fcntl.h usability... checking for gettimeofday... (cached) yes
yes
checking for canonicalize_file_name... checking for realpath... yes
yes
checking fcntl.h presence... checking for pstat_getstatic... yes
checking for canonicalize_file_name... yes
checking for fcntl.h... yes
checking sys/file.h usability... no
yes
checking for pstat_getstatic... checking for pstat_getdynamic... yes
checking sys/file.h presence... no
checking for sysmp... yes
checking for sys/file.h... yes
no
checking for sys/stat.h... (cached) checking for pstat_getdynamic... yes
checking for clearerr_unlocked... no
checking for getsysinfo... yes
no
checking for feof_unlocked... checking for sysmp... no
checking for table... no
yes
checking for sysctl... no
checking for ferror_unlocked... checking for getsysinfo... no
checking for table... yes
checking for wait3... yes
checking for fflush_unlocked... no
checking for sysctl... yes
checking for wait4... yes
checking for fgetc_unlocked... yes
checking for wait3... yes
checking for __fsetlocking... yes
checking for fgets_unlocked... yes
checking for wait4... yes
checking whether basename is declared... yes
checking for fileno_unlocked... yes
checking for __fsetlocking... no
checking whether ffs is declared... yes
checking for fprintf_unlocked... yes
checking whether basename is declared... yes
checking whether asprintf is declared... no
checking for fputc_unlocked... no
checking whether ffs is declared... no
checking whether vasprintf is declared... yes
checking for fputs_unlocked... no
yes
checking whether snprintf is declared... checking whether asprintf is declared... yes
checking for fread_unlocked... no
checking whether vasprintf is declared... yes
checking whether vsnprintf is declared... no
checking whether snprintf is declared... yes
checking for fwrite_unlocked... yes
checking whether calloc is declared... yes
checking whether vsnprintf is declared... yes
yes
checking whether calloc is declared... yes
checking whether getenv is declared... checking for getchar_unlocked... yes
checking whether getenv is declared... yes
yes
checking whether getopt is declared... checking for getc_unlocked... yes
checking whether getopt is declared... yes
checking whether malloc is declared... yes
yes
checking whether malloc is declared... checking for putchar_unlocked... yes
checking whether realloc is declared... yes
checking whether realloc is declared... yes
checking for putc_unlocked... yes
checking whether sbrk is declared... yes
checking whether sbrk is declared... yes
checking whether abort is declared... yes
checking whether strverscmp is declared... yes
checking whether strverscmp is declared... yes
checking whether asprintf is declared... no
checking whether canonicalize_file_name must be declared... no
checking whether canonicalize_file_name must be declared... no
checking whether basename is declared... yes
checking for stdlib.h... (cached) yes
yes
checking for stdlib.h... (cached) yes
checking for unistd.h... (cached) yes
no
checking for unistd.h... (cached) checking whether errno is declared... yes
checking for getpagesize... (cached) yes
checking for working mmap... checking for getpagesize... (cached) yes
checking for working mmap... no
checking whether vasprintf is declared... yes
checking for working strncmp... no
checking whether clearerr_unlocked is declared... yes
checking for working strncmp... yes
updating cache ./config.cache
configure: creating ./config.status
yes
checking whether feof_unlocked is declared... yes
updating cache ../config.cache
configure: creating ./config.status
yes
checking whether ferror_unlocked is declared... yes
checking whether fflush_unlocked is declared... yes
checking whether fgetc_unlocked is declared... yes
checking whether fgets_unlocked is declared... config.status: creating Makefile
no
checking whether fileno_unlocked is declared... config.status: creating testsuite/Makefile
config.status: creating Makefile
config.status: creating config.h
config.status: creating testsuite/Makefile
yes
checking whether fprintf_unlocked is declared... config.status: creating config.h
no
checking whether fputc_unlocked is declared... config.status: executing default commands
config.status: executing default commands
yes
checking whether fputs_unlocked is declared... no
checking whether fread_unlocked is declared... yes
checking whether fwrite_unlocked is declared... Configuring stage 1 in ./libdecnumber
Configuring stage 1 in ./gcc
yes
checking whether getchar_unlocked is declared... yes
checking whether getc_unlocked is declared... yes
checking whether putchar_unlocked is declared... yes
checking whether putc_unlocked is declared... yes
checking for an ANSI C-conforming const... yes
checking sys/mman.h usability... yes
checking sys/mman.h presence... yes
checking for sys/mman.h... yes
checking for mmap... configure: creating cache ./config.cache
yes
checking whether read-only mmap of a plain file works... yes
checking whether mmap from /dev/zero works... yes
checking for MAP_ANON(YMOUS)... checking whether /usr/bin/make sets $(MAKE)... yes
checking for x86_64-linux-gnu-gcc... gcc
configure: creating cache ./config.cache
yes
checking whether mmap with MAP_ANON(YMOUS) works... yes
checking whether to enable maintainer-specific portions of Makefiles... no
updating cache ../config.cache
checking build system type... configure: creating ./config.status
checking for C compiler default output file name... x86_64-pc-linux-gnu
checking host system type... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... x86_64-pc-linux-gnu
checking target system type... 
x86_64-pc-linux-gnu
checking for suffix of object files... checking LIBRARY_PATH variable... ok
checking GCC_EXEC_PREFIX variable... ok
checking whether to place generated files in the source directory... no
checking whether a default linker was specified... no
checking whether a default assembler was specified... no
checking for x86_64-linux-gnu-gcc... gcc
o
checking whether we are using the GNU C compiler... checking for C compiler default output file name... yes
checking whether gcc accepts -g... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... yes
checking for gcc option to accept ANSI C... 
checking for suffix of object files... config.status: creating Makefile
config.status: creating mkheaders.almost
o
checking whether we are using the GNU C compiler... none needed
config.status: creating config.h
checking for x86_64-linux-gnu-ranlib... ranlib
/«PKGBUILDDIR»/src/libdecnumber/configure: line 2396: cd: /sbuild-nonexistent: No such file or directory
checking for aclocal... aclocal
checking for autoconf... autoconf
checking for autoheader... autoheader
checking whether gcc supports -W... yes
checking whether gcc accepts -g... yes
yes
checking for gcc option to accept ANSI C... checking whether gcc supports -Wall... none needed
yes
checking whether gcc supports -Wwrite-strings... checking whether gcc and cc understand -c and -o together... yes
checking whether gcc supports -Wstrict-prototypes... make[5]: Entering directory `/«PKGBUILDDIR»/build/libiberty'
if [ x"-fpic" != x ] && [ ! -d pic ]; then \
	  mkdir pic; \
	else true; fi
touch stamp-picdir
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/safe-ctype.c -o pic/safe-ctype.o; \
	else true; fi
yes
checking whether gcc supports -Wmissing-prototypes... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/safe-ctype.c -o safe-ctype.o
yes
checking for x86_64-linux-gnu-gnatbind... no
checking for x86_64-linux-gnu-gnatmake... no
checking whether compiler driver understands Ada... yes
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/sort.c -o pic/sort.o; \
	else true; fi
checking whether gcc supports -Wold-style-definition... yes
checking whether gcc supports -Wmissing-format-attribute... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/sort.c -o sort.o
yes
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/spaces.c -o pic/spaces.o; \
	else true; fi
checking whether gcc supports -Wcast-qual... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/spaces.c -o spaces.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/splay-tree.c -o pic/splay-tree.o; \
	else true; fi
yes
checking whether gcc supports -pedantic -Wno-long-long... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/splay-tree.c -o splay-tree.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/strerror.c -o pic/strerror.o; \
	else true; fi
yes
checking how to run the C preprocessor... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/strerror.c -o strerror.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/strsignal.c -o pic/strsignal.o; \
	else true; fi
gcc -E
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/strsignal.c -o strsignal.o
checking for egrep... grep -E
checking for ANSI C header files... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/unlink-if-ordinary.c -o pic/unlink-if-ordinary.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/unlink-if-ordinary.c -o unlink-if-ordinary.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/xatexit.c -o pic/xatexit.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/xatexit.c -o xatexit.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/xexit.c -o pic/xexit.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/xexit.c -o xexit.o
yes
checking for sys/types.h... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/xmalloc.c -o pic/xmalloc.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/xmalloc.c -o xmalloc.o
yes
checking for sys/stat.h... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/xmemdup.c -o pic/xmemdup.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/xmemdup.c -o xmemdup.o
yes
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/xstrdup.c -o pic/xstrdup.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/xstrdup.c -o xstrdup.o
checking for stdlib.h... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/xstrerror.c -o pic/xstrerror.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/xstrerror.c -o xstrerror.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/xstrndup.c -o pic/xstrndup.o; \
	else true; fi
yes
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/xstrndup.c -o xstrndup.o
checking for string.h... rm -f needed-list; touch needed-list; \
	for f in atexit calloc memchr memcmp memcpy memmove memset rename strchr strerror strncmp strrchr strstr strtol strtoul tmpnam vfprintf vprintf vfork waitpid bcmp bcopy bzero; do \
	  for g in  ; do \
	    case "$g" in \
	      *$f*) echo $g >> needed-list ;; \
	    esac; \
	  done; \
	done
echo ./regex.o ./cplus-dem.o ./cp-demangle.o ./md5.o ./sha1.o ./alloca.o ./argv.o ./choose-temp.o ./concat.o ./cp-demint.o ./dyn-string.o ./fdmatch.o ./fibheap.o ./filename_cmp.o ./floatformat.o ./fnmatch.o ./fopen_unlocked.o ./getopt.o ./getopt1.o ./getpwd.o ./getruntime.o ./hashtab.o ./hex.o ./lbasename.o ./lrealpath.o ./make-relative-prefix.o ./make-temp-file.o ./objalloc.o ./obstack.o ./partition.o ./pexecute.o ./physmem.o ./pex-common.o ./pex-one.o ./pex-unix.o ./safe-ctype.o ./sort.o ./spaces.o ./splay-tree.o ./strerror.o ./strsignal.o ./unlink-if-ordinary.o ./xatexit.o ./xexit.o ./xmalloc.o ./xmemdup.o ./xstrdup.o ./xstrerror.o ./xstrndup.o > required-list
make[6]: Entering directory `/«PKGBUILDDIR»/build/libiberty/testsuite'
make[6]: Nothing to be done for `all'.
make[6]: Leaving directory `/«PKGBUILDDIR»/build/libiberty/testsuite'
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/regex.c -o pic/regex.o; \
	else true; fi
yes
checking for memory.h... ../../src/libiberty/regex.c:284:11: warning: expression result unused [-Wunused-value]
   bzero (re_syntax_table, sizeof re_syntax_table);
   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
In file included from ../../src/libiberty/regex.c:638:
../../src/libiberty/regex.c:3124:20: warning: expression result unused [-Wunused-value]
            bzero (b, (1 << BYTEWIDTH) / BYTEWIDTH);
            ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
yes
In file included from ../../src/libiberty/regex.c:638:
../../src/libiberty/regex.c:4582:10: warning: expression result unused [-Wunused-value]
  bzero (fastmap, 1 << BYTEWIDTH);  /* Assume nothing's valid.  */
  ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
checking for strings.h... 3 warnings generated.
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/regex.c -o regex.o
yes
checking for inttypes.h... ../../src/libiberty/regex.c:284:11: warning: expression result unused [-Wunused-value]
   bzero (re_syntax_table, sizeof re_syntax_table);
   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
In file included from ../../src/libiberty/regex.c:638:
../../src/libiberty/regex.c:3124:20: warning: expression result unused [-Wunused-value]
            bzero (b, (1 << BYTEWIDTH) / BYTEWIDTH);
            ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
In file included from ../../src/libiberty/regex.c:638:
../../src/libiberty/regex.c:4582:10: warning: expression result unused [-Wunused-value]
  bzero (fastmap, 1 << BYTEWIDTH);  /* Assume nothing's valid.  */
  ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
3 warnings generated.
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/cplus-dem.c -o pic/cplus-dem.o; \
	else true; fi
yes
checking for stdint.h... yes
checking for unistd.h... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/cplus-dem.c -o cplus-dem.o
yes
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/cp-demangle.c -o pic/cp-demangle.o; \
	else true; fi
checking ctype.h usability... yes
checking ctype.h presence... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/cp-demangle.c -o cp-demangle.o
yes
checking for ctype.h... yes
checking stddef.h usability... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/md5.c -o pic/md5.o; \
	else true; fi
yes
checking stddef.h presence... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/md5.c -o md5.o
yes
checking for stddef.h... yes
checking for string.h... (cached) yes
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/sha1.c -o pic/sha1.o; \
	else true; fi
checking stdio.h usability... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/sha1.c -o sha1.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/alloca.c -o pic/alloca.o; \
	else true; fi
yes
checking stdio.h presence... yes
checking for stdio.h... yes
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/alloca.c -o alloca.o
looking for a compliant stdint.h in stdint.h, checking for uintmax_t... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/argv.c -o pic/argv.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/argv.c -o argv.o
yes
checking for uintptr_t... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/choose-temp.c -o pic/choose-temp.o; \
	else true; fi
yes
checking for int_least32_t... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/choose-temp.c -o choose-temp.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/concat.c -o pic/concat.o; \
	else true; fi
yes
checking for int_fast32_t... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/concat.c -o concat.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/cp-demint.c -o pic/cp-demint.o; \
	else true; fi
yes
checking for uint64_t... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/cp-demint.c -o cp-demint.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/dyn-string.c -o pic/dyn-string.o; \
	else true; fi
yes
checking what to include in gstdint.h... stdint.h (already complete)
checking for an ANSI C-conforming const... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/dyn-string.c -o dyn-string.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/fdmatch.c -o pic/fdmatch.o; \
	else true; fi
yes
checking for off_t... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/fdmatch.c -o fdmatch.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/fibheap.c -o pic/fibheap.o; \
	else true; fi
yes
checking for int... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/fibheap.c -o fibheap.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/filename_cmp.c -o pic/filename_cmp.o; \
	else true; fi
yes
checking size of int... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/filename_cmp.c -o filename_cmp.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/floatformat.c -o pic/floatformat.o; \
	else true; fi
4
checking for long... yes
checking size of long... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/floatformat.c -o floatformat.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/fnmatch.c -o pic/fnmatch.o; \
	else true; fi
8
checking for ANSI C header files... (cached) yes
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/fnmatch.c -o fnmatch.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/fopen_unlocked.c -o pic/fopen_unlocked.o; \
	else true; fi
checking build system type... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/fopen_unlocked.c -o fopen_unlocked.o
x86_64-pc-linux-gnu
checking host system type... if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/getopt.c -o pic/getopt.o; \
	else true; fi
x86_64-pc-linux-gnu
checking target system type... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/getopt.c -o getopt.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/getopt1.c -o pic/getopt1.o; \
	else true; fi
x86_64-pc-linux-gnu
checking for decimal floating point... bid
checking whether byte ordering is bigendian... gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/getopt1.c -o getopt1.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/getpwd.c -o pic/getpwd.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/getpwd.c -o getpwd.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/getruntime.c -o pic/getruntime.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/getruntime.c -o getruntime.o
no
updating cache ./config.cache
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/hashtab.c -o pic/hashtab.o; \
	else true; fi
configure: creating ./config.status
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/hashtab.c -o hashtab.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/hex.c -o pic/hex.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/hex.c -o hex.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/lbasename.c -o pic/lbasename.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/lbasename.c -o lbasename.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/lrealpath.c -o pic/lrealpath.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/lrealpath.c -o lrealpath.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/make-relative-prefix.c -o pic/make-relative-prefix.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/make-relative-prefix.c -o make-relative-prefix.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/make-temp-file.c -o pic/make-temp-file.o; \
	else true; fi
config.status: creating Makefile
config.status: creating config.h
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/make-temp-file.c -o make-temp-file.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/objalloc.c -o pic/objalloc.o; \
	else true; fi
config.status: executing gstdint.h commands
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/objalloc.c -o objalloc.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/obstack.c -o pic/obstack.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/obstack.c -o obstack.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/partition.c -o pic/partition.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/partition.c -o partition.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/pexecute.c -o pic/pexecute.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/pexecute.c -o pexecute.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/physmem.c -o pic/physmem.o; \
	else true; fi
make[5]: Entering directory `/«PKGBUILDDIR»/build/intl'
make[5]: Nothing to be done for `all'.
make[5]: Leaving directory `/«PKGBUILDDIR»/build/intl'
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/pex-common.c -o pic/pex-common.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/physmem.c -o physmem.o
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/pex-common.c -o pex-common.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/pex-one.c -o pic/pex-one.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/pex-one.c -o pex-one.o
if [ x"-fpic" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  -fpic ../../src/libiberty/pex-unix.c -o pic/pex-unix.o; \
	else true; fi
make[5]: Entering directory `/«PKGBUILDDIR»/build/build-x86_64-linux-gnu/libiberty'
if [ x"" != x ] && [ ! -d pic ]; then \
	  mkdir pic; \
	else true; fi
touch stamp-picdir
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/safe-ctype.c -o pic/safe-ctype.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/safe-ctype.c -o safe-ctype.o
gcc -c -DHAVE_CONFIG_H -g -fkeep-inline-functions  -I. -I../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../src/libiberty/pex-unix.c -o pex-unix.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/sort.c -o pic/sort.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/sort.c -o sort.o
rm -f ./libiberty.a pic/./libiberty.a
ar rc ./libiberty.a \
	  ./regex.o ./cplus-dem.o ./cp-demangle.o ./md5.o ./sha1.o ./alloca.o ./argv.o ./choose-temp.o ./concat.o ./cp-demint.o ./dyn-string.o ./fdmatch.o ./fibheap.o ./filename_cmp.o ./floatformat.o ./fnmatch.o ./fopen_unlocked.o ./getopt.o ./getopt1.o ./getpwd.o ./getruntime.o ./hashtab.o ./hex.o ./lbasename.o ./lrealpath.o ./make-relative-prefix.o ./make-temp-file.o ./objalloc.o ./obstack.o ./partition.o ./pexecute.o ./physmem.o ./pex-common.o ./pex-one.o ./pex-unix.o ./safe-ctype.o ./sort.o ./spaces.o ./splay-tree.o ./strerror.o ./strsignal.o ./unlink-if-ordinary.o ./xatexit.o ./xexit.o ./xmalloc.o ./xmemdup.o ./xstrdup.o ./xstrerror.o ./xstrndup.o  
ranlib ./libiberty.a
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/spaces.c -o pic/spaces.o; \
	else true; fi
if [ x"-fpic" != x ]; then \
	  cd pic; \
	  ar rc ./libiberty.a \
	    ./regex.o ./cplus-dem.o ./cp-demangle.o ./md5.o ./sha1.o ./alloca.o ./argv.o ./choose-temp.o ./concat.o ./cp-demint.o ./dyn-string.o ./fdmatch.o ./fibheap.o ./filename_cmp.o ./floatformat.o ./fnmatch.o ./fopen_unlocked.o ./getopt.o ./getopt1.o ./getpwd.o ./getruntime.o ./hashtab.o ./hex.o ./lbasename.o ./lrealpath.o ./make-relative-prefix.o ./make-temp-file.o ./objalloc.o ./obstack.o ./partition.o ./pexecute.o ./physmem.o ./pex-common.o ./pex-one.o ./pex-unix.o ./safe-ctype.o ./sort.o ./spaces.o ./splay-tree.o ./strerror.o ./strsignal.o ./unlink-if-ordinary.o ./xatexit.o ./xexit.o ./xmalloc.o ./xmemdup.o ./xstrdup.o ./xstrerror.o ./xstrndup.o  ; \
	  ranlib ./libiberty.a; \
	  cd ..; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/spaces.c -o spaces.o
make[5]: Leaving directory `/«PKGBUILDDIR»/build/libiberty'
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/splay-tree.c -o pic/splay-tree.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/splay-tree.c -o splay-tree.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/strerror.c -o pic/strerror.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/strerror.c -o strerror.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/strsignal.c -o pic/strsignal.o; \
	else true; fi
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/unlink-if-ordinary.c -o pic/unlink-if-ordinary.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/strsignal.c -o strsignal.o
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/unlink-if-ordinary.c -o unlink-if-ordinary.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/xatexit.c -o pic/xatexit.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/xatexit.c -o xatexit.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/xexit.c -o pic/xexit.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/xexit.c -o xexit.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/xmalloc.c -o pic/xmalloc.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/xmalloc.c -o xmalloc.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/xmemdup.c -o pic/xmemdup.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/xmemdup.c -o xmemdup.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/xstrdup.c -o pic/xstrdup.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/xstrdup.c -o xstrdup.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/xstrerror.c -o pic/xstrerror.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/xstrerror.c -o xstrerror.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/xstrndup.c -o pic/xstrndup.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/xstrndup.c -o xstrndup.o
rm -f needed-list; touch needed-list; \
	for f in atexit calloc memchr memcmp memcpy memmove memset rename strchr strerror strncmp strrchr strstr strtol strtoul tmpnam vfprintf vprintf vfork waitpid bcmp bcopy bzero; do \
	  for g in  ; do \
	    case "$g" in \
	      *$f*) echo $g >> needed-list ;; \
	    esac; \
	  done; \
	done
echo ./regex.o ./cplus-dem.o ./cp-demangle.o ./md5.o ./sha1.o ./alloca.o ./argv.o ./choose-temp.o ./concat.o ./cp-demint.o ./dyn-string.o ./fdmatch.o ./fibheap.o ./filename_cmp.o ./floatformat.o ./fnmatch.o ./fopen_unlocked.o ./getopt.o ./getopt1.o ./getpwd.o ./getruntime.o ./hashtab.o ./hex.o ./lbasename.o ./lrealpath.o ./make-relative-prefix.o ./make-temp-file.o ./objalloc.o ./obstack.o ./partition.o ./pexecute.o ./physmem.o ./pex-common.o ./pex-one.o ./pex-unix.o ./safe-ctype.o ./sort.o ./spaces.o ./splay-tree.o ./strerror.o ./strsignal.o ./unlink-if-ordinary.o ./xatexit.o ./xexit.o ./xmalloc.o ./xmemdup.o ./xstrdup.o ./xstrerror.o ./xstrndup.o > required-list
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/regex.c -o pic/regex.o; \
	else true; fi
make[6]: Entering directory `/«PKGBUILDDIR»/build/build-x86_64-linux-gnu/libiberty/testsuite'
make[6]: Nothing to be done for `all'.
make[6]: Leaving directory `/«PKGBUILDDIR»/build/build-x86_64-linux-gnu/libiberty/testsuite'
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/regex.c -o regex.o
Configuring stage 1 in ./libcpp
../../../src/libiberty/regex.c:284:11: warning: expression result unused [-Wunused-value]
   bzero (re_syntax_table, sizeof re_syntax_table);
   ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
In file included from ../../../src/libiberty/regex.c:638:
../../../src/libiberty/regex.c:3124:20: warning: expression result unused [-Wunused-value]
            bzero (b, (1 << BYTEWIDTH) / BYTEWIDTH);
            ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
In file included from ../../../src/libiberty/regex.c:638:
../../../src/libiberty/regex.c:4582:10: warning: expression result unused [-Wunused-value]
  bzero (fastmap, 1 << BYTEWIDTH);  /* Assume nothing's valid.  */
  ~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../../../src/libiberty/regex.c:152:50: note: expanded from macro 'bzero'
#      define bzero(s, n)       (memset (s, '\0', n), (s))
                                                       ^
3 warnings generated.
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/cplus-dem.c -o pic/cplus-dem.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/cplus-dem.c -o cplus-dem.o
configure: creating cache ./config.cache
checking build system type... x86_64-pc-linux-gnu
checking host system type... x86_64-pc-linux-gnu
checking target system type... x86_64-pc-linux-gnu
checking whether /usr/bin/make sets $(MAKE)... yes
checking for a BSD-compatible install... /usr/bin/install -c
checking for x86_64-linux-gnu-gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ANSI C... none needed
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/cp-demangle.c -o pic/cp-demangle.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/cp-demangle.c -o cp-demangle.o
checking for x86_64-linux-gnu-ranlib... ranlib
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking for _LARGE_FILES value needed for large files... no
checking for aclocal... aclocal
checking for autoconf... autoconf
checking for autoheader... autoheader
checking whether gcc supports -W... yes
checking whether gcc supports -Wall... yes
checking whether gcc supports -Wwrite-strings... yes
checking whether gcc supports -Wstrict-prototypes... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/md5.c -o pic/md5.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/md5.c -o md5.o
yes
checking whether gcc supports -Wmissing-prototypes... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/sha1.c -o pic/sha1.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/sha1.c -o sha1.o
yes
checking whether gcc supports -Wold-style-definition... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/alloca.c -o pic/alloca.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/alloca.c -o alloca.o
yes
checking whether gcc supports -Wmissing-format-attribute... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/argv.c -o pic/argv.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/argv.c -o argv.o
yes
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/choose-temp.c -o pic/choose-temp.o; \
	else true; fi
checking whether gcc supports -pedantic -Wno-long-long... gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/choose-temp.c -o choose-temp.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/concat.c -o pic/concat.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/concat.c -o concat.o
yes
checking dependency style of gcc... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/cp-demint.c -o pic/cp-demint.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/cp-demint.c -o cp-demint.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/dyn-string.c -o pic/dyn-string.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/dyn-string.c -o dyn-string.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/fdmatch.c -o pic/fdmatch.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/fdmatch.c -o fdmatch.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/fibheap.c -o pic/fibheap.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/fibheap.c -o fibheap.o
gcc3
checking whether time.h and sys/time.h may both be included... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/filename_cmp.c -o pic/filename_cmp.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/filename_cmp.c -o filename_cmp.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/floatformat.c -o pic/floatformat.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/floatformat.c -o floatformat.o
yes
checking whether string.h and strings.h may both be included... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/fnmatch.c -o pic/fnmatch.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/fnmatch.c -o fnmatch.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/fopen_unlocked.c -o pic/fopen_unlocked.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/fopen_unlocked.c -o fopen_unlocked.o
yes
checking how to run the C preprocessor... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/getopt.c -o pic/getopt.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/getopt.c -o getopt.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/getopt1.c -o pic/getopt1.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/getopt1.c -o getopt1.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/getpwd.c -o pic/getpwd.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/getpwd.c -o getpwd.o
gcc -E
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/getruntime.c -o pic/getruntime.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/getruntime.c -o getruntime.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/hashtab.c -o pic/hashtab.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/hashtab.c -o hashtab.o
checking for egrep... grep -E
checking for ANSI C header files... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/hex.c -o pic/hex.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/hex.c -o hex.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/lbasename.c -o pic/lbasename.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/lbasename.c -o lbasename.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/lrealpath.c -o pic/lrealpath.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/lrealpath.c -o lrealpath.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/make-relative-prefix.c -o pic/make-relative-prefix.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/make-relative-prefix.c -o make-relative-prefix.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/make-temp-file.c -o pic/make-temp-file.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/make-temp-file.c -o make-temp-file.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/objalloc.c -o pic/objalloc.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/objalloc.c -o objalloc.o
yes
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/obstack.c -o pic/obstack.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/obstack.c -o obstack.o
checking for sys/types.h... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/partition.c -o pic/partition.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/partition.c -o partition.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/pexecute.c -o pic/pexecute.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/pexecute.c -o pexecute.o
yes
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/physmem.c -o pic/physmem.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/physmem.c -o physmem.o
checking for sys/stat.h... if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/pex-common.c -o pic/pex-common.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/pex-common.c -o pex-common.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/pex-one.c -o pic/pex-one.o; \
	else true; fi
yes
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/pex-one.c -o pex-one.o
if [ x"" != x ]; then \
	  gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic   ../../../src/libiberty/pex-unix.c -o pic/pex-unix.o; \
	else true; fi
gcc -c -DHAVE_CONFIG_H -g -O2  -I. -I../../../src/libiberty/../include  -W -Wall -Wwrite-strings -Wc++-compat -Wstrict-prototypes -pedantic  ../../../src/libiberty/pex-unix.c -o pex-unix.o
checking for stdlib.h... rm -f ./libiberty.a pic/./libiberty.a
yes
ar rc ./libiberty.a \
	  ./regex.o ./cplus-dem.o ./cp-demangle.o ./md5.o ./sha1.o ./alloca.o ./argv.o ./choose-temp.o ./concat.o ./cp-demint.o ./dyn-string.o ./fdmatch.o ./fibheap.o ./filename_cmp.o ./floatformat.o ./fnmatch.o ./fopen_unlocked.o ./getopt.o ./getopt1.o ./getpwd.o ./getruntime.o ./hashtab.o ./hex.o ./lbasename.o ./lrealpath.o ./make-relative-prefix.o ./make-temp-file.o ./objalloc.o ./obstack.o ./partition.o ./pexecute.o ./physmem.o ./pex-common.o ./pex-one.o ./pex-unix.o ./safe-ctype.o ./sort.o ./spaces.o ./splay-tree.o ./strerror.o ./strsignal.o ./unlink-if-ordinary.o ./xatexit.o ./xexit.o ./xmalloc.o ./xmemdup.o ./xstrdup.o ./xstrerror.o ./xstrndup.o  
checking for string.h... ranlib ./libiberty.a
if [ x"" != x ]; then \
	  cd pic; \
	  ar rc ./libiberty.a \
	    ./regex.o ./cplus-dem.o ./cp-demangle.o ./md5.o ./sha1.o ./alloca.o ./argv.o ./choose-temp.o ./concat.o ./cp-demint.o ./dyn-string.o ./fdmatch.o ./fibheap.o ./filename_cmp.o ./floatformat.o ./fnmatch.o ./fopen_unlocked.o ./getopt.o ./getopt1.o ./getpwd.o ./getruntime.o ./hashtab.o ./hex.o ./lbasename.o ./lrealpath.o ./make-relative-prefix.o ./make-temp-file.o ./objalloc.o ./obstack.o ./partition.o ./pexecute.o ./physmem.o ./pex-common.o ./pex-one.o ./pex-unix.o ./safe-ctype.o ./sort.o ./spaces.o ./splay-tree.o ./strerror.o ./strsignal.o ./unlink-if-ordinary.o ./xatexit.o ./xexit.o ./xmalloc.o ./xmemdup.o ./xstrdup.o ./xstrerror.o ./xstrndup.o  ; \
	  ranlib ./libiberty.a; \
	  cd ..; \
	else true; fi
make[5]: Leaving directory `/«PKGBUILDDIR»/build/build-x86_64-linux-gnu/libiberty'
make[5]: Entering directory `/«PKGBUILDDIR»/build/libdecnumber'
source='../../src/libdecnumber/decNumber.c' object='decNumber.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/decNumber.c
yes
checking for memory.h... yes
checking for strings.h... source='../../src/libdecnumber/decContext.c' object='decContext.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/decContext.c
yes
checking for inttypes.h... source='../../src/libdecnumber/bid/decimal32.c' object='decimal32.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/bid/decimal32.c
yes
checking for stdint.h... source='../../src/libdecnumber/bid/decimal64.c' object='decimal64.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/bid/decimal64.c
yes
checking for unistd.h... source='../../src/libdecnumber/bid/decimal128.c' object='decimal128.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/bid/decimal128.c
yes
checking iconv.h usability... source='../../src/libdecnumber/bid/bid2dpd_dpd2bid.c' object='bid2dpd_dpd2bid.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/bid/bid2dpd_dpd2bid.c
source='../../src/libdecnumber/bid/host-ieee32.c' object='host-ieee32.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/bid/host-ieee32.c
yes
checking iconv.h presence... source='../../src/libdecnumber/bid/host-ieee64.c' object='host-ieee64.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/bid/host-ieee64.c
yes
checking for iconv.h... yes
source='../../src/libdecnumber/bid/host-ieee128.c' object='host-ieee128.o' libtool=no gcc  -I../../src/libdecnumber -I.  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wcast-qual -pedantic -Wno-long-long  -I../../src/libdecnumber -I.  -c ../../src/libdecnumber/bid/host-ieee128.c
checking locale.h usability... rm -f libdecnumber.a
ar cru libdecnumber.a decNumber.o decContext.o decimal32.o decimal64.o decimal128.o bid2dpd_dpd2bid.o host-ieee32.o host-ieee64.o host-ieee128.o
ranlib libdecnumber.a
make[5]: Leaving directory `/«PKGBUILDDIR»/build/libdecnumber'
make[5]: Entering directory `/«PKGBUILDDIR»/build/build-x86_64-linux-gnu/fixincludes'
gcc -c -g -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wno-overlength-strings -pedantic -Wno-long-long   -DHAVE_CONFIG_H -I. -I../../../src/fixincludes -I../include -I../../../src/fixincludes/../include ../../../src/fixincludes/fixincl.c
yes
checking locale.h presence... yes
checking for locale.h... yes
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking limits.h usability... gcc -c -g -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wno-overlength-strings -pedantic -Wno-long-long   -DHAVE_CONFIG_H -I. -I../../../src/fixincludes -I../include -I../../../src/fixincludes/../include ../../../src/fixincludes/fixtests.c
yes
checking limits.h presence... gcc -c -g -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wno-overlength-strings -pedantic -Wno-long-long   -DHAVE_CONFIG_H -I. -I../../../src/fixincludes -I../include -I../../../src/fixincludes/../include ../../../src/fixincludes/fixfixes.c
yes
checking for limits.h... yes
checking stddef.h usability... gcc -c -g -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wno-overlength-strings -pedantic -Wno-long-long   -DHAVE_CONFIG_H -I. -I../../../src/fixincludes -I../include -I../../../src/fixincludes/../include ../../../src/fixincludes/server.c
yes
checking stddef.h presence... gcc -c -g -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wno-overlength-strings -pedantic -Wno-long-long   -DHAVE_CONFIG_H -I. -I../../../src/fixincludes -I../include -I../../../src/fixincludes/../include ../../../src/fixincludes/procopen.c
yes
checking for stddef.h... yes
gcc -c -g -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wno-overlength-strings -pedantic -Wno-long-long   -DHAVE_CONFIG_H -I. -I../../../src/fixincludes -I../include -I../../../src/fixincludes/../include ../../../src/fixincludes/fixlib.c
checking for stdlib.h... (cached) yes
checking for strings.h... (cached) yes
gcc -c -g -O2 -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -Wno-overlength-strings -pedantic -Wno-long-long   -DHAVE_CONFIG_H -I. -I../../../src/fixincludes -I../include -I../../../src/fixincludes/../include ../../../src/fixincludes/fixopts.c
checking for string.h... (cached) yes
checking sys/file.h usability... srcdir="../../../src/fixincludes" /bin/bash ../../../src/fixincludes/mkfixinc.sh x86_64-pc-linux-gnu
sed -e 's/@gcc_version@/4.4.7/' < mkheaders.almost > mkheadersT
mv -f mkheadersT mkheaders
gcc -g -O2  -o fixincl fixincl.o fixtests.o fixfixes.o server.o procopen.o fixlib.o fixopts.o ../libiberty/libiberty.a
yes
checking sys/file.h presence... echo timestamp > full-stamp
make[5]: Leaving directory `/«PKGBUILDDIR»/build/build-x86_64-linux-gnu/fixincludes'
yes
checking for sys/file.h... yes
checking for unistd.h... (cached) yes
checking for an ANSI C-conforming const... yes
checking for inline... inline
checking for obstacks... yes
checking for off_t... yes
checking for size_t... yes
checking for ssize_t... yes
checking whether struct tm is in sys/time.h or time.h... time.h
checking for int... yes
checking size of int... 4
checking for long... yes
checking size of long... 8
checking for clearerr_unlocked... yes
checking for feof_unlocked... yes
checking for ferror_unlocked... yes
checking for fflush_unlocked... yes
checking for fgetc_unlocked... yes
checking for fgets_unlocked... yes
checking for fileno_unlocked... yes
checking for fprintf_unlocked... no
checking for fputc_unlocked... yes
checking for fputs_unlocked... yes
checking for fread_unlocked... yes
checking for fwrite_unlocked... yes
checking for getchar_unlocked... yes
checking for getc_unlocked... yes
checking for putchar_unlocked... yes
checking for putc_unlocked... yes
checking whether abort is declared... yes
checking whether asprintf is declared... no
checking whether basename is declared... no
checking whether errno is declared... no
checking whether getopt is declared... yes
checking whether clearerr_unlocked is declared... yes
checking whether feof_unlocked is declared... yes
checking whether ferror_unlocked is declared... yes
checking whether fflush_unlocked is declared... yes
checking whether fgetc_unlocked is declared... yes
checking whether fgets_unlocked is declared... no
checking whether fileno_unlocked is declared... yes
checking whether fprintf_unlocked is declared... no
checking whether fputc_unlocked is declared... yes
checking whether fputs_unlocked is declared... no
checking whether fread_unlocked is declared... yes
checking whether fwrite_unlocked is declared... yes
checking whether getchar_unlocked is declared... yes
checking whether getc_unlocked is declared... yes
checking whether putchar_unlocked is declared... yes
checking whether putc_unlocked is declared... yes
checking whether vasprintf is declared... no
checking for working alloca.h... yes
checking for alloca... yes
checking for ANSI C header files... (cached) yes
checking for nl_langinfo and CODESET... yes
checking whether NLS is requested... yes
checking for catalogs to be installed...  be ca da de el es fr id ja nl sv tr uk vi zh_CN zh_TW be ca da de el es fr id ja nl sv tr uk vi zh_CN zh_TW
checking for uchar... 
checking for ld used by GCC... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for shared library run path origin... done
checking for iconv... yes
checking for iconv declaration... 
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
updating cache ./config.cache
configure: creating ./config.status
config.status: creating Makefile
config.status: creating config.h
config.status: executing depdir commands
mkdir -p -- .deps
make[5]: Entering directory `/«PKGBUILDDIR»/build/libcpp'
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o charset.o -MT charset.o -MMD -MP -MF .deps/charset.Tpo ../../src/libcpp/charset.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o directives.o -MT directives.o -MMD -MP -MF .deps/directives.Tpo ../../src/libcpp/directives.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o directives-only.o -MT directives-only.o -MMD -MP -MF .deps/directives-only.Tpo ../../src/libcpp/directives-only.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o errors.o -MT errors.o -MMD -MP -MF .deps/errors.Tpo ../../src/libcpp/errors.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o expr.o -MT expr.o -MMD -MP -MF .deps/expr.Tpo ../../src/libcpp/expr.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o files.o -MT files.o -MMD -MP -MF .deps/files.Tpo ../../src/libcpp/files.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o identifiers.o -MT identifiers.o -MMD -MP -MF .deps/identifiers.Tpo ../../src/libcpp/identifiers.c
echo "#define LOCALEDIR \"/usr/share/locale\"" > localedir.new
../../src/libcpp/../move-if-change localedir.new localedir.h
echo timestamp > localedir.hs
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o lex.o -MT lex.o -MMD -MP -MF .deps/lex.Tpo ../../src/libcpp/lex.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o line-map.o -MT line-map.o -MMD -MP -MF .deps/line-map.Tpo ../../src/libcpp/line-map.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o macro.o -MT macro.o -MMD -MP -MF .deps/macro.Tpo ../../src/libcpp/macro.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o mkdeps.o -MT mkdeps.o -MMD -MP -MF .deps/mkdeps.Tpo ../../src/libcpp/mkdeps.c
../../src/libcpp/macro.c:1730:40: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
              cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
                                              ^~~~~~~~~~~~~~~~~~
../../src/libcpp/macro.c:1743:40: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
              cpp_error (pfile, CPP_DL_ERROR, paste_op_error_msg);
                                              ^~~~~~~~~~~~~~~~~~
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o pch.o -MT pch.o -MMD -MP -MF .deps/pch.Tpo ../../src/libcpp/pch.c
2 warnings generated.
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o symtab.o -MT symtab.o -MMD -MP -MF .deps/symtab.Tpo ../../src/libcpp/symtab.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o traditional.o -MT traditional.o -MMD -MP -MF .deps/traditional.Tpo ../../src/libcpp/traditional.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o makedepend.o -MT makedepend.o -MMD -MP -MF .deps/makedepend.Tpo ../../src/libcpp/makedepend.c
gcc  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -g -fkeep-inline-functions -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wold-style-definition -Wmissing-format-attribute -pedantic -Wno-long-long  -I../../src/libcpp -I. -I../../src/libcpp/../include -I../../src/libcpp/include  -DPACKAGE_SUFFIX=\"-4.4\" -c -o init.o -MT init.o -MMD -MP -MF .deps/init.Tpo ../../src/libcpp/init.c
rm -f libcpp.a
ar cru libcpp.a charset.o directives.o directives-only.o errors.o expr.o files.o identifiers.o init.o lex.o line-map.o macro.o mkdeps.o pch.o symtab.o traditional.o
ranlib libcpp.a
gcc -g -fkeep-inline-functions  -o makedepend \
	  makedepend.o libcpp.a ../libiberty/libiberty.a \
	   
make[5]: Leaving directory `/«PKGBUILDDIR»/build/libcpp'
no
checking how to run the C preprocessor... gcc -E
checking for egrep... grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking minix/config.h usability... no
checking minix/config.h presence... no
checking for minix/config.h... no
checking whether it is safe to define __EXTENSIONS__... yes
checking how to run the C preprocessor... gcc -E
checking for inline... inline
checking for special C compiler options needed for large files... no
checking for _FILE_OFFSET_BITS value needed for large files... no
checking for _LARGE_FILES value needed for large files... no
checking for void *... yes
checking size of void *... 8
checking for short... yes
checking size of short... 2
checking for int... yes
checking size of int... 4
checking for long... yes
checking size of long... 8
checking for long long... yes
checking for long long... (cached) yes
checking size of long long... 8
checking for __int64... no
checking whether gcc supports -W... yes
checking whether gcc supports -Wall... yes
checking whether gcc supports -Wwrite-strings... yes
checking whether gcc supports -Wstrict-prototypes... yes
checking whether gcc supports -Wmissing-prototypes... yes
checking whether gcc supports -Wcast-qual... yes
checking whether gcc supports -Wold-style-definition... yes
checking whether gcc supports -Wc++-compat... yes
checking whether gcc supports -Wmissing-format-attribute... yes
checking whether gcc supports -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings... yes
checking valgrind.h usability... no
checking valgrind.h presence... no
checking for valgrind.h... no
configure: WARNING: fixed-point is not supported for this target
checking whether /usr/bin/make sets $(MAKE)... yes
checking for gawk... gawk
checking whether ln -s works... yes
checking whether ln works... yes
checking for x86_64-linux-gnu-ranlib... ranlib
checking for a BSD compatible install... /usr/bin/install -c
checking for cmp's capabilities... gnucompare
checking for mktemp... yes
checking for makeinfo... makeinfo --split-size=5000000 --split-size=5000000
checking for modern makeinfo... yes
checking for recent Pod::Man... yes
checking for flex... flex
checking for bison... bison
checking for nm... nm
checking for ar... ar
checking for ANSI C header files... (cached) yes
checking whether time.h and sys/time.h may both be included... yes
checking whether string.h and strings.h may both be included... yes
checking for sys/wait.h that is POSIX.1 compatible... yes
checking for limits.h... yes
checking for stddef.h... yes
checking for string.h... (cached) yes
checking for strings.h... (cached) yes
checking for stdlib.h... (cached) yes
checking for time.h... yes
checking for iconv.h... yes
checking for fcntl.h... yes
checking for unistd.h... (cached) yes
checking for sys/file.h... yes
checking for sys/time.h... yes
checking for sys/mman.h... yes
checking for sys/resource.h... yes
checking for sys/param.h... yes
checking for sys/times.h... yes
checking for sys/stat.h... (cached) yes
checking for direct.h... no
checking for malloc.h... yes
checking for langinfo.h... yes
checking for ldfcn.h... no
checking for locale.h... yes
checking for wchar.h... yes
checking for thread.h... no
checking for pthread.h... yes
checking for CHAR_BIT... yes
checking whether byte ordering is bigendian... no
checking for collect2 libraries... none required
checking for library containing exc_resume... no
checking for library containing ldexp... none required
checking for inttypes.h... yes
checking for times... yes
checking for clock... yes
checking for kill... yes
checking for getrlimit... yes
checking for setrlimit... yes
checking for atoll... yes
checking for atoq... no
checking for sysconf... yes
checking for strsignal... yes
checking for getrusage... yes
checking for nl_langinfo... yes
checking for gettimeofday... yes
checking for mbstowcs... yes
checking for wcswidth... yes
checking for mmap... yes
checking for mincore... yes
checking for setlocale... yes
checking for clearerr_unlocked... yes
checking for feof_unlocked... yes
checking for ferror_unlocked... yes
checking for fflush_unlocked... yes
checking for fgetc_unlocked... yes
checking for fgets_unlocked... yes
checking for fileno_unlocked... yes
checking for fprintf_unlocked... no
checking for fputc_unlocked... yes
checking for fputs_unlocked... yes
checking for fread_unlocked... yes
checking for fwrite_unlocked... yes
checking for getchar_unlocked... yes
checking for getc_unlocked... yes
checking for putchar_unlocked... yes
checking for putc_unlocked... yes
checking whether mbstowcs works... yes
checking for ssize_t... yes
checking for caddr_t... yes
checking for uid_t in sys/types.h... yes
checking type of array argument to getgroups... gid_t
checking for sys/mman.h... (cached) yes
checking for mmap... (cached) yes
checking whether read-only mmap of a plain file works... yes
checking whether mmap from /dev/zero works... yes
checking for MAP_ANON(YMOUS)... yes
checking whether mmap with MAP_ANON(YMOUS) works... yes
checking for pid_t... yes
checking for unistd.h... (cached) yes
checking for vfork.h... no
checking for fork... yes
checking for vfork... yes
checking for working fork... yes
checking for working vfork... (cached) yes
checking for ld used by GCC... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for shared library run path origin... done
checking for iconv... yes
checking for iconv declaration... 
         extern size_t iconv (iconv_t cd, char * *inbuf, size_t *inbytesleft, char * *outbuf, size_t *outbytesleft);
checking for LC_MESSAGES... yes
checking for nl_langinfo and CODESET... yes
checking whether getenv is declared... yes
checking whether atol is declared... yes
checking whether asprintf is declared... yes
checking whether sbrk is declared... yes
checking whether abort is declared... yes
checking whether atof is declared... yes
checking whether getcwd is declared... yes
checking whether getwd is declared... yes
checking whether strsignal is declared... yes
checking whether strstr is declared... yes
checking whether strverscmp is declared... yes
checking whether errno is declared... yes
checking whether snprintf is declared... yes
checking whether vsnprintf is declared... yes
checking whether vasprintf is declared... yes
checking whether malloc is declared... yes
checking whether realloc is declared... yes
checking whether calloc is declared... yes
checking whether free is declared... yes
checking whether basename is declared... yes
checking whether getopt is declared... no
checking whether clock is declared... yes
checking whether getpagesize is declared... yes
checking whether clearerr_unlocked is declared... yes
checking whether feof_unlocked is declared... yes
checking whether ferror_unlocked is declared... yes
checking whether fflush_unlocked is declared... yes
checking whether fgetc_unlocked is declared... yes
checking whether fgets_unlocked is declared... yes
checking whether fileno_unlocked is declared... yes
checking whether fprintf_unlocked is declared... no
checking whether fputc_unlocked is declared... yes
checking whether fputs_unlocked is declared... yes
checking whether fread_unlocked is declared... yes
checking whether fwrite_unlocked is declared... yes
checking whether getchar_unlocked is declared... yes
checking whether getc_unlocked is declared... yes
checking whether putchar_unlocked is declared... yes
checking whether putc_unlocked is declared... yes
checking whether getrlimit is declared... yes
checking whether setrlimit is declared... yes
checking whether getrusage is declared... yes
checking whether ldgetname is declared... no
checking whether times is declared... yes
checking whether sigaltstack is declared... yes
checking for struct tms... yes
checking for clock_t... yes
checking for .preinit_array/.init_array/.fini_array support... yes
checking if mkdir takes one argument... no
Using `../../src/gcc/config/i386/i386.c' for machine-specific logic.
Using `../../src/gcc/config/i386/i386.md' as machine description file.
Using the following target machine macro files:
	../../src/gcc/config/i386/biarch64.h
	../../src/gcc/config/i386/i386.h
	../../src/gcc/config/i386/unix.h
	../../src/gcc/config/i386/att.h
	../../src/gcc/config/dbxelf.h
	../../src/gcc/config/elfos.h
	../../src/gcc/config/svr4.h
	../../src/gcc/config/linux.h
	../../src/gcc/config/i386/x86-64.h
	../../src/gcc/config/i386/linux64.h
Using host-linux.o for host machine hooks.
checking for __cxa_atexit... yes
checking whether NLS is requested... yes
checking for catalogs to be installed...  be da de el es fi fr id ja nl ru sr sv tr zh_CN zh_TW be da de el es fi fr id ja nl ru sr sv tr zh_CN zh_TW
checking for a sed that does not truncate output... /bin/sed
checking for fgrep... grep -F
checking for ld used by gcc... /usr/bin/ld
checking if the linker (/usr/bin/ld) is GNU ld... yes
checking for BSD- or MS-compatible name lister (nm)... nm
checking the name lister (nm) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 3458764513820540925
checking whether the shell understands some XSI constructs... yes
checking whether the shell understands "+="... yes
checking for /usr/bin/ld option to reload object files... -r
checking for x86_64-linux-gnu-objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for x86_64-linux-gnu-ar... (cached) ar
checking for x86_64-linux-gnu-strip... no
checking for strip... strip
checking for x86_64-linux-gnu-ranlib... (cached) ranlib
checking command to parse nm output from gcc object... ok
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... yes
checking for gcc option to produce PIC... -fPIC -DPIC
checking if gcc PIC flag -fPIC -DPIC works... yes
checking if gcc static flag -static works... yes
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/usr/bin/ld -m elf_x86_64) supports shared libraries... yes
checking whether -lc should be explicitly linked in... no
checking dynamic linker characteristics... GNU/Linux ld.so
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking for as... /usr/bin/as
checking what assembler to use... /usr/bin/as
checking what linker to use... /usr/bin/ld
checking for nm... /usr/bin/nm
checking what nm to use... /usr/bin/nm
checking for objdump... /usr/bin/objdump
checking what objdump to use... /usr/bin/objdump
checking for readelf... /usr/bin/readelf
checking what readelf to use... /usr/bin/readelf
checking assembler for .balign and .p2align... yes
checking assembler for .p2align with maximum skip... yes
checking assembler for .literal16... no
checking assembler for working .subsection -1... yes
checking assembler for .weak... yes
checking assembler for .weakref... yes
checking assembler for .nsubspa comdat... no
checking assembler for .hidden... yes
checking linker for .hidden support... yes
checking linker read-only and read-write section mixing... read-write
checking assembler for .sleb128 and .uleb128... yes
checking assembler for cfi directives... yes
checking assembler for working cfi advance... yes
checking assembler for cfi personality directive... yes
checking assembler for cfi sections directive... yes
checking assembler for eh_frame optimization... yes
checking assembler for section merging support... yes
checking assembler for COMDAT group support... yes
checking assembler for thread-local storage support... yes
checking linker -Bstatic/-Bdynamic option... yes
checking assembler for filds and fists mnemonics... yes
checking assembler for cmov syntax... no
checking assembler for ffreep mnemonic... yes
checking assembler for .quad directive... yes
checking assembler for sahf mnemonic... yes
checking assembler for different section symbol subtraction... yes
checking assembler for GOTOFF in data... no
checking assembler for rep and lock prefix... yes
checking assembler for dwarf2 debug_line support... yes
checking assembler for buggy dwarf2 .file directive... no
checking assembler for --gdwarf2 option... yes
checking assembler for --gstabs option... yes
checking assembler for --debug-prefix-map option... yes
checking assembler for .lcomm with alignment... no
checking assembler for tolerance to line number 0... yes
checking linker PT_GNU_EH_FRAME support... yes
checking linker position independent executable support... yes
checking linker EH-compatible garbage collection of sections... yes
checking linker --as-needed support... yes
checking linker *_sol2 emulation support... no
checking linker --build-id support... yes
checking linker --sysroot support... yes
checking __stack_chk_fail in target C library... yes
Using ggc-page for garbage collection.
checking whether to enable maintainer-specific portions of Makefiles... no
Links are now set up to build a native compiler for x86_64-pc-linux-gnu.
updating cache ./config.cache
configure: creating ./config.status
config.status: creating as
config.status: creating collect-ld
config.status: creating nm
config.status: creating Makefile
config.status: creating gccbug
config.status: creating ada/gcc-interface/Makefile
config.status: creating ada/Makefile
config.status: creating auto-host.h
config.status: executing default commands
make[5]: Entering directory `/«PKGBUILDDIR»/build/gcc'
TARGET_CPU_DEFAULT="" \
	HEADERS="auto-host.h ansidecl.h" DEFINES="" \
	/bin/bash ../../src/gcc/mkconfig.sh config.h
TARGET_CPU_DEFAULT="" \
	HEADERS="options.h config/i386/biarch64.h config/i386/i386.h config/i386/unix.h config/i386/att.h config/dbxelf.h config/elfos.h config/svr4.h config/linux.h config/i386/x86-64.h config/i386/linux64.h defaults.h" DEFINES="UCLIBC_DEFAULT=0" \
	/bin/bash ../../src/gcc/mkconfig.sh tm.h
gawk -f ../../src/gcc/opt-gather.awk ../../src/gcc/ada/gcc-interface/lang.opt ../../src/gcc/d/lang.opt ../../src/gcc/fortran/lang.opt ../../src/gcc/java/lang.opt ../../src/gcc/c.opt ../../src/gcc/common.opt ../../src/gcc/config/i386/i386.opt ../../src/gcc/config/linux.opt > tmp-optionlist
TARGET_CPU_DEFAULT="" \
	HEADERS="auto-host.h ansidecl.h" DEFINES="" \
	/bin/bash ../../src/gcc/mkconfig.sh bconfig.h
flex  -ogengtype-lex.c ../../src/gcc/gengtype-lex.l && { \
	  echo '#include "bconfig.h"' > gengtype-lex.c.tmp; \
	  cat gengtype-lex.c >> gengtype-lex.c.tmp; \
	  mv gengtype-lex.c.tmp gengtype-lex.c; \
	}
TARGET_CPU_DEFAULT="" \
	HEADERS="config/i386/i386-protos.h tm-preds.h" DEFINES="" \
	/bin/bash ../../src/gcc/mkconfig.sh tm_p.h
/bin/bash ../../src/gcc/../move-if-change tmp-gi.list gtyp-input.list
echo timestamp > s-gtyp-input
rm -f tmp-all-tree.def
echo '#include "tree.def"' > tmp-all-tree.def
echo 'END_OF_BASE_TREE_CODES' >> tmp-all-tree.def
if test yes = yes \
	   || test -n "../lib:x86_64-linux-gnu ../lib32:i386-linux-gnu"; then \
	  /bin/bash ../../src/gcc/genmultilib \
	    "m64/m32" \
	    "64 32 " \
	    "" \
	    "" \
	    "" \
	    "" \
	    "../lib:x86_64-linux-gnu ../lib32:i386-linux-gnu" \
	    "i386-linux-gnu" \
	    "yes" \
	    > tmp-mlib.h; \
	else \
	  /bin/bash ../../src/gcc/genmultilib '' '' '' '' '' '' '' "i386-linux-gnu" no \
	    > tmp-mlib.h; \
	fi
echo '#include "c-common.def"' >> tmp-all-tree.def
ltf="../../src/gcc/ada/gcc-interface/ada-tree.def ../../src/gcc/cp/cp-tree.def ../../src/gcc/java/java-tree.def ../../src/gcc/objc/objc-tree.def"; for f in $ltf; do \
	  echo "#include \"$f\""; \
	done | sed 's|../../src/gcc/||' >> tmp-all-tree.def
/bin/bash ../../src/gcc/../move-if-change tmp-all-tree.def all-tree.def
echo timestamp > s-alltree
lsf="../../src/gcc/ada/gcc-interface/lang-specs.h ../../src/gcc/d/lang-specs.h ../../src/gcc/java/lang-specs.h"; for f in $lsf; do \
	    echo "#include \"$f\""; \
	done | sed 's|../../src/gcc/||' > tmp-specs.h
/bin/bash ../../src/gcc/../move-if-change tmp-specs.h specs.h
echo timestamp > s-specs
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dummy-checksum.c -o dummy-checksum.o
rm -f mm_malloc.h
cat ../../src/gcc/config/i386/pmm_malloc.h > mm_malloc.h
TARGET_CPU_DEFAULT="" \
	HEADERS="auto-host.h ansidecl.h" DEFINES="USED_FOR_TARGET " \
	/bin/bash ../../src/gcc/mkconfig.sh tconfig.h
/bin/bash ../../src/gcc/../move-if-change tmp-optionlist optionlist
cp ../../src/gcc/config/i386/sfp-machine.h sfp-machine.h
echo timestamp > s-options
(echo "@set version-GCC 4.4.7"; \
	 if [ "" = "experimental" ]; \
	 then echo "@set DEVELOPMENT"; \
	 else echo "@clear DEVELOPMENT"; \
	 fi) > gcc-vers.texiT
echo @set srcdir /«PKGBUILDDIR»/build/gcc/../../src/gcc >> gcc-vers.texiT
echo timestamp > gpl.pod
perl ../../src/gcc/../contrib/texi2pod.pl ../../src/gcc/doc/include/gpl_v3.texi > gpl.pod
if [ -n "(Debian 4.4.7-1) " ]; then \
	  echo "@set VERSION_PACKAGE (Debian 4.4.7-1) " >> gcc-vers.texiT; \
	fi
echo "@set BUGURL @uref{file:///usr/share/doc/gcc-4.4/README.Bugs}" >> gcc-vers.texiT; \
	mv -f gcc-vers.texiT gcc-vers.texi
gawk -f ../../src/gcc/opt-functions.awk -f ../../src/gcc/optc-gen.awk \
	       -v header_name="config.h system.h coretypes.h tm.h" < optionlist > options.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genchecksum.o ../../src/gcc/genchecksum.c
/bin/bash ../../src/gcc/../move-if-change tmp-mlib.h multilib.h
echo timestamp > s-mlib
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/errors.c -o errors.o
if [ xinfo = xinfo ]; then \
		makeinfo --split-size=5000000 --split-size=5000000 --split-size=5000000 --no-split -I . -I ../../src/gcc/doc \
			-I ../../src/gcc/doc/include -o doc/cpp.info ../../src/gcc/doc/cpp.texi; \
	fi
if [ xinfo = xinfo ]; then \
		makeinfo --split-size=5000000 --split-size=5000000 --split-size=5000000 --no-split -I . -I ../../src/gcc/doc \
			-I ../../src/gcc/doc/include -o doc/gcc.info ../../src/gcc/doc/gcc.texi; \
	fi
if [ xinfo = xinfo ]; then \
		makeinfo --split-size=5000000 --split-size=5000000 --split-size=5000000 --no-split -I . -I ../../src/gcc/doc \
			-I ../../src/gcc/doc/include -o doc/gccint.info ../../src/gcc/doc/gccint.texi; \
	fi
if [ xinfo = xinfo ]; then \
		makeinfo --split-size=5000000 --split-size=5000000 --split-size=5000000 --no-split -I ../../src/gcc/doc \
			-I ../../src/gcc/doc/include -o doc/gccinstall.info ../../src/gcc/doc/install.texi; \
	fi
if [ xinfo = xinfo ]; then \
		makeinfo --split-size=5000000 --split-size=5000000 --split-size=5000000 --no-split -I . -I ../../src/gcc/doc \
			-I ../../src/gcc/doc/include -o doc/cppinternals.info ../../src/gcc/doc/cppinternals.texi; \
	fi
echo timestamp > gcc.pod
echo timestamp > doc/gpl.7
perl ../../src/gcc/../contrib/texi2pod.pl ../../src/gcc/doc/invoke.texi > gcc.pod
(pod2man --center="GNU" --release="gcc-4.4.7" --section=7 gpl.pod > doc/gpl.7.T$$ && \
		mv -f doc/gpl.7.T$$ doc/gpl.7) || \
		(rm -f doc/gpl.7.T$$ && exit 1)
No filename or title
make[5]: [gcc.pod] Error 255 (ignored)
gawk -f ../../src/gcc/opt-functions.awk -f ../../src/gcc/opth-gen.awk \
	       < optionlist > tmp-options.h
/bin/bash ../../src/gcc/../move-if-change tmp-options.h options.h
echo timestamp > s-options-h
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genmodes.o ../../src/gcc/genmodes.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/errors.o ../../src/gcc/errors.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gengenrtl.o ../../src/gcc/gengenrtl.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gengtype.o ../../src/gcc/gengtype.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings  -Wno-error -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gengtype-lex.o gengtype-lex.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gengtype-parse.o ../../src/gcc/gengtype-parse.c
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genchecksum \
	    build/genchecksum.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
echo timestamp > doc/gcc.1
(pod2man --center="GNU" --release="gcc-4.4.7" --section=1 gcc.pod > doc/gcc.1.T$$ && \
		mv -f doc/gcc.1.T$$ doc/gcc.1) || \
		(rm -f doc/gcc.1.T$$ && exit 1)
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genmodes \
	    build/genmodes.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/gengenrtl \
	    build/gengenrtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/gengtype \
	    build/gengtype.o build/gengtype-lex.o build/gengtype-parse.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc -c -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gencheck.o ../../src/gcc/gencheck.c
build/genmodes > tmp-modes.c
/bin/bash ../../src/gcc/../move-if-change tmp-modes.c insn-modes.c
echo timestamp > s-modes
build/gengenrtl > tmp-genrtl.c
/bin/bash ../../src/gcc/../move-if-change tmp-genrtl.c genrtl.c
echo timestamp > s-genrtl
build/genmodes -h > tmp-modes.h
/bin/bash ../../src/gcc/../move-if-change tmp-modes.h insn-modes.h
build/gengenrtl -h > tmp-genrtl.h
echo timestamp > s-modes-h
/bin/bash ../../src/gcc/../move-if-change tmp-genrtl.h genrtl.h
build/gengtype ../../src/gcc gtyp-input.list
echo timestamp > s-genrtl-h
build/genmodes -m > tmp-min-modes.c
/bin/bash ../../src/gcc/../move-if-change tmp-min-modes.c min-insn-modes.c
echo timestamp > s-modes-m
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/read-rtl.o ../../src/gcc/read-rtl.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gensupport.o ../../src/gcc/gensupport.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/print-rtl.o ../../src/gcc/print-rtl.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genmddeps.o ../../src/gcc/genmddeps.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genflags.o ../../src/gcc/genflags.c
gcc -c -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genconditions.o ../../src/gcc/genconditions.c
gcc -c -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genpreds.o ../../src/gcc/genpreds.c
gcc -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/gencheck \
	    build/gencheck.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genattr.o ../../src/gcc/genattr.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gencodes.o ../../src/gcc/gencodes.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genconfig.o ../../src/gcc/genconfig.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genautomata.o ../../src/gcc/genautomata.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genemit.o ../../src/gcc/genemit.c
../../src/gcc/genautomata.c:223:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(vect_el_t, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/genautomata.c:223:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(vect_el_t, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/genautomata.c:223:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(vect_el_t, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/genautomata.c:223:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(vect_el_t, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/genautomata.c:1104:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:1175:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genextract.o ../../src/gcc/genextract.c
../../src/gcc/genautomata.c:1226:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:3351:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4135:4: warning: expression result unused [-Wunused-value]
          obstack_finish (&irp);
          ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4123:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4126:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4230:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4233:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4236:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4239:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
../../src/gcc/genautomata.c:4941:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&unit_usages);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/genextract.c:31:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/genautomata.c:9048:3: warning: expression result unused [-Wunused-value]
  obstack_finish (&irp);
  ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
12 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genopinit.o ../../src/gcc/genopinit.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genoutput.o ../../src/gcc/genoutput.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genpeep.o ../../src/gcc/genpeep.c
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genrecog.o ../../src/gcc/genrecog.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genconstants.o ../../src/gcc/genconstants.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/min-insn-modes.o min-insn-modes.c
build/gencheck > tmp-check.h
/bin/bash ../../src/gcc/../move-if-change tmp-check.h tree-check.h
echo timestamp > s-check
echo timestamp > s-gtype
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/rtl.o ../../src/gcc/rtl.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/ggc-none.o ../../src/gcc/ggc-none.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/vec.o ../../src/gcc/vec.c
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/genattrtab.o ../../src/gcc/genattrtab.c
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genconstants \
	    build/genconstants.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genmddeps \
	    build/genmddeps.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genflags \
	    build/genflags.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genconditions \
	    build/genconditions.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genpreds \
	    build/genpreds.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genattr \
	    build/genattr.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
../../src/gcc/genattrtab.c:1665:3: warning: expression result unused [-Wunused-value]
  obstack_finish (rtl_obstack);
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/../include/obstack.h:435:4: note: expanded from macro 'obstack_finish'
   value; })
   ^~~~~
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/gencodes \
	    build/gencodes.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genconfig \
	    build/genconfig.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genautomata \
	    build/genautomata.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a -lm
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genemit \
	    build/genemit.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genextract \
	    build/genextract.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genopinit \
	    build/genopinit.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genoutput \
	    build/genoutput.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genpeep \
	    build/genpeep.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
1 warning generated.
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genrecog \
	    build/genrecog.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
build/genmddeps ../../src/gcc/config/i386/i386.md > tmp-mddeps
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/genattrtab \
	    build/genattrtab.o build/rtl.o build/read-rtl.o build/ggc-none.o build/vec.o build/min-insn-modes.o build/gensupport.o build/print-rtl.o build/errors.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
/bin/bash ../../src/gcc/../move-if-change tmp-mddeps mddeps.mk
echo timestamp > s-mddeps
build/genconstants ../../src/gcc/config/i386/i386.md \
	  > tmp-constants.h
build/genconditions ../../src/gcc/config/i386/i386.md > tmp-condmd.c
build/genpreds -h ../../src/gcc/config/i386/i386.md > tmp-preds.h
/bin/bash ../../src/gcc/../move-if-change tmp-constants.h insn-constants.h
echo timestamp > s-constants
build/genpreds -c ../../src/gcc/config/i386/i386.md > tmp-constrs.h
/bin/bash ../../src/gcc/../move-if-change tmp-preds.h tm-preds.h
echo timestamp > s-preds-h
build/genpreds ../../src/gcc/config/i386/i386.md > tmp-preds.c
/bin/bash ../../src/gcc/../move-if-change tmp-condmd.c build/gencondmd.c
echo timestamp > s-conditions
/bin/bash ../../src/gcc/../move-if-change tmp-constrs.h tm-constrs.h
echo timestamp > s-constrs-h
gcc -c -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gencondmd.o build/gencondmd.c
/bin/bash ../../src/gcc/../move-if-change tmp-preds.c insn-preds.c
echo timestamp > s-preds
In file included from build/gencondmd.c:35:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5155:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   || ((DImode != DImode || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:5155:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   || ((DImode != DImode || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:5458:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5458:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5245:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5245:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5155:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   || ((DImode != DImode || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:5155:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   || ((DImode != DImode || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:5231:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5231:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5245:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5245:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5259:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5259:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:18105:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:18105:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:5486:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5486:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:4866:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:4866:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:5458:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5458:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5515:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5515:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:10858:32: warning: self-comparison always evaluates to true [-Wtautological-compare]
    || (TARGET_SSE2 && (TFmode == TFmode)))
                               ^
../../src/gcc/config/i386/i386.md:10858:32: warning: self-comparison always evaluates to true [-Wtautological-compare]
    || (TARGET_SSE2 && (TFmode == TFmode)))
                               ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:18098:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT))
               ^
../../src/gcc/config/i386/i386.md:18098:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT))
               ^
../../src/gcc/config/i386/i386.md:10826:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode))) && 
                              ^
../../src/gcc/config/i386/i386.md:10826:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode))) && 
                              ^
../../src/gcc/config/i386/i386.md:4919:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:4919:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:5293:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5293:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/mmx.md:707:41: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                        ^
../../src/gcc/config/i386/mmx.md:707:41: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                        ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:4919:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:4919:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:5530:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5530:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5471:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5471:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5259:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5259:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5515:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5515:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:4838:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:4838:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/mmx.md:715:42: warning: self-comparison always evaluates to true [-Wtautological-compare]
((TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                         ^
../../src/gcc/config/i386/mmx.md:715:42: warning: self-comparison always evaluates to true [-Wtautological-compare]
((TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                         ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:18105:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:18105:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:18098:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT))
               ^
../../src/gcc/config/i386/i386.md:18098:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   && ((DImode != DImode) || TARGET_64BIT))
               ^
../../src/gcc/config/i386/i386.md:5274:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5274:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5274:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5274:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:4838:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:4838:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:5471:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5471:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:10812:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode)))
                              ^
../../src/gcc/config/i386/i386.md:10812:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode)))
                              ^
../../src/gcc/config/i386/i386.md:5500:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5500:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5293:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5293:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5486:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5486:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5231:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5231:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5155:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   || ((DImode != DImode || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:5155:16: warning: self-comparison always evaluates to false [-Wtautological-compare]
   || ((DImode != DImode || TARGET_64BIT)
               ^
../../src/gcc/config/i386/i386.md:5530:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5530:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5500:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5500:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/mmx.md:715:42: warning: self-comparison always evaluates to true [-Wtautological-compare]
((TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                         ^
../../src/gcc/config/i386/mmx.md:715:42: warning: self-comparison always evaluates to true [-Wtautological-compare]
((TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                         ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:4880:29: warning: self-comparison always evaluates to false [-Wtautological-compare]
        && (TARGET_64BIT || DImode != DImode))
                                   ^
../../src/gcc/config/i386/i386.md:4880:29: warning: self-comparison always evaluates to false [-Wtautological-compare]
        && (TARGET_64BIT || DImode != DImode))
                                   ^
119 warnings generated.
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  -o build/gencondmd \
	    build/gencondmd.o ../build-x86_64-linux-gnu/libiberty/libiberty.a
build/gencondmd > tmp-cond.md
/bin/bash ../../src/gcc/../move-if-change tmp-cond.md insn-conditions.md
echo timestamp > s-condmd
build/genflags ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-flags.h
build/genattr ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-attr.h
build/gencodes ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-codes.h
/bin/bash ../../src/gcc/../move-if-change tmp-attr.h insn-attr.h
echo timestamp > s-attr
build/genconfig ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-config.h
/bin/bash ../../src/gcc/../move-if-change tmp-codes.h insn-codes.h
echo timestamp > s-codes
build/genattrtab ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-attrtab.c
/bin/bash ../../src/gcc/../move-if-change tmp-flags.h insn-flags.h
echo timestamp > s-flags
build/genautomata ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-automata.c
/bin/bash ../../src/gcc/../move-if-change tmp-config.h insn-config.h
echo timestamp > s-config
build/genemit ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-emit.c
/bin/bash ../../src/gcc/../move-if-change tmp-emit.c insn-emit.c
echo timestamp > s-emit
build/genextract ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-extract.c
/bin/bash ../../src/gcc/../move-if-change tmp-extract.c insn-extract.c
echo timestamp > s-extract
build/genopinit ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-opinit.c
/bin/bash ../../src/gcc/../move-if-change tmp-opinit.c insn-opinit.c
echo timestamp > s-opinit
build/genoutput ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-output.c
/bin/bash ../../src/gcc/../move-if-change tmp-output.c insn-output.c
echo timestamp > s-output
build/genpeep ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-peep.c
/bin/bash ../../src/gcc/../move-if-change tmp-peep.c insn-peep.c
echo timestamp > s-peep
build/genrecog ../../src/gcc/config/i386/i386.md \
	  insn-conditions.md > tmp-recog.c
../../src/gcc/config/i386/i386.md:19829: warning: operand 1 missing mode?
../../src/gcc/config/i386/i386.md:19846: warning: operand 1 missing mode?
../../src/gcc/config/i386/i386.md:19887: warning: operand 1 missing mode?
../../src/gcc/config/i386/i386.md:19904: warning: operand 1 missing mode?
../../src/gcc/config/i386/sse.md:11383: warning: operand 1 missing mode?
/bin/bash ../../src/gcc/../move-if-change tmp-recog.c insn-recog.c
echo timestamp > s-recog
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE -I. -Ibuild -I../../src/gcc -I../../src/gcc/build -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -o build/gcov-iov.o ../../src/gcc/gcov-iov.c
(SHLIB_LINK='/«PKGBUILDDIR»/build/./gcc/xgcc -B/«PKGBUILDDIR»/build/./gcc/ -B/usr/x86_64-linux-gnu/bin/ -B/usr/x86_64-linux-gnu/lib/ -isystem /usr/x86_64-linux-gnu/include -isystem /usr/x86_64-linux-gnu/sys-include -O2  -g -O2 -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition  -isystem ./include  -fPIC -g -DHAVE_GTHR_DEFAULT -DIN_LIBGCC2 -D__GCC_FLOAT_NOT_NEEDED  -shared -nodefaultlibs -Wl,--soname=@shlib_base_name@.so.1 -Wl,--version-script=@shlib_map_file@ -o @multilib_dir@/@shlib_base_name@.so.1.tmp @multilib_flags@ @shlib_objs@ -lc && rm -f @multilib_dir@/@shlib_base_name@.so && if [ -f @multilib_dir@/@shlib_base_name@.so.1 ]; then mv -f @multilib_dir@/@shlib_base_name@.so.1 @multilib_dir@/@shlib_base_name@.so.1.backup; else true; fi && mv @multilib_dir@/@shlib_base_name@.so.1.tmp @multilib_dir@/@shlib_base_name@.so.1 && ln -s @shlib_base_name@.so.1 @multilib_dir@/@shlib_base_name@.so'; \
	gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -Wno-error \
	  -DSTANDARD_STARTFILE_PREFIX=\"../../../\" -DSTANDARD_EXEC_PREFIX=\"/usr/lib/gcc/\" -DSTANDARD_LIBEXEC_PREFIX=\"/usr/lib/gcc/\" -DDEFAULT_TARGET_VERSION=\"4.4.7\" -DDEFAULT_TARGET_MACHINE=\"x86_64-linux-gnu\" -DSTANDARD_BINDIR_PREFIX=\"/usr/bin/\" -DTOOLDIR_BASE_PREFIX=\"../../../../\"  `test "X${SHLIB_LINK}" = "X" || test "yes" != "yes" || echo "-DENABLE_SHARED_LIBGCC"` \
	  ../../src/gcc/protoize.c -o protoize.o)
(SHLIB_LINK='/«PKGBUILDDIR»/build/./gcc/xgcc -B/«PKGBUILDDIR»/build/./gcc/ -B/usr/x86_64-linux-gnu/bin/ -B/usr/x86_64-linux-gnu/lib/ -isystem /usr/x86_64-linux-gnu/include -isystem /usr/x86_64-linux-gnu/sys-include -O2  -g -O2 -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition  -isystem ./include  -fPIC -g -DHAVE_GTHR_DEFAULT -DIN_LIBGCC2 -D__GCC_FLOAT_NOT_NEEDED  -shared -nodefaultlibs -Wl,--soname=@shlib_base_name@.so.1 -Wl,--version-script=@shlib_map_file@ -o @multilib_dir@/@shlib_base_name@.so.1.tmp @multilib_flags@ @shlib_objs@ -lc && rm -f @multilib_dir@/@shlib_base_name@.so && if [ -f @multilib_dir@/@shlib_base_name@.so.1 ]; then mv -f @multilib_dir@/@shlib_base_name@.so.1 @multilib_dir@/@shlib_base_name@.so.1.backup; else true; fi && mv @multilib_dir@/@shlib_base_name@.so.1.tmp @multilib_dir@/@shlib_base_name@.so.1 && ln -s @shlib_base_name@.so.1 @multilib_dir@/@shlib_base_name@.so'; \
	gcc -c -DUNPROTOIZE  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -Wno-error \
	  -DSTANDARD_STARTFILE_PREFIX=\"../../../\" -DSTANDARD_EXEC_PREFIX=\"/usr/lib/gcc/\" -DSTANDARD_LIBEXEC_PREFIX=\"/usr/lib/gcc/\" -DDEFAULT_TARGET_VERSION=\"4.4.7\" -DDEFAULT_TARGET_MACHINE=\"x86_64-linux-gnu\" -DSTANDARD_BINDIR_PREFIX=\"/usr/bin/\" -DTOOLDIR_BASE_PREFIX=\"../../../../\"  `test "X${SHLIB_LINK}" = "X" || test "yes" != "yes" || echo "-DENABLE_SHARED_LIBGCC"` \
	  ../../src/gcc/protoize.c -o unprotoize.o)
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -DGENERATOR_FILE  build/gcov-iov.o -o build/gcov-iov
build/gcov-iov '4.4.7' '' \
	    > tmp-gcov-iov.h
/bin/bash ../../src/gcc/../move-if-change tmp-gcov-iov.h gcov-iov.h
echo timestamp > s-iov
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gcov.c -o gcov.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gcov-dump.c -o gcov-dump.o
/bin/bash ../../src/gcc/../move-if-change tmp-automata.c insn-automata.c
echo timestamp > s-automata
/bin/bash ../../src/gcc/../move-if-change tmp-attrtab.c insn-attrtab.c
echo timestamp > s-attrtab
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-lang.c -o c-lang.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/stub-objc.c -o stub-objc.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/attribs.c -o attribs.o
In file included from ../../src/gcc/c-lang.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-lang.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-lang.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-lang.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/attribs.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)In file included from ../../src/gcc/stub-objc.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stub-objc.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stub-objc.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stub-objc.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^

/usr/include/clang/3.1/include/stddef.h                       ^                     ~:
52In file included from :24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/attribs.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/attribs.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/attribs.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/attribs.c:28:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-errors.c -o c-errors.o
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-lex.c -o c-lex.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-pragma.c -o c-pragma.o
In file included from ../../src/gcc/c-errors.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-errors.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-errors.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-errors.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
In file included from ../../src/gcc/c-lex.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-lex.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-lex.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-lex.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-decl.c -o c-decl.o
In file included from ../../src/gcc/c-lex.c:31:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/c-pragma.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pragma.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pragma.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pragma.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-decl.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-decl.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-decl.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-decl.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-decl.c:40:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/c-pragma.c:34:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/c-pragma.c:598:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I (visibility, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:598:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I (visibility, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:598:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I (visibility, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:598:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I (visibility, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-typeck.c -o c-typeck.o
../../src/gcc/c-pragma.c:1032:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_handler, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:1032:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_handler, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:1032:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_handler, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:1032:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_handler, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:1043:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_ns_name, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:1043:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_ns_name, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:1043:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_ns_name, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-pragma.c:1043:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (pragma_ns_name, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-convert.c -o c-convert.o
In file included from ../../src/gcc/c-convert.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-convert.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-convert.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-convert.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-typeck.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-typeck.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-typeck.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-typeck.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-aux-info.c -o c-aux-info.o
In file included from ../../src/gcc/c-typeck.c:38:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/c-typeck.c:46:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-typeck.c:46:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-typeck.c:46:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-typeck.c:46:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-decl.c:8135:
./gt-c-decl.h:79:7: warning: switch condition has boolean value
      switch (TREE_CODE (&((*x)).generic) == IDENTIFIER_NODE)
      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./gt-c-decl.h:614:7: warning: switch condition has boolean value
      switch (TREE_CODE (&((*x)).generic) == IDENTIFIER_NODE)
      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/c-aux-info.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-aux-info.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-aux-info.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-aux-info.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
./gt-c-decl.h:1153:3: warning: switch condition has boolean value
  switch (TREE_CODE (&((*x)).generic) == IDENTIFIER_NODE)
  ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-common.c -o c-common.o
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   \
		../../src/gcc/c-opts.c -o c-opts.o 
In file included from ../../src/gcc/c-common.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-common.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-common.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-common.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-common.c:29:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/c-opts.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-opts.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-opts.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-opts.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
9 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-format.c -o c-format.o
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-semantics.c -o c-semantics.o
In file included from ../../src/gcc/c-format.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-format.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-format.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-format.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-semantics.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-semantics.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-semantics.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-semantics.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-semantics.c:42:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-ppoutput.c -o c-ppoutput.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -DBASEVER="\"4.4.7\"" \
		../../src/gcc/c-cppbuiltin.c -o c-cppbuiltin.o
In file included from ../../src/gcc/c-ppoutput.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-ppoutput.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-ppoutput.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-ppoutput.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-cppbuiltin.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-cppbuiltin.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-cppbuiltin.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-cppbuiltin.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-cppbuiltin.c:31:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-objc-common.c -o c-objc-common.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-dump.c -o c-dump.o
In file included from ../../src/gcc/c-dump.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-dump.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-dump.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-dump.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-objc-common.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-objc-common.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-objc-common.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-objc-common.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   \
	  -DHOST_MACHINE=\"x86_64-pc-linux-gnu\" -DTARGET_MACHINE=\"x86_64-pc-linux-gnu\" \
	  ../../src/gcc/c-pch.c -o c-pch.o
In file included from ../../src/gcc/c-pch.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pch.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pch.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pch.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pch.c:28:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-parser.c -o c-parser.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND  ../../src/gcc/config/i386/i386-c.c
In file included from ../../src/gcc/c-parser.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-parser.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-parser.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-parser.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/config/i386/i386-c.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/config/i386/i386-c.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/config/i386/i386-c.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/config/i386/i386-c.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
5 warningsIn file included from ../../src/gcc/c-parser.c:53:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
 generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-gimplify.c -o c-gimplify.o
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/tree-mudflap.c -o tree-mudflap.o
../../src/gcc/c-parser.c:363:10: warning: case value not in enumerated type 'enum cpp_ttype' [-Wswitch]
    case CPP_KEYWORD:
         ^
../../src/gcc/c-parser.c:123:21: note: expanded from macro 'CPP_KEYWORD'
#define CPP_KEYWORD ((enum cpp_ttype) (N_TTYPES + 1))
                    ^
../../src/gcc/c-parser.c:433:10: warning: case value not in enumerated type 'enum cpp_ttype' [-Wswitch]
    case CPP_KEYWORD:
         ^
../../src/gcc/c-parser.c:123:21: note: expanded from macro 'CPP_KEYWORD'
#define CPP_KEYWORD ((enum cpp_ttype) (N_TTYPES + 1))
                    ^
../../src/gcc/c-parser.c:1016:10: warning: case value not in enumerated type 'enum cpp_ttype' [-Wswitch]
    case CPP_KEYWORD:
         ^
../../src/gcc/c-parser.c:123:21: note: expanded from macro 'CPP_KEYWORD'
#define CPP_KEYWORD ((enum cpp_ttype) (N_TTYPES + 1))
                    ^
../../src/gcc/c-parser.c:3684:10: warning: case value not in enumerated type 'enum cpp_ttype' [-Wswitch]
    case CPP_KEYWORD:
         ^
../../src/gcc/c-parser.c:123:21: note: expanded from macro 'CPP_KEYWORD'
#define CPP_KEYWORD ((enum cpp_ttype) (N_TTYPES + 1))
                    ^
In file included from ../../src/gcc/c-gimplify.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-gimplify.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-gimplify.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-gimplify.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-mudflap.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
../../src/gcc/c-parser.c:4897:10: warning: case value not in enumerated type 'enum cpp_ttype' [-Wswitch]
    case CPP_KEYWORD:
         ^
../../src/gcc/c-parser.c:123:21: note: expanded from macro 'CPP_KEYWORD'
#define CPP_KEYWORD ((enum cpp_ttype) (N_TTYPES + 1))
                    ^
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-mudflap.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/c-parser.c:5214:10: warning: case value not in enumerated type 'enum cpp_ttype' [-Wswitch]
    case CPP_KEYWORD:
         ^
../../src/gcc/c-parser.c:123:21: note: expanded from macro 'CPP_KEYWORD'
#define CPP_KEYWORD ((enum cpp_ttype) (N_TTYPES + 1))
                    ^
In file included from ../../src/gcc/tree-mudflap.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-mudflap.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-mudflap.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-mudflap.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-mudflap.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-mudflap.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-gimplify.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-gimplify.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-gimplify.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-gimplify.c:38:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-pretty-print.c -o c-pretty-print.o
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/c-omp.c -o c-omp.o
In file included from ../../src/gcc/c-omp.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
11 warnings generated.
                       ^                     ~
In file included from ../../src/gcc/c-omp.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-omp.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-omp.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/main.c -o main.o
In file included from ../../src/gcc/c-pretty-print.c:28:
In file included from ../../src/gcc/c-pretty-print.h:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pretty-print.c:28:
In file included from ../../src/gcc/c-pretty-print.h:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pretty-print.c:28:
In file included from ../../src/gcc/c-pretty-print.h:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/c-pretty-print.c:28:
In file included from ../../src/gcc/c-pretty-print.h:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-attrtab.c -o insn-attrtab.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-automata.c -o insn-automata.o
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:9:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:13:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
4 warnings generated.
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:13:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:13:
In file included from ../../src/gcc/regs.h:gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-emit.c -o insn-emit.o
28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:13:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:12:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:12:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:12:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:12:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-attrtab.c:15:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from insn-automata.c:14:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-automata.c:15:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
In file included from insn-emit.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-emit.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-emit.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-emit.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (In file included from insn-emit.c:16:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^

~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/sse.md:231:40: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE2)) == (0))) || ((V4SFmode) == (V4SFmode))) && (which_alternative == 0))) || ((get_attr_memory (insn) == MEMORY_LOAD) && (((((
                                       ^
../../src/gcc/config/i386/sse.md:231:40: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE2)) == (0))) || ((V4SFmode) == (V4SFmode))) && (which_alternative == 0)))))
                                       ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) && (which_alternative != 0))))
                                                      ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) && (which_alternative != 0))))
                                                      ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) && (which_alternative != 0)))) || ((((
                                                      ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))) && (get_attr_memory (insn) == MEMORY_LOAD))))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))) && ((get_attr_memory (insn) == MEMORY_STORE) || (get_attr_memory (insn) == MEMORY_BOTH)))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))))) || (((((
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))))) || (((((
                                                          ^
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
17 warnings generated.
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-extract.c -o insn-extract.o
: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-modes.c -o insn-modes.o
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
insn-modes.c:644:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* DI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: 
                                 ^  ~~~
insn-modes.c:645:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* TI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:646:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* OI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:650:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* DQ */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:651:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* TQ */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:655:3: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* UDQ */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'(ix86_schedule)) == (

~~~~~~~~~~~~~~~~~^~~~
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:656:3: warning: shift count >= width of type [-Wshift-count-overflow]
../../src/gcc/config/i386/i386.md  MODE_MASK (16*BITS_PER_UNIT),    /* UTQ */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34::323: 18: note: remove extraneous parentheses around the comparison to silence this warning
note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:659:3: (ix86_schedule)) == (
                 ^warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* DA */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: 
note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:660:3../../src/gcc/config/i386/i386.md:323::18: note:  use '=' to turn this equality comparison into an assignment
warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* TA */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
(ix86_schedule)) == (
                 ^~   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:663:
                 =
3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* UDA */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:664:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* UTA */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:666../../src/gcc/config/i386/i386.md:323:18:: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* DF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: (ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:667:
3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (80),          /* XF */
  ^~~~~~~~~~~~~~
insn-modes.c:625:34../../src/gcc/config/i386/i386.md: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:668:3: warning: shift count >= width of type [-Wshift-count-overflow]
:  MODE_MASK (16*BITS_PER_UNIT),    /* TF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'323:
18: note: remove extraneous parentheses around the comparison to silence this warning   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:670
:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* DD */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'(ix86_schedule)) == (

   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:671:3                 ^
: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* TD */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'../../src/gcc/config/i386/i386.md:323
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:674:18: :3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* CSI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: use '=' to turn this equality comparison into an assignment
note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:675:(ix86_schedule)) == (
3: warning: shift count >= width of type [-Wshift-count-overflow]
                 ^~
  MODE_MASK (16*BITS_PER_UNIT),    /* CDI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note:                  =
expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:676:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* CTI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:677:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (64*BITS_PER_UNIT),    /* COI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: ../../src/gcc/config/i386/i386.md:323note: :18: warning: expanded from macro 'MODE_MASK'equality comparison with extraneous parentheses [-Wparentheses-equality]

   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:678:3(ix86_schedule)) == (:
~~~~~~~~~~~~~~~~~^~~~
 warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* SC */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: ../../src/gcc/config/i386/i386.md:expanded from macro 'MODE_MASK'323:18: 
note: remove extraneous parentheses around the comparison to silence this warning
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:679:3: warning: shift count >= width of type [-Wshift-count-overflow](ix86_schedule)) == (

  MODE_MASK (16*BITS_PER_UNIT),    /* DC */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
                 ^   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:680:
3: warning: ../../src/gcc/config/i386/i386.md:shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (160),         /* XC */
  ^~~~~~~~~~~~~~~
insn-modes.c:625:34: 323note: :18: expanded from macro 'MODE_MASK'note: use '=' to turn this equality comparison into an assignment

   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c(ix86_schedule)) == (
                 ^~
                 =
:681:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* TC */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
../../src/gcc/config/i386/i386.mdinsn-modes.c:686:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* V8QI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: :323:18: note: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
expanded from macro 'MODE_MASK'(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =

   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:687:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* V4HI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:688:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* V2SI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:689:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* V1DI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:690:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* V16QI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:691:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* V8HI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:692:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* V4SI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:693:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* V2DI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:694:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V32QI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:695:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V16HI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:696:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V8SI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:697:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V4DI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:698:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V2TI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:699:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (64*BITS_PER_UNIT),    /* V64QI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:700:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (64*BITS_PER_UNIT),    /* V32HI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:701:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (64*BITS_PER_UNIT),    /* V8DI */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:702:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (8*BITS_PER_UNIT),   /* V2SF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:703:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* V4SF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:704:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (16*BITS_PER_UNIT),    /* V2DF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:705:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V8SF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:706:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V4DF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:707:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (32*BITS_PER_UNIT),    /* V2TF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:708:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (64*BITS_PER_UNIT),    /* V16SF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
insn-modes.c:709:3: warning: shift count >= width of type [-Wshift-count-overflow]
  MODE_MASK (64*BITS_PER_UNIT),    /* V8DF */
  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
insn-modes.c:625:34: note: expanded from macro 'MODE_MASK'
   : ((unsigned HOST_WIDE_INT) 1 << (m)) - 1
                                 ^  ~~~
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:5185:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if (DImode == DImode && !TARGET_64BIT
             ^
../../src/gcc/config/i386/i386.md:5185:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if (DImode == DImode && !TARGET_64BIT
             ^
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323../../src/gcc/config/i386/i386.md::5185:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if (DImode == DImode && !TARGET_64BIT
             ^
18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
48 warnings generated.
                 =
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-opinit.c -o insn-opinit.o
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/sse.md:231:40: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE2)) == (0))) || ((V4SFmode) == (V4SFmode))) && (which_alternative == 0))))
                                       ^
../../src/gcc/config/i386/sse.md:231:40: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE2)) == (0))) || ((V4SFmode) == (V4SFmode))) && (which_alternative == 0))))
                                       ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) && (which_alternative != 0))))
                                                      ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) && (which_alternative != 0))))
                                                      ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) && (which_alternative != 0))))
                                                      ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))) && (get_attr_memory (insn) == MEMORY_LOAD))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))) && (get_attr_memory (insn) == MEMORY_LOAD))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))) && ((get_attr_memory (insn) == MEMORY_STORE) || (get_attr_memory (insn) == MEMORY_BOTH)))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))) && ((get_attr_memory (insn) == MEMORY_STORE) || (get_attr_memory (insn) == MEMORY_BOTH)))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode)))))) && ((get_attr_memory (insn) == MEMORY_STORE) || (get_attr_memory (insn) == MEMORY_BOTH)))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode))))))))
                                                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode)))) || (((! ((
                                                      ^
../../src/gcc/config/i386/sse.md:233:59: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0)))) && (! ((V4SFmode) == (V4SFmode))))))))
                                                          ^
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.mdIn file included from :insn-opinit.c:13:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-opinit.c:13:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-opinit.c:13:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-opinit.c:13:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
../../src/gcc/config/i386/i386.md:16767:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if (SFmode == SFmode
             ^
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:17956:31: warning: self-comparison always evaluates to false [-Wtautological-compare]
  if (TARGET_64BIT || (DFmode != DFmode))
                              ^
../../src/gcc/config/i386/i386.md:18184:40: warning: self-comparison always evaluates to false [-Wtautological-compare]
      else if (TARGET_64BIT || (DFmode != DFmode))
                                       ^
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:18458:40: warning: self-comparison always evaluates to false [-Wtautological-compare]
      else if (TARGET_64BIT || (DFmode != DFmode))
                                       ^
../../src/gcc/config/i386/i386.md:18728:40: warning: self-comparison always evaluates to false [-Wtautological-compare]
      else if (TARGET_64BIT || (DFmode != DFmode))
                                       ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-output.c -o insn-output.o
In file included from insn-output.c:11:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:11:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:11:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:11:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
../../src/gcc/config/i386/i386.md:323:18: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
(ix86_schedule)) == (
~~~~~~~~~~~~~~~~~^~~~
../../src/gcc/config/i386/i386.md:323:18: note: remove extraneous parentheses around the comparison to silence this warning
(ix86_schedule)) == (
                 ^
../../src/gcc/config/i386/i386.md:323:18: note: use '=' to turn this equality comparison into an assignment
(ix86_schedule)) == (
                 ^~
                 =
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ../../src/gcc/config/i386/sync.md:76:15: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if ((DImode == DImode && !TARGET_64BIT) || DImode == TImode)
              ^
../../src/gcc/config/i386/sync.md:78:40: warning: self-comparison always evaluates to true [-Wtautological-compare]
      enum machine_mode hmode = DImode == DImode ? SImode : DImode;
                                       ^
../../src/gcc/config/i386/sync.md:84:18: warning: self-comparison always evaluates to true [-Wtautological-compare]
      if (DImode == DImode)
                 ^
../../src/gcc/config/i386/sync.md:76:53: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if ((TImode == DImode && !TARGET_64BIT) || TImode == TImode)
                                                    ^
../../src/gcc/config/i386/sync.md:94:23: warning: self-comparison always evaluates to true [-Wtautological-compare]
      else if (TImode == TImode)
                      ^
./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:21:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-output.c:26:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/config/i386/sync.md:174:15: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if ((DImode == DImode && !TARGET_64BIT) || DImode == TImode)
              ^
../../src/gcc/config/i386/sync.md:176:40: warning: self-comparison always evaluates to true [-Wtautological-compare]
      enum machine_mode hmode = DImode == DImode ? SImode : DImode;
                                       ^
../../src/gcc/config/i386/sync.md:182:18: warning: self-comparison always evaluates to true [-Wtautological-compare]
      if (DImode == DImode)
                 ^
../../src/gcc/config/i386/sync.md:174:53: warning: self-comparison always evaluates to true [-Wtautological-compare]
  if ((TImode == DImode && !TARGET_64BIT) || TImode == TImode)
                                                    ^
../../src/gcc/config/i386/sync.md:192:23: warning: self-comparison always evaluates to true [-Wtautological-compare]
      else if (TImode == TImode)
                      ^
../../src/gcc/config/i386/sse.md:237:27: warning: self-comparison always evaluates to true [-Wtautological-compare]
      else if ((V2DFmode) == (V2DFmode))
                          ^
../../src/gcc/config/i386/sse.md:233:55: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))) || ((V4SFmode) == (V4SFmode))))
                                                      ^
../../src/gcc/config/i386/sse.md:233:92: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))))) && ((! ((V2DFmode) == (V4SFmode))) && ((V2DFmode) == (V2DFmode))))
                                                                                           ^
../../src/gcc/config/i386/sse.md:233:61: warning: self-comparison always evaluates to true [-Wtautological-compare]
(TARGET_SSE_TYPELESS_STORES)) != (0))))) && ((! ((V4SFmode) == (V4SFmode))) && ((V4SFmode) == (V2DFmode))))
                                                            ^
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-peep.c -o insn-peep.o
In file included from insn-peep.c:11:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-peep.c:11:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-peep.c:11:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-peep.c:11:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
23In file included from  warnings generated.
insn-peep.c:12:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-preds.c -o insn-preds.o
 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   insn-recog.c -o insn-recog.o
In file included from insn-preds.c:9:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-preds.c:9:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-preds.c:9:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-preds.c:9:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-preds.c:15:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from insn-recog.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-recog.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-recog.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from insn-recog.c:10:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ggc-page.c -o ggc-page.o
In file included from insn-recog.c:14:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/config/i386/i386.md:4838:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:4866:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:4919:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
In file included from ../../src/gcc/ggc-page.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ggc-page.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ggc-page.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ggc-page.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ggc-page.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ggc-page.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ggc-page.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ggc-page.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/alias.c -o alias.o
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5274:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5293:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5471:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5500:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5274:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5293:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5471:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5500:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:10826:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode))))
                              ^
../../src/gcc/config/i386/i386.md:10845:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode)))
                              ^
In file included from ../../src/gcc/alias.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/alias.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/alias.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/alias.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
467 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/alloc-pool.c -o alloc-pool.o
In file included from ../../src/gcc/alias.c:36:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/config/i386/mmx.md:715:42: warning: self-comparison always evaluates to true [-Wtautological-compare]
((TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                         ^
../../src/gcc/config/i386/mmx.md:715:42: warning: self-comparison always evaluates to true [-Wtautological-compare]
((TARGET_MMX || (TARGET_SSE2 && V1DImode == V1DImode))
                                         ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/auto-inc-dec.c -o auto-inc-dec.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/bb-reorder.c -o bb-reorder.o
In file included from ../../src/gcc/auto-inc-dec.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/auto-inc-dec.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/auto-inc-dec.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/auto-inc-dec.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/config/i386/i386.md:4880:29: warning: self-comparison always evaluates to false [-Wtautological-compare]
        && (TARGET_64BIT || DImode != DImode))
                                   ^
../../src/gcc/config/i386/i386.md:4919:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
In file included from ../../src/gcc/auto-inc-dec.c:33:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/bitmap.c -o bitmap.o
In file included from ../../src/gcc/bb-reorder.c:73:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
../../src/gcc/config/i386/i386.md:                                                 offsetof (VEC(T,A),base.vec), \4866
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
:In file included from ../../src/gcc/bb-reorder.c:73:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: 30:expanded from macro '\
DEF_VEC_ALLOC_FUNC_O' warning: self-comparison always evaluates to false [-Wtautological-compare]

                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
         && (TARGET_64BIT || DImode != DImode))
                                    ^
In file included from ../../src/gcc/bb-reorder.c:73:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bb-reorder.c:73:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/config/i386/i386.md:5231:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5458:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5231:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5458:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:10845:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode))))
                              ^
In file included from ../../src/gcc/bb-reorder.c:76:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/bt-load.c -o bt-load.o
../../src/gcc/config/i386/i386.md:4880:29: warning: self-comparison always evaluates to false [-Wtautological-compare]
        && (TARGET_64BIT || DImode != DImode))
                                   ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/builtins.c -o builtins.o
../../src/gcc/config/i386/i386.md:4919:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
In file included from ../../src/gcc/bt-load.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/config/i386/i386.md:5245:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5259:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5486:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5515:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5530:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5245:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5259:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5486:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5515:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.md:5530:10: warning: self-comparison always evaluates to false [-Wtautological-compare]
((DImode != DImode || TARGET_64BIT)
         ^
../../src/gcc/config/i386/i386.mdIn file included from :10858:32: warning: self-comparison always evaluates to true [-Wtautological-compare]
    || (TARGET_SSE2 && (TFmode == TFmode)))
                               ^
../../src/gcc/bt-load.c:29:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:In file included from 59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:../../src/gcc/builtins.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
../../src/gcc/vec.h:                                              offsetof (VEC(T,A),base.vec),\815
:                                              ^27
: /usr/include/clang/3.1/include/stddef.hnote: :expanded from macro 'DEF_VEC_ALLOC_O'52
:24: note: expanded from macro 'offsetof'
VEC_TA(T,base,A);                                                         \
                                                                          ^
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~../../src/gcc/vec.h
:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/builtins.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/builtins.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/builtins.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/bt-load.c:33:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/caller-save.c -o caller-save.o
../../src/gcc/config/i386/i386.md:4838:30: warning: self-comparison always evaluates to false [-Wtautological-compare]
         && (TARGET_64BIT || DImode != DImode))
                                    ^
../../src/gcc/config/i386/i386.md:10826:31: warning: self-comparison always evaluates to true [-Wtautological-compare]
   || (TARGET_SSE2 && (TFmode == TFmode))) && 
                              ^
In file included from ../../src/gcc/builtins.c:41:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.md:5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
../../src/gcc/config/i386/i386.md:5169:14: warning: self-comparison always evaluates to true [-Wtautological-compare]
        && ((SImode == SImode
                    ^
../../src/gcc/config/i386/i386.mdIn file included from :5164:20: warning: self-comparison always evaluates to false [-Wtautological-compare]
     && (!((DImode != DImode || TARGET_64BIT)
                   ^
../../src/gcc/config/i386/i386.md:5167:17: warning: self-comparison always evaluates to false [-Wtautological-compare]
    || ((DImode != DImode || TARGET_64BIT)
                ^
In file included from ../../src/gcc/caller-save.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/caller-save.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/caller-save.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/caller-save.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/builtins.c:50:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/builtins.c:50:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/builtins.c:50:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/builtins.c:50:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/caller-save.c:39:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/calls.c -o calls.o
In file included from ../../src/gcc/calls.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/calls.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/calls.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/calls.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/calls.c:36:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/calls.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/calls.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/calls.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/calls.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
9 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfg.c -o cfg.o
In file included from ../../src/gcc/cfg.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:57:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
9 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfganal.c -o cfganal.o
In file included from ../../src/gcc/cfg.c:70:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:70:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:70:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfg.c:70:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/cfg.c:911:17: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
        fprintf (file, bb_bitnames[i]);
                       ^~~~~~~~~~~~~~
22 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfgbuild.c -o cfgbuild.o
In file included from ../../src/gcc/cfganal.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfganal.c:36:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgbuild.c:37:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgbuild.c:37:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgbuild.c:37:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgbuild.c:37:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
16 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfgcleanup.c -o cfgcleanup.o
In file included from ../../src/gcc/cfgbuild.c:43:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfgexpand.c -o cfgexpand.o
In file included from ../../src/gcc/cfgexpand.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgexpand.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgexpand.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.hIn file included from :52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:40:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:../../src/gcc/cfgexpand.c1519::251:
:../../src/gcc/tree.h: 1519warning: :using extended field designator is an extension [-pedantic,-Wextended-offsetof]1
:DEF_VEC_ALLOC_O(constructor_elt,gc); warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
:VEC_TA(T,base,A);                                                         \815:27
:                                                                          ^ 
note: ../../src/gcc/vec.hexpanded from macro 'DEF_VEC_ALLOC_O':
1050VEC_TA(T,base,A);                                                         \:6:
                                                                           ^note: 
expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'../../src/gcc/vec.h
                          offsetof (VEC(T,A),base.vec),                   \:995:8
:                          ^ 
note: /usr/include/clang/3.1/include/stddef.hexpanded from macro '\
DEF_VEC_ALLOC_FUNC_O':
                                                 offsetof (VEC(T,A),base.vec), \52:24: 
note:                                                  ^expanded from macro 'offsetof'

/usr/include/clang/3.1/include/stddef.h#define offsetof(t, d) __builtin_offsetof(t, d):52
:                       ^                     ~24
: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:40:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:40:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:40:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:42:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgcleanup.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgexpand.c:32:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgexpand.c:32:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgexpand.c:32:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgexpand.c:32:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfghooks.c -o cfghooks.o
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfglayout.c -o cfglayout.o
In file included from ../../src/gcc/cfglayout.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:31:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfglayout.c:34:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/cfglayout.c:235:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(location_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/cfglayout.c:235:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(location_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/cfglayout.c:235:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(location_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/cfglayout.c:235:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(location_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
21 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfgloop.c -o cfgloop.o
In file included from ../../src/gcc/cfghooks.c:29:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:29:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:29:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:29:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfghooks.c:32:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:28:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:28:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:28:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:28:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
20 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfgloopanal.c -o cfgloopanal.o
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:31:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:34:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:34:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:34:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:34:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloop.c:36:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/cfgloopanal.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
21 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfgloopmanip.c -o cfgloopmanip.o
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopanal.c:31:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/cfgloopmanip.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cfgrtl.c -o cfgrtl.o
61 warnings generated.
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/combine.c -o combine.o
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:32:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/cfgloopmanip.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgloopmanip.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:44:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
21 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/combine-stack-adj.c -o combine-stack-adj.o
In file included from ../../src/gcc/cfgrtl.c:50:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/combine.c:83:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:83:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:83:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:83:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cfgrtl.c:56:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine-stack-adj.c:51:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
In file included from ../../src/gcc/combine-stack-adj.c:52:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
DEF_VEC_ALLOC_O(constructor_elt,gc);
In file included from ../../src/gcc/combine.c:93:
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In file included from ./insn-attr.h:59:

In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/vec.h:815In file included from :../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: 27: note: note: expanded from macro 'DEF_VEC_ALLOC_O'
expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine-stack-adj.c:52:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:In file included from 27: note: expanded from macro 'DEF_VEC_ALLOC_O'
../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
VEC_TA(T,base,A);                                                         \
                                                                          ^DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: 
expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: ../../src/gcc/vec.h:1009expanded from macro '\
DEF_VEC_ALLOC_FUNC_I':5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'

#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
In file included from ../../src/gcc/combine.c:93                                ^
:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: /usr/include/clang/3.1/include/stddef.h:52:using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27:24:  note: expanded from macro 'offsetof'
note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~

                       ^                     ~In file included from 
../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \In file included from ../../src/gcc/combine-stack-adj.c:52:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine-stack-adj.c:52:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~

                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:93:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/combine.c:102:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/combine.c:256:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(reg_stat_type,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/combine.c:256:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(reg_stat_type,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/combine.c:256:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(reg_stat_type,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/combine.c:256:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(reg_stat_type,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/combine-stack-adj.c:337:28: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
      = gen_rtx_EXPR_LIST (REG_FRAME_RELATED_EXPR, new_expr,
        ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
6../../src/gcc/combine.c warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/convert.c -o convert.o
:3628:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i3dest_killed,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c:3632:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i3dest_killed,
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c:3641:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i2dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c:3644:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i2dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c:3652:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i1dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c:3655:41: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          distribute_notes (gen_rtx_EXPR_LIST (REG_DEAD, i1dest, NULL_RTX),
                            ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
17 warnings generated.
../../src/gcc/combine.c:2387:14: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
              ohi = CONST_DOUBLE_HIGH (outer);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/combine.c:2398:14: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
              ihi = CONST_DOUBLE_HIGH (inner);
                    ^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/coverage.c -o coverage.o
../../src/gcc/combine.c:3510:37: warning: variable 'i2src' is uninitialized when used here [-Wuninitialized]
          replace_rtx (call_usage, i2dest, i2src);
                                           ^~~~~
../../src/gcc/combine.c:2198:20: note: initialize the variable 'i2src' to silence this warning
  rtx i2dest, i2src, i1dest = 0, i1src = 0;
                   ^
                    = NULL
In file included from ../../src/gcc/coverage.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/coverage.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/coverage.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/coverage.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/coverage.c:36:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/convert.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/convert.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/convert.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/convert.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/combine.c:9862:35: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
              notes = gen_rtx_EXPR_LIST (REG_UNUSED,
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c:12234:35: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
            *pnotes = gen_rtx_EXPR_LIST (REG_DEAD, x, *pnotes);
                      ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cse.c -o cse.o
:12804:26: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
                                = gen_rtx_EXPR_LIST (REG_DEAD, piece, NULL_RTX);
                                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
../../src/gcc/combine.c:12852:39: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          = gen_rtx_fmt_ee (GET_CODE (note), REG_NOTE_KIND (note),
            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:830:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/cselib.c -o cselib.o
In file included from ../../src/gcc/cselib.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cselib.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cselib.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cselib.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cselib.c:38:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/cse.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cse.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cse.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/cse.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from 5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dbxout.c -o dbxout.o
../../src/gcc/cse.c:39:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/dbxout.c:76:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dbxout.c:76:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dbxout.c:76:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dbxout.c:76:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dbxout.c:82:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dbgcnt.c -o dbgcnt.o
34 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dce.c -o dce.o
In file included from ../../src/gcc/dbgcnt.c:28:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
1 warning generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ddg.c -o ddg.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/debug.c -o debug.o
In file included from ../../src/gcc/dce.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dce.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dce.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dce.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dce.c:39:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dce.cIn file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
:39:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dce.c:39:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'../../src/gcc/vec.h:509
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: :27: note: expanded from macro 'DEF_VEC_ALLOC_I'expanded from macro 'offsetof'

#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
VEC_TA(T,base,A);                                                         \
../../src/gcc/dce.c:39:                                                                          ^
1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: ../../src/gcc/vec.h:1113:5note: : note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:35:
In file included from ./insn-attr.h:59:
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/df-byte-scan.c -o df-byte-scan.o
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ddg.c:38:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/df-core.c -o df-core.o
In file included from ../../src/gcc/df-byte-scan.c:27:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-byte-scan.c:27:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-byte-scan.c:27:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-byte-scan.c:27:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-byte-scan.c:28:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
24 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/df-problems.c -o df-problems.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/df-scan.c -o df-scan.o
In file included from ../../src/gcc/df-core.c:393:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-core.c:393:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-core.c:393:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-core.c:393:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-core.c:395:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/df-problems.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings  -fno-strict-aliasing -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dfp.c -o dfp.o
In file included from ../../src/gcc/df-problems.c:35:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
In file included from ../../src/gcc/df-scan.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-scan.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-scan.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-scan.c:33:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/df-problems.c:46:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dfp.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dfp.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dfp.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dfp.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
In file included from ../../src/gcc/df-scan.c:35:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/diagnostic.c -o diagnostic.o
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dojump.c -o dojump.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dominance.c -o dominance.o
In file included from ../../src/gcc/dojump.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/diagnostic.c:32:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/diagnostic.c:32:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/diagnostic.c:32:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/diagnostic.c:32:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:31:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dojump.c:38:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/domwalk.c -o domwalk.o
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/double-int.c -o double-int.o
In file included from ../../src/gcc/dominance.c:43:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:43:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:43:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:43:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: In file included from ../../src/gcc/double-int.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/double-int.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/double-int.c:24:
note: ../../src/gcc/tree.hexpanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
:1519:In file included from 1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'../../src/gcc/vec.h
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof':815:27: 
note: expanded from macro 'DEF_VEC_ALLOC_O'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
VEC_TA(T,base,A);                                                         \
                                                                          ^
In file included from ../../src/gcc/dominance.c:47../../src/gcc/vec.h:
:1034:15../../src/gcc/vecprim.h:30:1:: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
 warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note:                                               offsetof (VEC(T,A),base.vec),\expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              ^

                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
/usr/include/clang/3.1/include/stddef.h:In file included from 52../../src/gcc/dominance.c:47:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I':24: note: expanded from macro 'offsetof'

VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/double-int.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dse.c -o dse.o
In file included from ../../src/gcc/domwalk.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/domwalk.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/domwalk.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/domwalk.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
16 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dwarf2asm.c -o dwarf2asm.o
In file included from ../../src/gcc/dwarf2asm.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dwarf2asm.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dwarf2asm.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dwarf2asm.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dwarf2asm.c:29:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/domwalk.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/domwalk.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/domwalk.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/domwalk.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dse.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dse.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dse.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dse.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/dwarf2out.c -o dwarf2out.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ebitmap.c -o ebitmap.o
In file included from ../../src/gcc/dwarf2out.c:64:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dwarf2out.c:64:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dwarf2out.c:64:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/dwarf2out.c:64:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/emit-rtl.c -o emit-rtl.o
In file included from ../../src/gcc/dwarf2out.c:74:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/emit-rtl.c:42:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/emit-rtl.c:42:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/emit-rtl.c:42:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/emit-rtl.c:42:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/et-forest.c -o et-forest.o
../../src/gcc/emit-rtl.c:234:36: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
    h = CONST_DOUBLE_LOW (value) ^ CONST_DOUBLE_HIGH (value);
                                   ^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/emit-rtl.c:255:9: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
            && CONST_DOUBLE_HIGH (a) == CONST_DOUBLE_HIGH (b));
               ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/emit-rtl.c:255:34: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
            && CONST_DOUBLE_HIGH (a) == CONST_DOUBLE_HIGH (b));
                                        ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/dwarf2out.c:3476:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(deferred_locations,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:3476:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(deferred_locations,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)../../src/gcc/emit-rtl.c:565:3: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
  CONST_DOUBLE_HIGH (value) = i1;
  ^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'

                       ^                     ~
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/dwarf2out.c:3476:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(deferred_locations,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'../../src/gcc/rtl.h:
592:36: note: VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15:expanded from macro 'XCMWINT' 
note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
../../src/gcc/dwarf2out.c:3476                                     ^              ~:
1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(deferred_locations,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
../../src/gcc/rtl.h:VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6:318 :5: note: note: array 'hwint' declared here
expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/dwarf2out.c:3964:10: warning: case value not in enumerated type 'enum dwarf_location_atom' [-Wswitch]
    case INTERNAL_DW_OP_tls_addr:
         ^
../../src/gcc/dwarf2out.c:3460:34: note: expanded from macro 'INTERNAL_DW_OP_tls_addr'
#define INTERNAL_DW_OP_tls_addr         (0x100 + DW_OP_addr)
                                        ^
../../src/gcc/dwarf2out.c:4216:10: warning: case value not in enumerated type 'enum dwarf_location_atom' [-Wswitch]
    case INTERNAL_DW_OP_tls_addr:
         ^
../../src/gcc/dwarf2out.c:3460:34: note: expanded from macro 'INTERNAL_DW_OP_tls_addr'
#define INTERNAL_DW_OP_tls_addr         (0x100 + DW_OP_addr)
                                        ^
../../src/gcc/dwarf2out.c:4359:10: warning: case value not in enumerated type 'enum dwarf_location_atom' [-Wswitch]
    case INTERNAL_DW_OP_tls_addr:
         ^
../../src/gcc/dwarf2out.c:3460:34: note: expanded from macro 'INTERNAL_DW_OP_tls_addr'
#define INTERNAL_DW_OP_tls_addr         (0x100 + DW_OP_addr)
                                        ^
../../src/gcc/dwarf2out.c:4709:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(dw_attr_node,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:4709:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(dw_attr_node,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:4709:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(dw_attr_node,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:4709:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(dw_attr_node,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:4752:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(pubname_entry, gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:4752:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(pubname_entry, gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:4752:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(pubname_entry, gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/dwarf2out.c:4752:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(pubname_entry, gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/emit-rtl.c:4110:12: warning: array index 4 is past the end of the array (which contains 1 element) [-Warray-bounds]
  memset (&NOTE_DATA (note), 0, sizeof (NOTE_DATA (note)));
           ^~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/except.c -o except.o
860:33: note: expanded from macro 'NOTE_DATA'
#define NOTE_DATA(INSN)         RTL_CHECKC1 (INSN, 4, NOTE)
                                ^
../../src/gcc/rtl.h:587:37: note: expanded from macro 'RTL_CHECKC1'
#define RTL_CHECKC1(RTX, N, C)      ((RTX)->u.fld[N])
                                     ^            ~
../../src/gcc/rtl.h:317:5: note: array 'fld' declared here
    rtunion fld[1];
    ^
../../src/gcc/emit-rtl.c:4314:12: warning: array index 4 is past the end of the array (which contains 1 element) [-Warray-bounds]
  memset (&NOTE_DATA (note), 0, sizeof (NOTE_DATA (note)));
           ^~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:860:33: note: expanded from macro 'NOTE_DATA'
#define NOTE_DATA(INSN)         RTL_CHECKC1 (INSN, 4, NOTE)
                                ^
../../src/gcc/rtl.h:587:37: note: expanded from macro 'RTL_CHECKC1'
#define RTL_CHECKC1(RTX, N, C)      ((RTX)->u.fld[N])
                                     ^            ~
../../src/gcc/rtl.h:317:5: note: array 'fld' declared here
    rtunion fld[1];
    ^
../../src/gcc/emit-rtl.c:4672:3: warning: array index 4 is past the end of the array (which contains 1 element) [-Warray-bounds]
  NOTE_DATA (note) = NOTE_DATA (orig);
  ^~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:860:33: note: expanded from macro 'NOTE_DATA'
#define NOTE_DATA(INSN)         RTL_CHECKC1 (INSN, 4, NOTE)
                                ^
../../src/gcc/rtl.h:587:37: note: expanded from macro 'RTL_CHECKC1'
#define RTL_CHECKC1(RTX, N, C)      ((RTX)->u.fld[N])
                                     ^            ~
../../src/gcc/rtl.h:317:5: note: array 'fld' declared here
    rtunion fld[1];
    ^
../../src/gcc/emit-rtl.c:4672:22: warning: array index 4 is past the end of the array (which contains 1 element) [-Warray-bounds]
  NOTE_DATA (note) = NOTE_DATA (orig);
                     ^~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:860:33: note: expanded from macro 'NOTE_DATA'
#define NOTE_DATA(INSN)         RTL_CHECKC1 (INSN, 4, NOTE)
                                ^
../../src/gcc/rtl.h:587:37: note: expanded from macro 'RTL_CHECKC1'
#define RTL_CHECKC1(RTX, N, C)      ((RTX)->u.fld[N])
                                     ^            ~
../../src/gcc/rtl.h:317:5: note: array 'fld' declared here
    rtunion fld[1];
    ^
../../src/gcc/emit-rtl.c:4691:12: warning: array index 4 is past the end of the array (which contains 1 element) [-Warray-bounds]
  memset (&NOTE_DATA (note), 0, sizeof (NOTE_DATA (note)));
           ^~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:860:33: note: expanded from macro 'NOTE_DATA'
#define NOTE_DATA(INSN)         RTL_CHECKC1 (INSN, 4, NOTE)
                                ^
../../src/gcc/rtl.h:587:37: note: expanded from macro 'RTL_CHECKC1'
#define RTL_CHECKC1(RTX, N, C)      ((RTX)->u.fld[N])
                                     ^            ~
../../src/gcc/rtl.h:317:5: note: array 'fld' declared here
    rtunion fld[1];
    ^
../../src/gcc/dwarf2out.c:11266:10: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
                              CONST_DOUBLE_HIGH (rtl), CONST_DOUBLE_LOW (rtl));
                              ^~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/dwarf2out.c:11297:12: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
                    hi = CONST_DOUBLE_HIGH (elt);
                         ^~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
In file included from ../../src/gcc/except.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/except.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/except.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/except.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
13 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/explow.c -o explow.o
In file included from ../../src/gcc/except.c:65:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/expmed.c -o expmed.o
In file included from ../../src/gcc/explow.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/explow.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/explow.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/explow.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/explow.c:42:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/explow.c:104:21: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
        HOST_WIDE_INT h1 = CONST_DOUBLE_HIGH (x);
                           ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
22 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/expr.c -o expr.o
In file included from ../../src/gcc/expmed.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expmed.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expmed.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expmed.c:30:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
6 warnings generated.
In file included from ../../src/gcc/expr.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/final.c -o final.o
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:43:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/expr.c:52:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:52:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/expmed.c:3115:8: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
          if (CONST_DOUBLE_HIGH (op1) == 0In file included from ../../src/gcc/expr.c:52:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/expr.c:52:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~

              ^~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/expmed.c:3119:37: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
                   && EXACT_POWER_OF_2_OR_ZERO_P (CONST_DOUBLE_HIGH (op1)))
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^
../../src/gcc/expmed.c:60:49: note: expanded from macro 'EXACT_POWER_OF_2_OR_ZERO_P'
#define EXACT_POWER_OF_2_OR_ZERO_P(x) (((x) & ((x) - 1)) == 0)
                                                ^
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/expmed.c:3119:37: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
                   && EXACT_POWER_OF_2_OR_ZERO_P (CONST_DOUBLE_HIGH (op1)))
                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^
../../src/gcc/expmed.c:60:42: note: expanded from macro 'EXACT_POWER_OF_2_OR_ZERO_P'
#define EXACT_POWER_OF_2_OR_ZERO_P(x) (((x) & ((x) - 1)) == 0)
                                         ^
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/expmed.c:3121:32: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
              int shift = floor_log2 (CONST_DOUBLE_HIGH (op1))
                                      ^~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
In file included from ../../src/gcc/final.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:52:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/expmed.c:4929:27: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
                                CONST_DOUBLE_LOW (x), CONST_DOUBLE_HIGH (x));
                                                      ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:57:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/final.c:63:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/final.c:3485:8: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
          if (CONST_DOUBLE_HIGH (x))
              ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/final.c:3840:23: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
          *second = GEN_INT (CONST_DOUBLE_HIGH (value));
                    ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^
../../src/gcc/rtl.h:1953:51: note: expanded from macro 'GEN_INT'
#define GEN_INT(N)  gen_rtx_CONST_INT (VOIDmode, (N))
                                                  ^
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
9 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/fixed-value.c -o fixed-value.o
19 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/fold-const.c -o fold-const.o
21 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/function.c -o function.o
In file included from ../../src/gcc/fixed-value.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fixed-value.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fixed-value.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fixed-value.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fold-const.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fold-const.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fold-const.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fold-const.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:52:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
4 warnings generated.
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/fwprop.c -o fwprop.o
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/function.c:67:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/function.c:4320:3: warning: switch condition has boolean value
  switch (HAVE_stack_protect_test != 0)
  ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/fwprop.c:35:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:35:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:35:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:35:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:36:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/fwprop.c:39:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
18 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gcse.c -o gcse.o
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   genrtl.c -o genrtl.o
genrtl.c:336:3: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
  XWINT (rt, 1) = arg1;
  ^~~~~~~~~~~~~
../../src/gcc/rtl.h:590:29: note: expanded from macro 'XWINT'
#define XWINT(RTX, N)               ((RTX)->u.hwint[N])
                                     ^
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
genrtl.c:337:3: warning: array index 2 is past the end of the array (which contains 1 element) [-Warray-bounds]
  XWINT (rt, 2) = arg2;
  ^~~~~~~~~~~~~
../../src/gcc/rtl.h:590:29: note: expanded from macro 'XWINT'
#define XWINT(RTX, N)               ((RTX)->u.hwint[N])
                                     ^
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
2 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ggc-common.c -o ggc-common.o
In file included from ../../src/gcc/gcse.c:152:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gcse.c:152:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gcse.c:152:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gcse.c:152:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gimple.c -o gimple.o
In file included from ../../src/gcc/gcse.c:161:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/gimple.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gimple-iterator.c -o gimple-iterator.o
In file included from ../../src/gcc/gimple.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-iterator.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-iterator.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-iterator.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-iterator.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
In file included from ../../src/gcc/gimple-iterator.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-iterator.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-iterator.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-iterator.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gimple-low.c -o gimple-low.o

                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gimple-pretty-print.c -o gimple-pretty-print.o
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/gimplify.c -o gimplify.o
In file included from ../../src/gcc/gimple-low.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-low.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-low.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-low.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from In file included from ../../src/gcc/gimple-pretty-print.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-pretty-print.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-pretty-print.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-pretty-print.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/gimplify.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimplify.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimplify.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimplify.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/gimple-low.c:68:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(return_statements_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/gimple-low.c:68:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(return_statements_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/gimple-low.c:68:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(return_statements_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/gimple-low.c:68:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(return_statements_t,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/gimple-low.c:832:30: warning: implicit conversion from enumeration type 'enum tsi_iterator_update' to different enumeration type 'enum gsi_iterator_update' [-Wconversion]
  gsi_insert_before (gsi, g, TSI_SAME_STMT);
  ~~~~~~~~~~~~~~~~~          ^~~~~~~~~~~~~
13 warnings generated.
In file included from ../../src/gcc/gimplify.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimplify.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/graph.c -o graph.o
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimplify.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimplify.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
In file included from ../../src/gcc/vec.h../../src/gcc/gimple-pretty-print.c:31:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-pretty-print.c:31:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~

^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-pretty-print.c:31:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimple-pretty-print.c:31:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/gimplify.c:45:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/graph.c:28:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/graph.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graph.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graph.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graph.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/graphds.c -o graphds.o
5 warnings generated.
gcc -c -O -g -DIN_GCC -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/graphite.c -o graphite.o
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
9                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27 warning:
s generated.
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   gtype-desc.c -o gtype-desc.o

In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/graphds.c:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
12 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/haifa-sched.c -o haifa-sched.o
In file included from gtype-desc.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:31:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:39:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:45:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from gtype-desc.c:51:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/haifa-sched.c:135:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:135:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:135:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:135:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gtype-desc.c:444:7: warning: switch condition has boolean value
      switch (current_ir_type () == IR_GIMPLE)
      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gtype-desc.c:739:7: warning: switch condition has boolean value
      switch (((((*x)).flags & BB_RTL) != 0))
      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gtype-desc.c:1469:11: warning: switch condition has boolean value
          switch (SYMBOL_REF_HAS_BLOCK_INFO_P (&(*x)))
          ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:139:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gtype-desc.c:2555:7: warning: switch condition has boolean value
      switch (current_ir_type () == IR_GIMPLE)
      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);gtype-desc.c:2850:7: warning: switch condition has boolean value
      switch (((((*x)).flags & BB_RTL) != 0))
      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/haifa-sched.c:143:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gtype-desc.c:3580:11: warning: switch condition has boolean value
          switch (SYMBOL_REF_HAS_BLOCK_INFO_P (&(*x)))
          ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/haifa-sched.c:145:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
gtype-desc.c:4715:3: warning: switch condition has boolean value
  switch (current_ir_type () == IR_GIMPLE)
  ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gtype-desc.c:5035:3: warning: switch condition has boolean value
  switch (((((*x)).flags & BB_RTL) != 0))
  ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gtype-desc.c:6007:7: warning: switch condition has boolean value
      switch (SYMBOL_REF_HAS_BLOCK_INFO_P (&(*x)))
      ^       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/haifa-sched.c:3912:42: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
          REG_NOTES (jump) = gen_rtx_EXPR_LIST (REG_CROSSING_JUMP,
                             ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
30 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/hooks.c -o hooks.o
../../src/gcc/graphite.c:3324:14: warning: case value not in enumerated type 'enum gimple_code' [-Wswitch]
        case SWITCH_EXPR:
             ^
26 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ifcvt.c -o ifcvt.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/init-regs.c -o init-regs.o
In file included from ../../src/gcc/init-regs.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/init-regs.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/init-regs.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/init-regs.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/integrate.c -o integrate.o
In file included from ../../src/gcc/ifcvt.c:37:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ifcvt.c:41:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/integrate.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/integrate.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/integrate.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/integrate.c:29:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/integrate.c:36:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   \
	  -DLOCALEDIR=\"/usr/share/locale\" \
	  -c ../../src/gcc/intl.c -o intl.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ira.c -o ira.o
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ira-build.c -o ira-build.o
In file included from ../../src/gcc/ira.c:304:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:304:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:304:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:304:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:318:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira.c:325:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:38:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-build.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ira-costs.c -o ira-costs.o
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ira-conflicts.c -o ira-conflicts.o
In file included from ../../src/gcc/ira-conflicts.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-conflicts.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/ira-conflicts.c:667:18: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
  fprintf (file, title);
                 ^~~~~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-costs.c:39:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ira-color.c -o ira-color.o
16 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ira-emit.c -o ira-emit.o
In file included from ../../src/gcc/ira-color.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:29:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-color.c:41:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:27:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
1 warning generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/ira-lives.c -o ira-lives.o
In file included from ../../src/gcc/ira-emit.c:41:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:2716 warnings generated.
:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/jump.c -o jump.o
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-emit.c:45:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:45:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:45:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:45:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:45:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
17 warnings generated.
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/jump.c:47:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21:gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/lambda-code.c -o lambda-code.o
 note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/ira-lives.c:40:
In file included from ../../src/gcc/ira-int.h:22:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
16 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/lambda-mat.c -o lambda-mat.o
16 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/lambda-trans.c -o lambda-trans.o
In file included from ../../src/gcc/lambda-code.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-mat.c:27:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/langhooks.c -o langhooks.o
In file included from ../../src/gcc/lambda-code.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from In file included from ../../src/gcc/lambda-trans.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-trans.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: ../../src/gcc/lambda-trans.cexpanded from macro 'DEF_VEC_ALLOC_O':
26VEC_TA(T,base,A);                                                         \:
../../src/gcc/tree.h:
1519                                                                          ^:
1../../src/gcc/vec.h:: warning: 1009using extended field designator is an extension [-pedantic,-Wextended-offsetof]:
5DEF_VEC_ALLOC_O(constructor_elt,gc);: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'

^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
../../src/gcc/vec.h:
815                                ^:
27/usr/include/clang/3.1/include/stddef.h:: 52note: :expanded from macro 'DEF_VEC_ALLOC_O'24
:VEC_TA(T,base,A);                                                         \ note: 
expanded from macro 'offsetof'                                                                          ^

#define offsetof(t, d) __builtin_offsetof(t, d)../../src/gcc/vec.h:
1034                       ^                     ~:
15In file included from : note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:33:
../../src/gcc/tree-flow.h:856:1: warning: ../../src/gcc/lambda-trans.cusing extended field designator is an extension [-pedantic,-Wextended-offsetof]:
26DEF_VEC_ALLOC_O(edge_var_map, heap);:
../../src/gcc/tree.h:1519
:^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~1
:../../src/gcc/vec.h warning: :using extended field designator is an extension [-pedantic,-Wextended-offsetof]815
:DEF_VEC_ALLOC_O(constructor_elt,gc);27: note: 
expanded from macro 'DEF_VEC_ALLOC_O'^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

VEC_TA(T,base,A);                                                         \../../src/gcc/vec.h:815
:                                                                          ^27
:../../src/gcc/vec.h :note: 1034expanded from macro 'DEF_VEC_ALLOC_O':
15VEC_TA(T,base,A);                                                         \: note: 
expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'                                                                          ^

                                              offsetof (VEC(T,A),base.vec),\../../src/gcc/vec.h:1050
:                                              ^6
:/usr/include/clang/3.1/include/stddef.h note: :expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'52
:                          offsetof (VEC(T,A),base.vec),                   \24: 
note:                           ^expanded from macro 'offsetof'

/usr/include/clang/3.1/include/stddef.h#define offsetof(t, d) __builtin_offsetof(t, d):52:
24                       ^                     ~:
 In file included from note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/lambda-code.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:36:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/langhooks.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/langhooks.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/langhooks.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/langhooks.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:40:
../../src/gcc/tree-data-ref.h:382:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (data_ref_loc, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:40:
../../src/gcc/tree-data-ref.h:382:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (data_ref_loc, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:40:
../../src/gcc/tree-data-ref.h:382:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (data_ref_loc, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-code.c:40:
../../src/gcc/tree-data-ref.h:382:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (data_ref_loc, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-trans.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-trans.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-trans.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lambda-trans.c:28:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/langhooks.c:556:30: warning: implicit truncation from 'int' to bitfield changes value from -1 to 2047 [-Wconstant-conversion]
  DECL_FUNCTION_CODE (decl)  = -1;
                             ^ ~~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/lcm.c -o lcm.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/lists.c -o lists.o
24 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/loop-doloop.c -o loop-doloop.o
In file included from ../../src/gcc/lcm.c:57:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:57:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:57:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:57:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/loop-init.c -o loop-init.o
In file included from ../../src/gcc/lcm.c:64:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lcm.c:70:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/loop-invariant.c -o loop-invariant.o
In file included from ../../src/gcc/loop-doloop.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:28:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-doloop.c:33:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/loop-doloop.c:34:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~17
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
 warnings generated.
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/loop-iv.c -o loop-iv.o
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-init.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:46:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:46:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:46:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:46:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from 16 warnings generated.
../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-invariant.c:47:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/loop-unroll.c -o loop-unroll.o
In file included from ../../src/gcc/loop-invariant.c:50:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/loop-unswitch.c -o loop-unswitch.o
In file included from ../../src/gcc/loop-iv.c:58:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:58:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:58:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:58:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/loop-unroll.c:28:
../../src/gcc/vec.hIn file included from ../../src/gcc/basic-block.h::50931::
27In file included from :../../src/gcc/function.h :note: 25expanded from macro 'DEF_VEC_ALLOC_I':

../../src/gcc/tree.hVEC_TA(T,base,A);                                                         \:1519:1
:                                                                          ^ 
../../src/gcc/vec.hwarning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
:DEF_VEC_ALLOC_O(constructor_elt,gc);1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

                                     ^../../src/gcc/vec.h
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof':
815#define offsetof(t, d) __builtin_offsetof(t, d):27:
                       ^                     ~ note: 
expanded from macro 'DEF_VEC_ALLOC_O'In file included from 
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
../../src/gcc/loop-iv.c                       ^                     ~
:In file included from 59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:../../src/gcc/loop-unroll.c509::2827:
:In file included from  ../../src/gcc/basic-block.hnote: :expanded from macro 'DEF_VEC_ALLOC_I'31
:
VEC_TA(T,base,A);                                                         \In file included from ../../src/gcc/function.h:
25                                                                          ^:

../../src/gcc/tree.h../../src/gcc/vec.h:1519::11131::5 :warning:  note: using extended field designator is an extension [-pedantic,-Wextended-offsetof]expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'

DEF_VEC_ALLOC_O(constructor_elt,gc);                                offsetof (VEC(T,A),base.vec), sizeof (T)  \

^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                ^

../../src/gcc/vec.h/usr/include/clang/3.1/include/stddef.h::81552::2724::  note: note: expanded from macro 'DEF_VEC_ALLOC_O'expanded from macro 'offsetof'

VEC_TA(T,base,A);                                                         \#define offsetof(t, d) __builtin_offsetof(t, d)

                                                                          ^                       ^                     ~

../../src/gcc/vec.hIn file included from :1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:59:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: ../../src/gcc/loop-unroll.cnote: :expanded from macro 'DEF_VEC_ALLOC_I'28
:
VEC_TA(T,base,A);                                                         \In file included from ../../src/gcc/basic-block.h:
31                                                                          ^
:
../../src/gcc/vec.hIn file included from ../../src/gcc/function.h::113825::
15../../src/gcc/tree.h:: 1519note: :expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'1
                                              offsetof (VEC(T,A),base.vec),\: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]

                                              ^DEF_VEC_ALLOC_O(constructor_elt,gc);
/usr/include/clang/3.1/include/stddef.h
:^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~52
:../../src/gcc/vec.h24:: 815note: :expanded from macro 'offsetof'27
:#define offsetof(t, d) __builtin_offsetof(t, d) note: expanded from macro 'DEF_VEC_ALLOC_O'

                       ^                     ~VEC_TA(T,base,A);                                                         \
In file included from 
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:../../src/gcc/loop-iv.c52::5924:
:In file included from  ../../src/gcc/cfgloop.hnote: :expanded from macro 'offsetof'27
:
#define offsetof(t, d) __builtin_offsetof(t, d)../../src/gcc/vecprim.h:30:
1                       ^                     ~:
 In file included from warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \../../src/gcc/loop-unroll.c
:                                                                          ^28
../../src/gcc/vec.h:
In file included from :../../src/gcc/basic-block.h1153::3121:
:In file included from  ../../src/gcc/function.hnote: :expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'25
:
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \../../src/gcc/tree.h:1519
:                                         ^1
:/usr/include/clang/3.1/include/stddef.h warning: :using extended field designator is an extension [-pedantic,-Wextended-offsetof]52
:DEF_VEC_ALLOC_O(constructor_elt,gc);24: note: 
expanded from macro 'offsetof'^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

#define offsetof(t, d) __builtin_offsetof(t, d)../../src/gcc/vec.h:815
:                       ^                     ~27
:In file included from ../../src/gcc/loop-unswitch.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
 note: expanded from macro 'DEF_VEC_ALLOC_O'
                       ^                     ~
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-iv.c:62:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
In file included from ^~~~~~~~~~~~~~~~~~~~~~~~~../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'

^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: #define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/loop-unroll.cIn file included from :../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: :30:1warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: : note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
DEF_VEC_ALLOC_I(unsigned,heap);
In file included from ../../src/gcc/loop-unroll.c:^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: ../../src/gcc/vec.h:509:using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: 27: note: expanded from macro 'DEF_VEC_ALLOC_I'
expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
VEC_TA(T,base,A);                                                         \#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~

                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24:
 note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
../../src/gcc/vec.h:#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
509:27:In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
 note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unswitch.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/loop-unroll.c:29:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]In file included from 
../../src/gcc/loop-unswitch.c:32:
../../src/gcc/output.hDEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: :125expanded from macro 'DEF_VEC_ALLOC_I':6: warning: 
'format' attribute argument not supported: __asm_fprintf__
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/loop-unroll.c:32:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/lower-subreg.c -o lower-subreg.o
In file included from ../../src/gcc/lower-subreg.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lower-subreg.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lower-subreg.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/lower-subreg.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/mcf.c -o mcf.o
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/mode-switching.c -o mode-switching.o
In file included from ../../src/gcc/mcf.c:50:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mcf.c:50:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mcf.c:50:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mcf.c:50:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mcf.c:51:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/modulo-sched.c -o modulo-sched.o
5 warnings generated.
In file included from ../../src/gcc/mode-switching.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:26:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/omega.c -o omega.o
warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:33:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/mode-switching.c:42:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/omp-low.c -o omp-low.o
In file included from ../../src/gcc/modulo-sched.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:31:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omega.c:40:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omega.c:40:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omega.c:40:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omega.c:40:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omega.c../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
:                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \2219:16
:                                         ^ 
warning: /usr/include/clang/3.1/include/stddef.hexplicitly assigning a variable of type 'int' to itself [-Wself-assign]
:52                      alpha3 = alpha3;:24:
                       ~~~~~~ ^ ~~~~~~note: 
expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/modulo-sched.c:39:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/omp-low.c:46:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/omp-low.c:1510:7: warning: add explicit braces to avoid dangling else [-Wdangling-else]
      else if (OMP_CLAUSE_CODE (c) == OMP_CLAUSE_LASTPRIVATE
      ^
24 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/optabs.c -o optabs.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   options.c -o options.o
In file included from ../../src/gcc/optabs.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/optabs.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/optabs.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/optabs.c:33:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/opts-common.c -o opts-common.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/opts.c -o opts.o
21 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/params.c -o params.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/passes.c -o passes.o
In file included from ../../src/gcc/opts.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:31:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/opts.c:40:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/passes.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/pointer-set.c -o pointer-set.o
../../src/gcc/opts.c:1262:7: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
                                  * (const char **) option->flag_var);
                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
18In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I' warnings
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24:  generated.
note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:49:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:54:
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/postreload-gcse.c -o postreload-gcse.o
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/postreload.c -o postreload.o
In file included from ../../src/gcc/passes.c:82:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:82:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:82:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/passes.c:82:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload-gcse.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload-gcse.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload-gcse.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload-gcse.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/postreload.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
21 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/predict.c -o predict.o
In file included from ../../src/gcc/postreload-gcse.c:37:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/postreload.c:41:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/pretty-print.c -o pretty-print.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/print-rtl.c -o print-rtl.o
In file included from ../../src/gcc/predict.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:35:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/pretty-print.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/pretty-print.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/pretty-print.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/pretty-print.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-rtl.c:38:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-rtl.c:38:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-rtl.c:38:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-rtl.c:38:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:43:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:54:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/print-tree.c -o print-tree.o
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/profile.c -o profile.o
In file included from ../../src/gcc/predict.c:55:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:55:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:55:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/predict.c:55:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:58:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/profile.c:59:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:59:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:59:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:59:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-tree.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-tree.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-tree.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-tree.c:26:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:67:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:67:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:67:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:67:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/profile.c:69:
In file included from ../../src/gcc/cfgloop.h:27:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/profile.c:744:22: warning: expression result unused [-Wunused-value]
            num_branches++, num_never_executed;
                            ^~~~~~~~~~~~~~~~~~
21 warnings generated.
22 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/real.c -o real.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/recog.c -o recog.o
In file included from ../../src/gcc/print-tree.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-tree.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-tree.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/print-tree.c:33:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/reg-stack.c -o reg-stack.o
In file included from ../../src/gcc/real.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/real.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/real.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/real.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:158:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:158:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:158:
../../src/gcc/tree.hIn file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:158:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:30:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:168:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reg-stack.c:178:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/recog.c:41:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/reginfo.c -o reginfo.o
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/regmove.c -o regmove.o
In file included from ../../src/gcc/reginfo.c:36:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reginfo.c:36:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reginfo.c:36:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reginfo.c:36:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
17 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/regrename.c -o regrename.o
In file included from ../../src/gcc/reginfo.c:48:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/regmove.c:34:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/regmove.c:35:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regmove.c:35:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regmove.c:35:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regmove.c:35:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/regstat.c -o regstat.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/reload.c -o reload.o
In file included from ../../src/gcc/regrename.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regrename.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regrename.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regrename.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regstat.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regstat.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regstat.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regstat.c:30:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/regrename.c:33:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/regstat.c:31:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/reload1.c -o reload1.o
In file included from ../../src/gcc/reload.c:100:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload.c:100:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload.c:100:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload.c:100:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload1.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload1.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload1.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload1.c:34:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reload.c:109:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/reorg.c -o reorg.o
In file included from ../../src/gcc/reload1.c:42:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/reload1.c:2688:31: warning: implicit conversion from enumeration type 'enum reg_note' to different enumeration type 'enum machine_mode' [-Wconversion]
              x = gen_rtx_EXPR_LIST (REG_NOTE_KIND (x), new_rtx, XEXP (x, 1));
                  ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:830:30: note: expanded from macro 'REG_NOTE_KIND'
#define REG_NOTE_KIND(LINK) ((enum reg_note) GET_MODE (LINK))
                             ^
./genrtl.h:238:31: note: expanded from macro 'gen_rtx_EXPR_LIST'
  gen_rtx_fmt_ee (EXPR_LIST, (MODE), (ARG0), (ARG1))
                              ^
./genrtl.h:11:33: note: expanded from macro 'gen_rtx_fmt_ee'
        gen_rtx_fmt_ee_stat (c, m, p0, p1 MEM_STAT_INFO)
        ~~~~~~~~~~~~~~~~~~~     ^
In file included from ../../src/gcc/reorg.c:121:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:121:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:121:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:121:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:130:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/reorg.c:132:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
175 warnings generated.
 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/resource.c -o resource.o
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/rtl-error.c -o rtl-error.o
6 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/rtl-factoring.c -o rtl-factoring.o
In file included from ../../src/gcc/resource.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:29:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \In file included from ../../src/gcc/resource.c:32:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^

                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: ../../src/gcc/insn-addr.hexpanded from macro '\
DEF_VEC_ALLOC_FUNC_I':23:
../../src/gcc/vecprim.h:24
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
:1In file included from : ../../src/gcc/rtl-error.cwarning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from ../../src/gcc/rtl-error.c:../../src/gcc/vec.h28:509:27:
: note: expanded from macro 'DEF_VEC_ALLOC_I'
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15:
 note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24                                                                          ^
: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/vec.h:1100:In file included from 24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27:                       (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21:                                      ^
note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: /usr/include/clang/3.1/include/stddef.h:expanded from macro 'offsetof'52:24: note: 
expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:In file included from 24../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~

^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-error.c:28:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/resource.c:35:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
12 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/rtl.c -o rtl.o
17 warnings generated.
In file included from ../../src/gcc/rtl-factoring.c:26:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-factoring.c:26:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-factoring.c:26:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-factoring.c:26:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/rtlanal.c -o rtlanal.o
In file included from ../../src/gcc/rtlanal.c:33:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/rtlhooks.c -o rtlhooks.o
In file included from ../../src/gcc/rtl-factoring.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-factoring.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \In file included from 
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-factoring.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-factoring.c:35:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/rtlanal.c:37:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtlanal.c:37:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtlanal.c:37:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtlanal.c:37:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtl-factoring.c:37:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
9 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sbitmap.c -o sbitmap.o
In file included from ../../src/gcc/rtlhooks.c:26:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtlhooks.c:26:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtlhooks.c:26:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/rtlhooks.c:26:
In file included from ../../src/gcc/expr.h:26:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sched-deps.c -o sched-deps.o
In file included from ../../src/gcc/sbitmap.c:29:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sbitmap.c:29:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sbitmap.c:29:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sbitmap.c:29:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sched-ebb.c -o sched-ebb.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sched-rgn.c -o sched-rgn.o
In file included from ../../src/gcc/sched-deps.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:33:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:37:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-deps.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:32:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:32:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:32:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:32:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
In file included from ../../src/gcc/sched-rgn.c:56:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:56:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:56:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:56:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: 24warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I' warnings
 generated.
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:36:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sched-vis.c -o sched-vis.o
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
In file included from /usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:42:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-ebb.c:44:
../../src/gcc/output.h:125:6../../src/gcc/sched-rgn.c: :warning: 60'format' attribute argument not supported: __asm_fprintf__:

In file included from      ATTRIBUTE_ASM_FPRINTF(2, 3);./insn-attr.h:59:

In file included from      ^../../src/gcc/insn-addr.h
:../../src/gcc/output.h23::
115../../src/gcc/vecprim.h::5324:: 1note: :expanded from macro 'ATTRIBUTE_ASM_FPRINTF' 
warning: #define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
                                                    ^
^~~~~~~~~~~~~~~~~~~~~~~~~~

../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:60:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-rgn.c:66:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
25 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sdbout.c -o sdbout.o
In file included from ../../src/gcc/sched-vis.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sched-vis.c:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
24 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/see.c -o see.o
In file included from ../../src/gcc/sdbout.c:49:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sdbout.c:49:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sdbout.c:49:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sdbout.c:49:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sel-sched-ir.c -o sel-sched-ir.o
24 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sel-sched-dump.c -o sel-sched-dump.o
In file included from ../../src/gcc/see.c:471:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/see.c:472:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/see.c:472:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/see.c:472:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/see.c:472:
In file included from ../../src/gcc/df.h:30:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: 
expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
In file included from ../../src/gcc/sel-sched-ir.c:/usr/include/clang/3.1/include/stddef.h:52:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: 24: note: expanded from macro 'offsetof'note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'

#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
#define offsetof(t, d) __builtin_offsetof(t, d)
In file included from ../../src/gcc/sel-sched-ir.c:32                       ^                     ~
:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:34:
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^

^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from In file included from ../../src/gcc/sel-sched-dump.c:39:
In file included from ../../src/gcc/sel-sched-ir.h:33:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'5 warnings generated.

                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:40:
../../src/gcc/sched-int.hgcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sel-sched.c -o sel-sched.o
:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:In file included from 52:24: note: expanded from macro 'offsetof'
../../src/gcc/sel-sched-ir.c:48:
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27:In file included from  note: expanded from macro 'DEF_VEC_ALLOC_O'
../../src/gcc/sel-sched-dump.c:VEC_TA(T,base,A);                                                         \
39:
                                                                          ^
../../src/gcc/vec.h:../../src/gcc/sel-sched-ir.h995:8: :note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
889:                                                 offsetof (VEC(T,A),base.vec), \
1                                                 ^
/usr/include/clang/3.1/include/stddef.h:52: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h::815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
24: note: VEC_TA(T,base,A);                                                         \expanded from macro 'offsetof'

#define offsetof(t, d) __builtin_offsetof(t, d)
                                                                          ^                       ^                     ~

../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: In file included from note: expanded from macro 'offsetof'
../../src/gcc/sel-sched-ir.c:48#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]In file included from 
../../src/gcc/sel-sched-dump.c:39:
DEF_VEC_ALLOC_O (expr_history_def, heap);../../src/gcc/sel-sched-ir.h:
889:^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);815:27: 
note: expanded from macro 'DEF_VEC_ALLOC_O'
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:815:../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
27/usr/include/clang/3.1/include/stddef.h: :note: 52expanded from macro 'DEF_VEC_ALLOC_O':24: 
note: expanded from macro 'offsetof'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:#define offsetof(t, d) __builtin_offsetof(t, d)6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                       ^                     ~

                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~

^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-dump.c:39:
../../src/gcc/sel-sched-ir.h:923:1../../src/gcc/sel-sched-ir.h: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: :763:1:note:  warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
In file included from ../../src/gcc/sel-sched-dump.c:39^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
:
../../src/gcc/sel-sched-ir.h:923:1: warning: ../../src/gcc/vec.h:using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: 815:27:expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note:  note: expanded from macro 'DEF_VEC_ALLOC_O'
expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched-ir.c:48:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
41 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/simplify-rtx.c -o simplify-rtx.o
In file included from ../../src/gcc/sel-sched.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:28:
In file included from ../../src/gcc/regs.h:28:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:32:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:38:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:728:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:41:
../../src/gcc/sched-int.h:744:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (haifa_deps_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/simplify-rtx.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/simplify-rtx.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/simplify-rtx.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/simplify-rtx.c:28:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:102:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (expr_history_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:763:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_insn_data_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:889:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_global_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/sel-sched.c:50:
../../src/gcc/sel-sched-ir.h:923:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O (sel_region_bb_info_def, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
40 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sparseset.c -o sparseset.o
In file included from ../../src/gcc/simplify-rtx.c:39:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/simplify-rtx.c:97:13: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
      val = CONST_DOUBLE_HIGH (x);
            ^~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:988:36: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
        lv = CONST_DOUBLE_LOW (op),  hv = CONST_DOUBLE_HIGH (op);
                                          ^~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:1004:36: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
        lv = CONST_DOUBLE_LOW (op),  hv = CONST_DOUBLE_HIGH (op);
                                          ^~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:1173:35: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
        l1 = CONST_DOUBLE_LOW (op), h1 = CONST_DOUBLE_HIGH (op);
                                         ^~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:2005:26: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
          && (val = exact_log2 (CONST_DOUBLE_HIGH (trueop1))) >= 0)
                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:3120:36: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
        l1 = CONST_DOUBLE_LOW (op0), h1 = CONST_DOUBLE_HIGH (op0);
                                          ^~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:3125:36: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
        l2 = CONST_DOUBLE_LOW (op1), h2 = CONST_DOUBLE_HIGH (op1);
                                          ^~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:4201:16: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
          h0u = h0s = CONST_DOUBLE_HIGH (trueop0);
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/sreal.c -o sreal.o
../../src/gcc/simplify-rtx.c:4212:16: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
          h1u = h1s = CONST_DOUBLE_HIGH (trueop1);
                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
../../src/gcc/simplify-rtx.c:4738:9: warning: array index 1 is past the end of the array (which contains 1 element) [-Warray-bounds]
                    = CONST_DOUBLE_HIGH (el) >> (i - HOST_BITS_PER_WIDE_INT);
                      ^~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/rtl.h:1043:30: note: expanded from macro 'CONST_DOUBLE_HIGH'
#define CONST_DOUBLE_HIGH(r) XCMWINT (r, 1, CONST_DOUBLE, VOIDmode)
                             ^
../../src/gcc/rtl.h:592:36: note: expanded from macro 'XCMWINT'
#define XCMWINT(RTX, N, C, M)       ((RTX)->u.hwint[N])
                                     ^              ~
../../src/gcc/rtl.h:318:5: note: array 'hwint' declared here
    HOST_WIDE_INT hwint[1];
    ^
../../src/gcc/hwint.h:55:26: note: expanded from macro 'HOST_WIDE_INT'
#   define HOST_WIDE_INT long
                         ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/stack-ptr-mod.c -o stack-ptr-mod.o
15 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/statistics.c -o statistics.o
In file included from ../../src/gcc/stack-ptr-mod.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stack-ptr-mod.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stack-ptr-mod.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stack-ptr-mod.c:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/statistics.c:30:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/statistics.c:30:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/statistics.c:30:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/statistics.c:30:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
41 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/stmt.c -o stmt.o
4 warnings generated.
In file included from ../../src/gcc/stack-ptr-mod.c:32:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/stor-layout.c -o stor-layout.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/stringpool.c -o stringpool.o
In file included from ../../src/gcc/stmt.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stmt.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stmt.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stmt.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stor-layout.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stor-layout.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from In file included from ../../src/gcc/stmt.c:45:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
../../src/gcc/stor-layout.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stor-layout.c:27:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stor-layout.c:33:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/stringpool.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stringpool.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stringpool.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/stringpool.c:34:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
4 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/targhooks.c -o targhooks.o
5 warnings generated.
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/timevar.c -o timevar.o
5 warnings generated.
gcc  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   \
	  -DTARGET_NAME=\"x86_64-linux-gnu\" \
	  -c ../../src/gcc/toplev.c -o toplev.o
In file included from ../../src/gcc/targhooks.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/targhooks.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/targhooks.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/targhooks.c:55:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/targhooks.c:57:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/toplev.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:45:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/tracer.c -o tracer.o
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'5 warnings generated.

VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:24:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(char,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/tree-affine.c -o tree-affine.o
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:27:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(int,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1100:24: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                      (NULL, alloc_, offsetof (VEC(T,A),base.vec),        \
                                     ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1113:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1138:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:50:
In file included from ./insn-attr.h:59:
In file included from ../../src/gcc/insn-addr.h:23:
../../src/gcc/vecprim.h:30:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_I(unsigned,heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:509:27: note: expanded from macro 'DEF_VEC_ALLOC_I'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1153:21: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_I'
                         (*vec_, alloc_, offsetof (VEC(T,A),base.vec),    \
                                         ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/toplev.c:55:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/tracer.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:41:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:45:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
In file included from ../../src/gcc/tree-affine.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-affine.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-affine.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-affine.c:24:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:53:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:53:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:53:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tracer.c:53:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-affine.c:28:
../../src/gcc/output.h:125:6: warning: 'format' attribute argument not supported: __asm_fprintf__
     ATTRIBUTE_ASM_FPRINTF(2, 3);
     ^
../../src/gcc/output.h:115:53: note: expanded from macro 'ATTRIBUTE_ASM_FPRINTF'
#define ATTRIBUTE_ASM_FPRINTF(m, n) __attribute__ ((__format__ (__asm_fprintf__, m, n))) ATTRIBUTE_NONNULL(m)
                                                    ^
9 warnings generated.
../../src/gcc/toplev.c:536:1: error: redefinition of a 'extern inline' function 'floor_log2' is not supported in C99 mode
floor_log2 (unsigned HOST_WIDE_INT x)
^
../../src/gcc/toplev.h:190:1: note: previous definition is here
floor_log2 (unsigned HOST_WIDE_INT x)
^
../../src/gcc/toplev.c:571:1: error: redefinition of a 'extern inline' function 'exact_log2' is not supported in C99 mode
exact_log2 (unsigned HOST_WIDE_INT x)
^
../../src/gcc/toplev.h:196:1: note: previous definition is here
exact_log2 (unsigned HOST_WIDE_INT x)
^
gcc -c  -g -fkeep-inline-functions -DIN_GCC   -W -Wall -Wwrite-strings -Wstrict-prototypes -Wmissing-prototypes -Wcast-qual -Wold-style-definition -Wc++-compat -Wmissing-format-attribute -pedantic -Wno-long-long -Wno-variadic-macros -Wno-overlength-strings   -DHAVE_CONFIG_H -I. -I. -I../../src/gcc -I../../src/gcc/. -I../../src/gcc/../include -I../../src/gcc/../libcpp/include  -I../../src/gcc/../libdecnumber -I../../src/gcc/../libdecnumber/bid -I../libdecnumber  -I/include -DCLOOG_PPL_BACKEND   ../../src/gcc/tree-call-cdce.c -o tree-call-cdce.o
../../src/gcc/toplev.c:1189:30: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
      fprintf (asm_out_file, text);
                             ^~~~
../../src/gcc/toplev.c:1218:24: warning: format string is not a string literal (potentially insecure) [-Wformat-security]
      fprintf (stderr, text);
                       ^~~~
19 warnings and 2 errors generated.
make[5]: *** [toplev.o] Error 1
make[5]: *** Waiting for unfinished jobs....
In file included from ../../src/gcc/tree-call-cdce.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-call-cdce.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-call-cdce.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-call-cdce.c:33:
In file included from ../../src/gcc/basic-block.h:31:
In file included from ../../src/gcc/function.h:25:
../../src/gcc/tree.h:1519:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(constructor_elt,gc);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
5 warnings generated.
In file included from ../../src/gcc/tree-call-cdce.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:995:8: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                                 offsetof (VEC(T,A),base.vec), \
                                                 ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-call-cdce.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1009:5: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                offsetof (VEC(T,A),base.vec), sizeof (T)  \
                                ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-call-cdce.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1034:15: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                                              offsetof (VEC(T,A),base.vec),\
                                              ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
In file included from ../../src/gcc/tree-call-cdce.c:37:
../../src/gcc/tree-flow.h:856:1: warning: using extended field designator is an extension [-pedantic,-Wextended-offsetof]
DEF_VEC_ALLOC_O(edge_var_map, heap);
^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../../src/gcc/vec.h:815:27: note: expanded from macro 'DEF_VEC_ALLOC_O'
VEC_TA(T,base,A);                                                         \
                                                                          ^
../../src/gcc/vec.h:1050:6: note: expanded from macro '\
DEF_VEC_ALLOC_FUNC_O'
                          offsetof (VEC(T,A),base.vec),                   \
                          ^
/usr/include/clang/3.1/include/stddef.h:52:24: note: expanded from macro 'offsetof'
#define offsetof(t, d) __builtin_offsetof(t, d)
                       ^                     ~
8 warnings generated.
rm gcc.pod
make[5]: Leaving directory `/«PKGBUILDDIR»/build/gcc'
make[4]: *** [all-stage1-gcc] Error 2
make[4]: Leaving directory `/«PKGBUILDDIR»/build'
make[3]: *** [stage1-bubble] Error 2
make[3]: Leaving directory `/«PKGBUILDDIR»/build'
make[2]: *** [bootstrap-lean] Error 2
make[2]: Leaving directory `/«PKGBUILDDIR»/build'
s=`cat status`; rm -f status; test $s -eq 0
make[1]: *** [stamps/05-build-stamp] Error 1
make[1]: Leaving directory `/«PKGBUILDDIR»'
make: *** [stamps/05-build-stamp] Error 2
dpkg-buildpackage: error: debian/rules build gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20120623-0253

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /«BUILDDIR»
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Architecture: amd64
Build-Space: 709276
Build-Time: 3938
Distribution: unstable
Fail-Stage: build
Install-Time: 13
Job: gcc-4.4_4.4.7-1
Package: gcc-4.4
Package-Time: 3974
Source-Version: 4.4.7-1
Space: 709276
Status: attempted
Version: 4.4.7-1
────────────────────────────────────────────────────────────────────────────────
Finished at 20120623-0253
Build needed 01:06:14, 709276k disc space
DC-Status: Failed 3976.890264s
DC-Time-Estimation: 3976.890264 versus expected 2000 (r/m: 0.988445132 ; m: 2000.0)
