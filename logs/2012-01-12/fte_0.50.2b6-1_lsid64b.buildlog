DC-Build-Header: fte 0.50.2b6-1 / Fri Jan 13 02:46:39 +0100 2012
sbuild (Debian sbuild) 0.62.2 (05 Apr 2011) on stremi-22.reims.grid5000.fr

╔══════════════════════════════════════════════════════════════════════════════╗
║ fte 0.50.2b6-1 (amd64)                                     13 Jan 2012 02:46 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: fte
Version: 0.50.2b6-1
Source Version: 0.50.2b6-1
Distribution: lsid64b
Architecture: amd64


┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Ign http://localhost sid InRelease
Get:1 http://localhost sid Release.gpg [836 B]
Get:2 http://localhost sid Release [188 kB]
Ign http://localhost sid/main Sources/DiffIndex
Ign http://localhost sid/main amd64 Packages/DiffIndex
Ign http://localhost sid/main TranslationIndex
Get:3 http://localhost sid/main Sources [7544 kB]
Get:4 http://localhost sid/main amd64 Packages [10.4 MB]
Ign http://localhost sid/main Translation-en
Fetched 18.2 MB in 3s (5424 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages have been kept back:
  clang cpp-4.6 g++-4.6 gcc-4.6 gcc-4.6-base libgcc1 libgomp1 libquadmath0
  libstdc++6 libstdc++6-4.6-dev
0 upgraded, 0 newly installed, 0 to remove and 10 not upgraded.

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
Need to get 611 kB of source archives.
Get:1 http://localhost/debian/ sid/main fte 0.50.2b6-1 (dsc) [1217 B]
Get:2 http://localhost/debian/ sid/main fte 0.50.2b6-1 (tar) [598 kB]
Get:3 http://localhost/debian/ sid/main fte 0.50.2b6-1 (diff) [11.6 kB]
Fetched 611 kB in 0s (1102 kB/s)
Download complete and in download only mode

Check arch
──────────

Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/build/fte-ncL6Ki/resolver-jHayqK/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
0 upgraded, 1 newly installed, 0 to remove and 10 not upgraded.
Need to get 0 B/702 B of archives.
After this operation, 0 B of additional disk space will be used.
WARNING: The following packages cannot be authenticated!
  sbuild-build-depends-core-dummy
Authentication warning overridden.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 10821 files and directories currently installed.)
Unpacking sbuild-build-depends-core-dummy (from .../sbuild-build-depends-core-dummy.deb) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Cannot open /var/lib/schroot/mount/lsid64b-905dc1a6-f878-41d0-8b6d-abd78b4debb0/etc/lsb-release: No such file or directory
Merged Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 5.0.0), perl5, libx11-dev, libxt-dev, libgpmg1-dev, x11proto-core-dev, libncurses5-dev, libslang2-dev, patch, libxpm-dev
Filtered Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 5.0.0), perl5, libx11-dev, libxt-dev, libgpmg1-dev, x11proto-core-dev, libncurses5-dev, libslang2-dev, patch, libxpm-dev
dpkg-deb: building package `sbuild-build-depends-fte-dummy' in `/build/fte-ncL6Ki/resolver-LQIWXy/apt_archive/sbuild-build-depends-fte-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install fte build dependencies (apt-based resolver)                          │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  bsdmainutils debhelper file gettext gettext-base groff-base html2text
  intltool-debian libcroco3 libglib2.0-0 libgpm-dev libgpm2 libgpmg1-dev
  libice-dev libice6 libmagic1 libncurses5-dev libpcre3 libpipeline1
  libpng12-0 libpng12-dev libpthread-stubs0 libpthread-stubs0-dev
  libslang2-dev libsm-dev libsm6 libtinfo-dev libunistring0 libx11-6
  libx11-data libx11-dev libxau-dev libxau6 libxcb1 libxcb1-dev libxdmcp-dev
  libxdmcp6 libxml2 libxpm-dev libxpm4 libxt-dev libxt6 man-db po-debconf
  x11-common x11proto-core-dev x11proto-input-dev x11proto-kb-dev
  xorg-sgml-doctools xtrans-dev zlib1g-dev
Suggested packages:
  wamerican wordlist whois vacation dh-make gettext-doc groff gpm ncurses-doc
  www-browser libmail-box-perl
Recommended packages:
  curl wget lynx-cur autopoint libglib2.0-data shared-mime-info libx11-doc
  xml-core libmail-sendmail-perl
The following NEW packages will be installed:
  bsdmainutils debhelper file gettext gettext-base groff-base html2text
  intltool-debian libcroco3 libglib2.0-0 libgpm-dev libgpm2 libgpmg1-dev
  libice-dev libice6 libmagic1 libncurses5-dev libpcre3 libpipeline1
  libpng12-0 libpng12-dev libpthread-stubs0 libpthread-stubs0-dev
  libslang2-dev libsm-dev libsm6 libtinfo-dev libunistring0 libx11-6
  libx11-data libx11-dev libxau-dev libxau6 libxcb1 libxcb1-dev libxdmcp-dev
  libxdmcp6 libxml2 libxpm-dev libxpm4 libxt-dev libxt6 man-db po-debconf
  sbuild-build-depends-fte-dummy x11-common x11proto-core-dev
  x11proto-input-dev x11proto-kb-dev xorg-sgml-doctools xtrans-dev zlib1g-dev
0 upgraded, 52 newly installed, 0 to remove and 10 not upgraded.
Need to get 15.8 MB/15.8 MB of archives.
After this operation, 45.1 MB of additional disk space will be used.
WARNING: The following packages cannot be authenticated!
  libpipeline1 libgpm2 libpcre3 libglib2.0-0 libxml2 libcroco3 x11-common
  libice6 libpng12-0 libsm6 libunistring0 libxau6 libxdmcp6 libxcb1
  libx11-data libx11-6 libxpm4 libxt6 bsdmainutils groff-base man-db libmagic1
  file gettext-base html2text gettext intltool-debian po-debconf debhelper
  libgpm-dev libgpmg1-dev xorg-sgml-doctools x11proto-core-dev libice-dev
  libtinfo-dev libncurses5-dev zlib1g-dev libpng12-dev libpthread-stubs0
  libpthread-stubs0-dev libslang2-dev libsm-dev libxau-dev libxdmcp-dev
  x11proto-input-dev x11proto-kb-dev xtrans-dev libxcb1-dev libx11-dev
  libxpm-dev libxt-dev sbuild-build-depends-fte-dummy
Authentication warning overridden.
Get:1 http://localhost/debian/ sid/main libpipeline1 amd64 1.2.0-5 [38.2 kB]
Get:2 http://localhost/debian/ sid/main libgpm2 amd64 1.20.4-4 [35.6 kB]
Get:3 http://localhost/debian/ sid/main libpcre3 amd64 8.12-4 [225 kB]
Get:4 http://localhost/debian/ sid/main libglib2.0-0 amd64 2.30.2-4 [1844 kB]
Get:5 http://localhost/debian/ sid/main libxml2 amd64 2.7.8.dfsg-5.1 [891 kB]
Get:6 http://localhost/debian/ sid/main libcroco3 amd64 0.6.2-2 [122 kB]
Get:7 http://localhost/debian/ sid/main x11-common all 1:7.6+10 [281 kB]
Get:8 http://localhost/debian/ sid/main libice6 amd64 2:1.0.7-2 [56.5 kB]
Get:9 http://localhost/debian/ sid/main libpng12-0 amd64 1.2.46-4 [190 kB]
Get:10 http://localhost/debian/ sid/main libsm6 amd64 2:1.2.0-2 [29.8 kB]
Get:11 http://localhost/debian/ sid/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:12 http://localhost/debian/ sid/main libxau6 amd64 1:1.0.6-4 [17.1 kB]
Get:13 http://localhost/debian/ sid/main libxdmcp6 amd64 1:1.1.0-4 [22.9 kB]
Get:14 http://localhost/debian/ sid/main libxcb1 amd64 1.7-4 [43.7 kB]
Get:15 http://localhost/debian/ sid/main libx11-data all 2:1.4.4-4 [187 kB]
Get:16 http://localhost/debian/ sid/main libx11-6 amd64 2:1.4.4-4 [889 kB]
Get:17 http://localhost/debian/ sid/main libxpm4 amd64 1:3.5.9-4 [48.1 kB]
Get:18 http://localhost/debian/ sid/main libxt6 amd64 1:1.1.1-2 [207 kB]
Get:19 http://localhost/debian/ sid/main bsdmainutils amd64 8.2.3 [208 kB]
Get:20 http://localhost/debian/ sid/main groff-base amd64 1.21-6 [1150 kB]
Get:21 http://localhost/debian/ sid/main man-db amd64 2.6.0.2-3 [1015 kB]
Get:22 http://localhost/debian/ sid/main libmagic1 amd64 5.09-2 [246 kB]
Get:23 http://localhost/debian/ sid/main file amd64 5.09-2 [52.0 kB]
Get:24 http://localhost/debian/ sid/main gettext-base amd64 0.18.1.1-5 [154 kB]
Get:25 http://localhost/debian/ sid/main html2text amd64 1.3.2a-15 [103 kB]
Get:26 http://localhost/debian/ sid/main gettext amd64 0.18.1.1-5 [2080 kB]
Get:27 http://localhost/debian/ sid/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:28 http://localhost/debian/ sid/main po-debconf all 1.0.16+nmu2 [224 kB]
Get:29 http://localhost/debian/ sid/main debhelper all 8.9.14 [693 kB]
Get:30 http://localhost/debian/ sid/main libgpm-dev amd64 1.20.4-4 [39.8 kB]
Get:31 http://localhost/debian/ sid/main libgpmg1-dev all 1.20.4-4 [24.4 kB]
Get:32 http://localhost/debian/ sid/main xorg-sgml-doctools all 1:1.10-1 [24.1 kB]
Get:33 http://localhost/debian/ sid/main x11proto-core-dev all 7.0.22-1 [323 kB]
Get:34 http://localhost/debian/ sid/main libice-dev amd64 2:1.0.7-2 [143 kB]
Get:35 http://localhost/debian/ sid/main libtinfo-dev amd64 5.9-4 [103 kB]
Get:36 http://localhost/debian/ sid/main libncurses5-dev amd64 5.9-4 [406 kB]
Get:37 http://localhost/debian/ sid/main zlib1g-dev amd64 1:1.2.3.4.dfsg-3 [192 kB]
Get:38 http://localhost/debian/ sid/main libpng12-dev amd64 1.2.46-4 [266 kB]
Get:39 http://localhost/debian/ sid/main libpthread-stubs0 amd64 0.3-3 [3228 B]
Get:40 http://localhost/debian/ sid/main libpthread-stubs0-dev amd64 0.3-3 [3998 B]
Get:41 http://localhost/debian/ sid/main libslang2-dev amd64 2.2.4-5 [627 kB]
Get:42 http://localhost/debian/ sid/main libsm-dev amd64 2:1.2.0-2 [101 kB]
Get:43 http://localhost/debian/ sid/main libxau-dev amd64 1:1.0.6-4 [20.6 kB]
Get:44 http://localhost/debian/ sid/main libxdmcp-dev amd64 1:1.1.0-4 [39.3 kB]
Get:45 http://localhost/debian/ sid/main x11proto-input-dev all 2.1-1 [145 kB]
Get:46 http://localhost/debian/ sid/main x11proto-kb-dev all 1.0.5-2 [27.5 kB]
Get:47 http://localhost/debian/ sid/main xtrans-dev all 1.2.6-2 [101 kB]
Get:48 http://localhost/debian/ sid/main libxcb1-dev amd64 1.7-4 [82.7 kB]
Get:49 http://localhost/debian/ sid/main libx11-dev amd64 2:1.4.4-4 [1027 kB]
Get:50 http://localhost/debian/ sid/main libxpm-dev amd64 1:3.5.9-4 [107 kB]
Get:51 http://localhost/debian/ sid/main libxt-dev amd64 1:1.1.1-2 [512 kB]
Extracting templates from packages: 57%Extracting templates from packages: 100%
Preconfiguring packages ...
Fetched 15.8 MB in 0s (35.8 MB/s)
Selecting previously unselected package libpipeline1.
(Reading database ... 10821 files and directories currently installed.)
Unpacking libpipeline1 (from .../libpipeline1_1.2.0-5_amd64.deb) ...
Selecting previously unselected package libgpm2.
Unpacking libgpm2 (from .../libgpm2_1.20.4-4_amd64.deb) ...
Selecting previously unselected package libpcre3.
Unpacking libpcre3 (from .../libpcre3_8.12-4_amd64.deb) ...
Selecting previously unselected package libglib2.0-0.
Unpacking libglib2.0-0 (from .../libglib2.0-0_2.30.2-4_amd64.deb) ...
Selecting previously unselected package libxml2.
Unpacking libxml2 (from .../libxml2_2.7.8.dfsg-5.1_amd64.deb) ...
Selecting previously unselected package libcroco3.
Unpacking libcroco3 (from .../libcroco3_0.6.2-2_amd64.deb) ...
Selecting previously unselected package x11-common.
Unpacking x11-common (from .../x11-common_1%3a7.6+10_all.deb) ...
Selecting previously unselected package libice6.
Unpacking libice6 (from .../libice6_2%3a1.0.7-2_amd64.deb) ...
Selecting previously unselected package libpng12-0.
Unpacking libpng12-0 (from .../libpng12-0_1.2.46-4_amd64.deb) ...
Selecting previously unselected package libsm6.
Unpacking libsm6 (from .../libsm6_2%3a1.2.0-2_amd64.deb) ...
Selecting previously unselected package libunistring0.
Unpacking libunistring0 (from .../libunistring0_0.9.3-5_amd64.deb) ...
Selecting previously unselected package libxau6.
Unpacking libxau6 (from .../libxau6_1%3a1.0.6-4_amd64.deb) ...
Selecting previously unselected package libxdmcp6.
Unpacking libxdmcp6 (from .../libxdmcp6_1%3a1.1.0-4_amd64.deb) ...
Selecting previously unselected package libxcb1.
Unpacking libxcb1 (from .../libxcb1_1.7-4_amd64.deb) ...
Selecting previously unselected package libx11-data.
Unpacking libx11-data (from .../libx11-data_2%3a1.4.4-4_all.deb) ...
Selecting previously unselected package libx11-6.
Unpacking libx11-6 (from .../libx11-6_2%3a1.4.4-4_amd64.deb) ...
Selecting previously unselected package libxpm4.
Unpacking libxpm4 (from .../libxpm4_1%3a3.5.9-4_amd64.deb) ...
Selecting previously unselected package libxt6.
Unpacking libxt6 (from .../libxt6_1%3a1.1.1-2_amd64.deb) ...
Selecting previously unselected package bsdmainutils.
Unpacking bsdmainutils (from .../bsdmainutils_8.2.3_amd64.deb) ...
Selecting previously unselected package groff-base.
Unpacking groff-base (from .../groff-base_1.21-6_amd64.deb) ...
Selecting previously unselected package man-db.
Unpacking man-db (from .../man-db_2.6.0.2-3_amd64.deb) ...
Selecting previously unselected package libmagic1.
Unpacking libmagic1 (from .../libmagic1_5.09-2_amd64.deb) ...
Selecting previously unselected package file.
Unpacking file (from .../archives/file_5.09-2_amd64.deb) ...
Selecting previously unselected package gettext-base.
Unpacking gettext-base (from .../gettext-base_0.18.1.1-5_amd64.deb) ...
Selecting previously unselected package html2text.
Unpacking html2text (from .../html2text_1.3.2a-15_amd64.deb) ...
Selecting previously unselected package gettext.
Unpacking gettext (from .../gettext_0.18.1.1-5_amd64.deb) ...
Selecting previously unselected package intltool-debian.
Unpacking intltool-debian (from .../intltool-debian_0.35.0+20060710.1_all.deb) ...
Selecting previously unselected package po-debconf.
Unpacking po-debconf (from .../po-debconf_1.0.16+nmu2_all.deb) ...
Selecting previously unselected package debhelper.
Unpacking debhelper (from .../debhelper_8.9.14_all.deb) ...
Selecting previously unselected package libgpm-dev.
Unpacking libgpm-dev (from .../libgpm-dev_1.20.4-4_amd64.deb) ...
Selecting previously unselected package libgpmg1-dev.
Unpacking libgpmg1-dev (from .../libgpmg1-dev_1.20.4-4_all.deb) ...
Selecting previously unselected package xorg-sgml-doctools.
Unpacking xorg-sgml-doctools (from .../xorg-sgml-doctools_1%3a1.10-1_all.deb) ...
Selecting previously unselected package x11proto-core-dev.
Unpacking x11proto-core-dev (from .../x11proto-core-dev_7.0.22-1_all.deb) ...
Selecting previously unselected package libice-dev.
Unpacking libice-dev (from .../libice-dev_2%3a1.0.7-2_amd64.deb) ...
Selecting previously unselected package libtinfo-dev.
Unpacking libtinfo-dev (from .../libtinfo-dev_5.9-4_amd64.deb) ...
Selecting previously unselected package libncurses5-dev.
Unpacking libncurses5-dev (from .../libncurses5-dev_5.9-4_amd64.deb) ...
Selecting previously unselected package zlib1g-dev.
Unpacking zlib1g-dev (from .../zlib1g-dev_1%3a1.2.3.4.dfsg-3_amd64.deb) ...
Selecting previously unselected package libpng12-dev.
Unpacking libpng12-dev (from .../libpng12-dev_1.2.46-4_amd64.deb) ...
Selecting previously unselected package libpthread-stubs0.
Unpacking libpthread-stubs0 (from .../libpthread-stubs0_0.3-3_amd64.deb) ...
Selecting previously unselected package libpthread-stubs0-dev.
Unpacking libpthread-stubs0-dev (from .../libpthread-stubs0-dev_0.3-3_amd64.deb) ...
Selecting previously unselected package libslang2-dev.
Unpacking libslang2-dev (from .../libslang2-dev_2.2.4-5_amd64.deb) ...
Selecting previously unselected package libsm-dev.
Unpacking libsm-dev (from .../libsm-dev_2%3a1.2.0-2_amd64.deb) ...
Selecting previously unselected package libxau-dev.
Unpacking libxau-dev (from .../libxau-dev_1%3a1.0.6-4_amd64.deb) ...
Selecting previously unselected package libxdmcp-dev.
Unpacking libxdmcp-dev (from .../libxdmcp-dev_1%3a1.1.0-4_amd64.deb) ...
Selecting previously unselected package x11proto-input-dev.
Unpacking x11proto-input-dev (from .../x11proto-input-dev_2.1-1_all.deb) ...
Selecting previously unselected package x11proto-kb-dev.
Unpacking x11proto-kb-dev (from .../x11proto-kb-dev_1.0.5-2_all.deb) ...
Selecting previously unselected package xtrans-dev.
Unpacking xtrans-dev (from .../xtrans-dev_1.2.6-2_all.deb) ...
Selecting previously unselected package libxcb1-dev.
Unpacking libxcb1-dev (from .../libxcb1-dev_1.7-4_amd64.deb) ...
Selecting previously unselected package libx11-dev.
Unpacking libx11-dev (from .../libx11-dev_2%3a1.4.4-4_amd64.deb) ...
Selecting previously unselected package libxpm-dev.
Unpacking libxpm-dev (from .../libxpm-dev_1%3a3.5.9-4_amd64.deb) ...
Selecting previously unselected package libxt-dev.
Unpacking libxt-dev (from .../libxt-dev_1%3a1.1.1-2_amd64.deb) ...
Selecting previously unselected package sbuild-build-depends-fte-dummy.
Unpacking sbuild-build-depends-fte-dummy (from .../sbuild-build-depends-fte-dummy.deb) ...
Processing triggers for install-info ...
Setting up libpipeline1 (1.2.0-5) ...
Setting up libgpm2 (1.20.4-4) ...
Setting up libpcre3 (8.12-4) ...
Setting up libglib2.0-0 (2.30.2-4) ...
No schema files found: doing nothing.
Setting up libxml2 (2.7.8.dfsg-5.1) ...
Setting up libcroco3 (0.6.2-2) ...
Setting up x11-common (1:7.6+10) ...
invoke-rc.d: policy-rc.d denied execution of start.
Setting up libice6 (2:1.0.7-2) ...
Setting up libpng12-0 (1.2.46-4) ...
Setting up libsm6 (2:1.2.0-2) ...
Setting up libunistring0 (0.9.3-5) ...
Setting up libxau6 (1:1.0.6-4) ...
Setting up libxdmcp6 (1:1.1.0-4) ...
Setting up libxcb1 (1.7-4) ...
Setting up libx11-data (2:1.4.4-4) ...
Setting up libx11-6 (2:1.4.4-4) ...
Setting up libxpm4 (1:3.5.9-4) ...
Setting up libxt6 (1:1.1.1-2) ...
Setting up bsdmainutils (8.2.3) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode.
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode.
Setting up groff-base (1.21-6) ...
Setting up man-db (2.6.0.2-3) ...
Building database of manual pages ...
Setting up libmagic1 (5.09-2) ...
Setting up file (5.09-2) ...
Setting up gettext-base (0.18.1.1-5) ...
Setting up html2text (1.3.2a-15) ...
Setting up gettext (0.18.1.1-5) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu2) ...
Setting up debhelper (8.9.14) ...
Setting up libgpm-dev (1.20.4-4) ...
Setting up libgpmg1-dev (1.20.4-4) ...
Setting up xorg-sgml-doctools (1:1.10-1) ...
Setting up x11proto-core-dev (7.0.22-1) ...
Setting up libice-dev (2:1.0.7-2) ...
Setting up libtinfo-dev (5.9-4) ...
Setting up libncurses5-dev (5.9-4) ...
Setting up zlib1g-dev (1:1.2.3.4.dfsg-3) ...
Setting up libpng12-dev (1.2.46-4) ...
Setting up libpthread-stubs0 (0.3-3) ...
Setting up libpthread-stubs0-dev (0.3-3) ...
Setting up libslang2-dev (2.2.4-5) ...
Setting up libsm-dev (2:1.2.0-2) ...
Setting up libxau-dev (1:1.0.6-4) ...
Setting up libxdmcp-dev (1:1.1.0-4) ...
Setting up x11proto-input-dev (2.1-1) ...
Setting up x11proto-kb-dev (1.0.5-2) ...
Setting up xtrans-dev (1.2.6-2) ...
Setting up libxcb1-dev (1.7-4) ...
Setting up libx11-dev (2:1.4.4-4) ...
Setting up libxpm-dev (1:3.5.9-4) ...
Setting up libxt-dev (1:1.1.1-2) ...
Setting up sbuild-build-depends-fte-dummy (0.invalid.0) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.22-4 dpkg-dev_1.16.1.2 g++-4.6_4.6.2-9 gcc-4.6_4.6.2-9 libc6-dev_2.13-24 libstdc++6_4.6.2-9 libstdc++6-4.6-dev_4.6.2-9 linux-libc-dev_3.1.8-2
Package versions: apt_0.8.15.9 apt-utils_0.8.15.9 base-files_6.5 base-passwd_3.5.24 bash_4.2-1 binutils_2.22-4 bsdmainutils_8.2.3 bsdutils_1:2.20.1-1.1 build-essential_11.5 bzip2_1.0.6-1 clang_3.0-5 coreutils_8.13-3 cpp_4:4.6.2-4 cpp-4.6_4.6.2-9 dash_0.5.7-2 debconf_1.5.41 debfoster_2.7-1.1 debhelper_8.9.14 debian-archive-keyring_2010.08.28 debianutils_4.1 diffutils_1:3.2-1 dpkg_1.16.1.2 dpkg-dev_1.16.1.2 e2fslibs_1.42-1 e2fsprogs_1.42-1 fakeroot_1.18.2-1 file_5.09-2 findutils_4.4.2-4 g++_4:4.6.2-4 g++-4.6_4.6.2-9 gcc_4:4.6.2-4 gcc-4.6_4.6.2-9 gcc-4.6-base_4.6.2-9 gettext_0.18.1.1-5 gettext-base_0.18.1.1-5 gnupg_1.4.11-3 gpgv_1.4.11-3 grep_2.10-1 groff-base_1.21-6 gzip_1.4-2 hostname_3.09 html2text_1.3.2a-15 initscripts_2.88dsf-18 insserv_1.14.0-2.1 install-info_4.13a.dfsg.1-8 intltool-debian_0.35.0+20060710.1 less_444-1 libacl1_2.2.51-5 libattr1_1:2.4.46-5 libblkid1_2.20.1-1.1 libbz2-1.0_1.0.6-1 libc-bin_2.13-24 libc-dev-bin_2.13-24 libc6_2.13-24 libc6-dev_2.13-24 libclang-common-dev_3.0-5 libclass-isa-perl_0.36-3 libcomerr2_1.42-1 libcroco3_0.6.2-2 libdb5.1_5.1.29-1 libdpkg-perl_1.16.1.2 libffi5_3.0.10-3 libgc1c2_1:7.1-8 libgcc1_1:4.6.2-9 libgdbm3_1.8.3-10 libglib2.0-0_2.30.2-4 libgmp10_2:5.0.2+dfsg-2 libgomp1_4.6.2-9 libgpm-dev_1.20.4-4 libgpm2_1.20.4-4 libgpmg1-dev_1.20.4-4 libice-dev_2:1.0.7-2 libice6_2:1.0.7-2 libllvm3.0_3.0-5 liblzma2_5.1.1alpha+20110809-2 liblzma5_5.1.1alpha+20110809-3 libmagic1_5.09-2 libmount1_2.20.1-1.1 libmpc2_0.9-4 libmpfr4_3.1.0-3 libncurses5_5.9-4 libncurses5-dev_5.9-4 libncursesw5_5.9-4 libpam-modules_1.1.3-6 libpam-modules-bin_1.1.3-6 libpam-runtime_1.1.3-6 libpam0g_1.1.3-6 libpcre3_8.12-4 libpipeline1_1.2.0-5 libpng12-0_1.2.46-4 libpng12-dev_1.2.46-4 libpthread-stubs0_0.3-3 libpthread-stubs0-dev_0.3-3 libquadmath0_4.6.2-9 libreadline6_6.2-8 libselinux1_2.1.0-4 libsepol1_2.1.0-1.2 libslang2_2.2.4-5 libslang2-dev_2.2.4-5 libsm-dev_2:1.2.0-2 libsm6_2:1.2.0-2 libss2_1.42-1 libstdc++6_4.6.2-9 libstdc++6-4.6-dev_4.6.2-9 libswitch-perl_2.16-2 libtimedate-perl_1.2000-1 libtinfo-dev_5.9-4 libtinfo5_5.9-4 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-20 libuuid1_2.20.1-1.1 libx11-6_2:1.4.4-4 libx11-data_2:1.4.4-4 libx11-dev_2:1.4.4-4 libxau-dev_1:1.0.6-4 libxau6_1:1.0.6-4 libxcb1_1.7-4 libxcb1-dev_1.7-4 libxdmcp-dev_1:1.1.0-4 libxdmcp6_1:1.1.0-4 libxml2_2.7.8.dfsg-5.1 libxpm-dev_1:3.5.9-4 libxpm4_1:3.5.9-4 libxt-dev_1:1.1.1-2 libxt6_1:1.1.1-2 linux-libc-dev_3.1.8-2 login_1:4.1.4.2+svn3283-3 lsb-base_3.2-28 make_3.81-8.1 man-db_2.6.0.2-3 mawk_1.3.3-16 mount_2.20.1-1.1 multiarch-support_2.13-24 ncurses-base_5.9-4 ncurses-bin_5.9-4 nvi_1.81.6-8.2 passwd_1:4.1.4.2+svn3283-3 patch_2.6.1-2 perl_5.14.2-6 perl-base_5.14.2-6 perl-modules_5.14.2-6 po-debconf_1.0.16+nmu2 readline-common_6.2-8 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-fte-dummy_0.invalid.0 sed_4.2.1-9 sensible-utils_0.0.6 sysv-rc_2.88dsf-18 sysvinit_2.88dsf-18 sysvinit-utils_2.88dsf-18 tar_1.26-4 tzdata_2011n-2 util-linux_2.20.1-1.1 x11-common_1:7.6+10 x11proto-core-dev_7.0.22-1 x11proto-input-dev_2.1-1 x11proto-kb-dev_1.0.5-2 xorg-sgml-doctools_1:1.10-1 xtrans-dev_1.2.6-2 xz-utils_5.1.1alpha+20110809-3 zlib1g_1:1.2.3.4.dfsg-3 zlib1g-dev_1:1.2.3.4.dfsg-3

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/var/lib/sbuild/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Sun Aug 14 11:40:41 2011 CEST using DSA key ID 28BCB3E3
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./fte_0.50.2b6-1.dsc
dpkg-source: info: extracting fte in fte-0.50.2b6
dpkg-source: info: unpacking fte_0.50.2b6.orig.tar.gz
dpkg-source: info: unpacking fte_0.50.2b6-1.debian.tar.gz

Check disc space
────────────────

Sufficient free space for build

dpkg-buildpackage
─────────────────

dpkg-buildpackage: source package fte
dpkg-buildpackage: source version 0.50.2b6-1
 dpkg-source --before-build fte-0.50.2b6
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
dh_testdir
dh_testroot
rm -f build
/usr/bin/make -C src -f fte-unix.mak clean
make[1]: Entering directory `/build/fte-ncL6Ki/fte-0.50.2b6/src'
rm -f core *.o *.moc .depend xfte vfte nfte sfte  defcfg.h defcfg.cnf \
	cfte fte sfte vfte nfte mfte qfte xfte compkeys tags
make[1]: Leaving directory `/build/fte-ncL6Ki/fte-0.50.2b6/src'
dh_clean
 dpkg-source -b fte-0.50.2b6
dpkg-source: info: using source format `3.0 (quilt)'
dpkg-source: info: building fte using existing ./fte_0.50.2b6.orig.tar.gz
dpkg-source: info: building fte in fte_0.50.2b6-1.debian.tar.gz
dpkg-source: info: building fte in fte_0.50.2b6-1.dsc
 debian/rules build
dh_testdir
/usr/bin/make -C src -f fte-unix.mak
make[1]: Entering directory `/build/fte-ncL6Ki/fte-0.50.2b6/src'
g++ -c cfte.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
cfte.cpp:87:9: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
        l[0] = (char)len;
             ~ ^~~~~~~~~
cfte.cpp:88:9: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
        l[1] = (char)(len >> 8);
             ~ ^~~~~~~~~~~~~~~~
cfte.cpp:109:23: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    unsigned long l = num;
                  ~   ^~~
cfte.cpp:620:73: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    colors = (struct _color *)realloc(colors, sizeof (struct _color) * (colorCount + 1));
                                              ~~~~~~                    ^~~~~~~~~~~~~~
cfte.cpp:831:20: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            return i | CMD_EXT;
            ~~~~~~ ^~~~~~~~~~~
cfte.cpp:841:12: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    return CMacrosCFTE - 1;
    ~~~~~~ ^~~~~~~~~~~~~~~
6 warnings generated.
g++ -c s_files.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_files.cpp:507:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            strlcpy(RelPath, p + dl, RelPathSize);
            ~~~~~~~                  ^~~~~~~~~~~
1 warning generated.
g++ -c s_string.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_string.cpp:52:12: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return p - dest;
    ~~~~~~ ^~~~~~~~
1 warning generated.
g++ -o cfte -g   cfte.o s_files.o s_string.o
./cfte defcfg.fte defcfg.cnf
cfte 0.50.02-cvs
Copyright (c) 1994-1998 Marko Macek
Copyright (c) 2000-2010 Others
Compiling to 'defcfg.cnf'

Done.
perl mkdefcfg.pl <defcfg.cnf >defcfg.h
.........................................................................
g++ -MM -MG -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX commands.cpp c_bind.cpp c_color.cpp c_config.cpp c_desktop.cpp c_hilit.cpp c_history.cpp c_mode.cpp egui.cpp e_block.cpp e_buffer.cpp e_cmds.cpp e_cvslog.cpp e_file.cpp e_fold.cpp e_line.cpp e_loadsave.cpp e_mark.cpp e_print.cpp e_redraw.cpp e_regex.cpp e_search.cpp e_svnlog.cpp e_tags.cpp e_trans.cpp e_undo.cpp fte.cpp gui.cpp g_draw.cpp g_menu.cpp h_ada.cpp h_c.cpp h_catbs.cpp h_fte.cpp h_ipf.cpp h_make.cpp h_msg.cpp h_pascal.cpp h_perl.cpp h_plain.cpp h_rexx.cpp h_sh.cpp h_simple.cpp h_tex.cpp indent.cpp i_ascii.cpp i_choice.cpp i_complete.cpp i_input.cpp i_key.cpp i_modelview.cpp i_oview.cpp i_search.cpp i_view.cpp log.cpp o_buffer.cpp o_buflist.cpp o_cvs.cpp o_cvsbase.cpp o_cvsdiff.cpp o_directory.cpp o_list.cpp o_messages.cpp o_model.cpp o_modemap.cpp o_routine.cpp o_svn.cpp o_svnbase.cpp o_svndiff.cpp stl_string.cpp s_direct.cpp s_files.cpp s_string.cpp s_util.cpp view.cpp cfte.cpp s_files.cpp s_string.cpp e_unix.cpp memicmp.cpp clip_no.cpp con_ncurses.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp e_unix.cpp memicmp.cpp clip_no.cpp con_slang.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp e_unix.cpp memicmp.cpp clip_no.cpp con_linux.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp e_unix.cpp memicmp.cpp clip_x11.cpp con_i18n.cpp con_x11.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp 1>.depend
g++ -c commands.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c c_bind.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_bind.cpp:101:18: warning: implicit conversion changes signedness: 'const char' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
        ks.Key = *Key;
               ~ ^~~~
c_bind.cpp:107:26: warning: implicit conversion changes signedness: 'int' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
                ks.Key = toupper(ks.Key);
                       ~ ^~~~~~~~~~~~~~~
c_bind.cpp:107:37: warning: implicit conversion loses integer precision: 'TKeyCode' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                ks.Key = toupper(ks.Key);
                         ~~~~~~~ ~~~^~~
c_bind.cpp:422:18: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
    long flags = aKey & ~ 0xFFFF;
         ~~~~~   ^~~~~~~~~~~~~~~
c_bind.cpp:422:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    long flags = aKey & ~ 0xFFFF;
                 ~~~~   ^~~~~~~~
c_bind.cpp:431:30: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            else if (isascii(key))
                     ~~~~~~~ ^~~
c_bind.cpp:432:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                key = toupper(key);
                      ~~~~~~~ ^~~
c_bind.cpp:443:25: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            if (isascii(key))
                ~~~~~~~ ^~~
c_bind.cpp:444:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                key = toupper(key);
                      ~~~~~~~ ^~~
c_bind.cpp:446:12: warning: implicit conversion changes signedness: 'long' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
    aKey = key | flags;
         ~ ^~~~~~~~~~~
c_bind.cpp:637:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    Macros = (ExMacro *) realloc(Macros, sizeof(ExMacro) * (1 + CMacros));
                                         ~~~~~~             ^~~~~~~~~~~
c_bind.cpp:656:55: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        if (view->GetStrVar(Macros[Macro].cmds[Pos].u.num, str, maxlen) == 0)
            ~~~~            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
c_bind.cpp:684:44: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        *value = Macros[Macro].cmds[Pos].u.num;
               ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
c_bind.cpp:687:55: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        if (view->GetIntVar(Macros[Macro].cmds[Pos].u.num, value) == 0)
            ~~~~            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
c_bind.cpp:701:12: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    return i % maxim;
    ~~~~~~ ^~~~~~~~~
c_bind.cpp:701:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    return i % maxim;
           ~   ^~~~~
16 warnings generated.
g++ -c c_color.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c c_config.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_config.cpp:158:34: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        g->name = (char *)malloc((s-string) + 1);
                          ~~~~~~ ^~~~~~~~~~~~~~
c_config.cpp:165:35: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        strncat(g->name, string, (s-string));
        ~~~~~~~                   ^~~~~~~~
c_config.cpp:405:13: warning: implicit conversion changes signedness: 'const char' to 'unsigned char' [-Wsign-conversion]
        c = *cp.c++;
          ~ ^~~~~~~
c_config.cpp:407:15: warning: implicit conversion loses integer precision: 'int' to 'unsigned short' [-Wconversion]
        len = (l[1] << 8) + l[0];
            ~ ^~~~~~~~~~~~~~~~~~
c_config.cpp:439:15: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
        num = num | (~0xFFFFFFFFUL);
            ~ ^~~~~~~~~~~~~~~~~~~~~
c_config.cpp:439:15: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
        num = num | (~0xFFFFFFFFUL);
              ^~~
c_config.cpp:481:32: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~ ^~~
c_config.cpp:481:37: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~      ^~~
c_config.cpp:481:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~           ^~~
c_config.cpp:481:47: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~                ^~~
c_config.cpp:494:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddString(Cmd, s) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~ ^~~
c_config.cpp:502:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddNumber(Cmd, num) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~ ^~~
c_config.cpp:510:33: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddVariable(Cmd, num) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~~~ ^~~
c_config.cpp:510:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddVariable(Cmd, num) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~~~      ^~~
c_config.cpp:514:27: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            if (AddConcat(Cmd) == 0) ENDFUNCRC(-1);
                ~~~~~~~~~ ^~~
c_config.cpp:517:23: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            ENDFUNCRC(Cmd);
            ~~~~~~~~~~^~~~
./log.h:277:30: note: expanded from:
#define ENDFUNCRC(rc) return rc
                      ~~~~~~ ^
c_config.cpp:630:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (Colorize->SetColor(cidx, svalue) == 0)
                    ~~~~~~~~           ^~~~
c_config.cpp:721:49: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetEventString(Map, what, val) != 0) return -1;
                            ~~~~~~~~~~~~~~      ^~~~
c_config.cpp:803:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                newState.color = color;
                               ~ ^~~~~
c_config.cpp:836:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                newTrans.nextState = nextState;
                                   ~ ^~~~~~~~~
c_config.cpp:837:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                newTrans.color = color;
                               ~ ^~~~~
c_config.cpp:851:41: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    newTrans.matchLen = strlen(match);
                                      ~ ^~~~~~~~~~~~~
c_config.cpp:892:66: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Colorize->hm->LastState()->nextKwdMatchedState = nextKwdMatchedState;
                                                               ~ ^~~~~~~~~~~~~~~~~~~
c_config.cpp:893:69: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Colorize->hm->LastState()->nextKwdNotMatchedState = nextKwdNotMatchedState;
                                                                  ~ ^~~~~~~~~~~~~~~~~~~~~~
c_config.cpp:894:65: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Colorize->hm->LastState()->nextKwdNoCharState = nextKwdNoCharState;
                                                              ~ ^~~~~~~~~~~~~~~~~~
c_config.cpp:931:31: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                        Col = ColFg | (ColBg << 4);
                            ~ ^~~~~~~~~~~~~~~~~~~~
c_config.cpp:991:49: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetModeString(Mode, what, val) != 0) return -1;
                            ~~~~~~~~~~~~~       ^~~~
c_config.cpp:999:49: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetModeNumber(Mode, what, num) != 0) return -1;
                            ~~~~~~~~~~~~~       ^~~~
c_config.cpp:999:55: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetModeNumber(Mode, what, num) != 0) return -1;
                            ~~~~~~~~~~~~~             ^~~
c_config.cpp:1040:32: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCRegexp(file, line, msg, regexp) == 0) return -1;
                    ~~~~~~~~~~ ^~~~
c_config.cpp:1040:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCRegexp(file, line, msg, regexp) == 0) return -1;
                    ~~~~~~~~~~       ^~~~
c_config.cpp:1040:44: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCRegexp(file, line, msg, regexp) == 0) return -1;
                    ~~~~~~~~~~             ^~~
c_config.cpp:1087:45: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetGlobalNumber(what, num) != 0) return -1;
                            ~~~~~~~~~~~~~~~ ^~~~
c_config.cpp:1087:51: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetGlobalNumber(what, num) != 0) return -1;
                            ~~~~~~~~~~~~~~~       ^~~
c_config.cpp:1279:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    ln = (l[3] << 24) + (l[2] << 16) + (l[1] << 8) + l[0];
       ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
c_config.cpp:1288:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    ln = (l[3] << 24) + (l[2] << 16) + (l[1] << 8) + l[0];
       ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c_config.cpp:10:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
37 warnings generated.
g++ -c c_desktop.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from c_desktop.cpp:10:
In file included from ./c_desktop.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c c_hilit.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_hilit.cpp:293:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    state = (HState *)realloc(state, (stateCount + 1) * sizeof(HState) );
                                     ~^~~~~~~~~~~~~~
c_hilit.cpp:302:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    trans = (HTrans *)realloc(trans, (transCount + 1) * sizeof(HTrans) );
                                     ~^~~~~~~~~~~~~~
In file included from c_hilit.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from c_hilit.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<fte::string>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
c_hilit.cpp:108:14: note: in instantiation of member function 'fte::vector<fte::string>::push_back' requested here
    WordList.push_back(Word);
             ^
4 warnings generated.
g++ -c c_history.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_history.cpp:99:18: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    for (int i = inputHistory.Count - 1; i >= 0; i--)
             ~   ^~~~~~~~~~~~~~~~~~~~~~
c_history.cpp:129:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            r = strtol(p, &e, 10);
              ~ ^~~~~~~~~~~~~~~~~
c_history.cpp:136:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            c = strtol(p = e, &e, 10);
              ~ ^~~~~~~~~~~~~~~~~~~~~
c_history.cpp:168:21: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                r = strtol(p, &e, 10);
                  ~ ^~~~~~~~~~~~~~~~~
c_history.cpp:175:21: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                c = strtol(p = e, &e, 10);
                  ~ ^~~~~~~~~~~~~~~~~~~~~
c_history.cpp:186:77: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                nb=(HBookmark **)realloc (last->Books,sizeof (HBookmark *)*(last->BookCount+1));
                                                      ~~~~~~                ^~~~~~~~~~~~~~~~~
c_history.cpp:202:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            i = strtol(p, &e, 10);
              ~ ^~~~~~~~~~~~~~~~~
c_history.cpp:261:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    NH = (FPosHistory **)realloc((void *)FPHistory, N * sizeof(FPosHistory *));
                                                    ^
c_history.cpp:274:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                (FPHistoryCount - L) * sizeof(FPosHistory *));
                ~^~~~~~~~~~~~~~~~~~
c_history.cpp:329:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(inputHistory.Line + 1, inputHistory.Line, i * sizeof(char *));
                                                      ^
c_history.cpp:330:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(inputHistory.Id + 1, inputHistory.Id, i * sizeof(int *));
                                                  ^
c_history.cpp:353:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                strncpy(String, inputHistory.Line[i], len);
                ~~~~~~~                               ^~~
c_history.cpp:436:80: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                FPHistory[M]->Books=(HBookmark **)malloc (sizeof (HBookmark *)*j);
                                                          ~~~~~~               ^
In file included from c_history.cpp:11:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
14 warnings generated.
g++ -c c_mode.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_mode.cpp:104:10: warning: implicit conversion loses integer precision: 'ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
        int l = read(fd, buf, sizeof(buf) - 1);
            ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
c_mode.cpp:113:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (RxExec(m->MatchLineRx, buf, i, buf, &RM) == 1)
                    ~~~~~~                      ^
2 warnings generated.
g++ -c egui.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
egui.cpp:1041:31: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                c = Menus[mc].Count;
                  ~ ~~~~~~~~~~^~~~~
In file included from egui.cpp:10:
In file included from ./egui.h:13:
In file included from ./gui.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c e_block.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_block.cpp:155:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, -1, 0, RLine(L)) == 0) return 0;
                ~~~~~~~~                     ^~
e_block.cpp:163:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, E.Col - B.Col, B.Col, RLine(L)) == 0) return 0;
                ~~~~~~~~                     ^~~~~~~~~~~~~
e_block.cpp:164:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->PadLine(SL, E.Col - B.Col) == 0) return 0;
                ~~~~~~~~              ^~~~~~~~~~~~~
e_block.cpp:172:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, E.Col - B.Col, B.Col, RLine(B.Row)) == 0) return 0;
                ~~~~~~~~                     ^~~~~~~~~~~~~
e_block.cpp:175:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, -1, B.Col, RLine(B.Row)) == 0) return 0;
                ~~~~~~~~                     ^~
e_block.cpp:179:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (SSBuffer->InsLineText(SL, 0, -1, 0, RLine(L)) == 0) return 0;
                    ~~~~~~~~                     ^~
e_block.cpp:183:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, E.Col, 0, RLine(E.Row)) == 0) return 0;
                ~~~~~~~~                     ~~^~~
e_block.cpp:232:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsLineText(BL, 0, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                ~~~~~~~~~~~        ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:244:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsLineText(BL, B.Col, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                ~~~~~~~~~~~            ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:258:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (InsLineText(B.Row, B.Col, SSBuffer->LineLen(0), 0, SSBuffer->RLine(0)) == 0) return 0;
            ~~~~~~~~~~~               ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:265:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (InsLineText(BL, 0, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                    ~~~~~~~~~~~        ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:269:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsLineText(BL, 0, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                ~~~~~~~~~~~        ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:295:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Col) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_block.cpp:296:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Row) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_block.cpp:327:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(L, B.Col, E.Col - B.Col) == 0) return 0;
                ~~~~~~~           ^~~~~~~~~~~~~
e_block.cpp:343:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(B.Row, B.Col, E.Col - B.Col) == 0) return 0;
                ~~~~~~~               ^~~~~~~~~~~~~
e_block.cpp:358:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(E.Row, 0, E.Col) == 0) return 0;
                ~~~~~~~           ~~^~~
e_block.cpp:361:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(B.Row, B.Col, -1) == 0) return 0;
                ~~~~~~~               ^~
e_block.cpp:677:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_block.cpp:692:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_block.cpp:695:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z  = LL->Count;
                   ~ ~~~~^~~~~
e_block.cpp:705:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    Z = LL->Count;
                      ~ ~~~~^~~~~
e_block.cpp:707:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if ((int)fwrite(LL->Chars + A, 1, Z - A, fp) != Z - A) {
                             ~~~~~~                   ^~~~~
e_block.cpp:797:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lA = LA->Count;
            ~~   ~~~~^~~~~
e_block.cpp:798:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lB = LB->Count;
            ~~   ~~~~^~~~~
e_block.cpp:801:59: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memcmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                        ~ ^~
e_block.cpp:801:64: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memcmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                        ~      ^~
e_block.cpp:803:60: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memicmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                         ~ ^~
e_block.cpp:803:65: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memicmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                         ~      ^~
e_block.cpp:811:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lA = LA->Count;
            ~~   ~~~~^~~~~
e_block.cpp:812:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lB = LB->Count;
            ~~   ~~~~^~~~~
e_block.cpp:832:72: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memcmp(LA->Chars+ PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                     ~ ^~
e_block.cpp:832:77: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memcmp(LA->Chars+ PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                     ~      ^~
e_block.cpp:834:74: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memicmp(LA->Chars + PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                       ~ ^~
e_block.cpp:834:79: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memicmp(LA->Chars + PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                       ~      ^~
e_block.cpp:879:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    SortRows = (int *)malloc((SortMaxRow - SortMinRow + 1) * sizeof(int));
                             ~^~~~~~~~~~~~~~~~~~~~~~~~~~~
e_block.cpp:887:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(SortRows, SortMaxRow - SortMinRow + 1, sizeof(int), SortProc);
    ~~~~~           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
e_block.cpp:928:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (InsChars(i, O, C - O, 0) != 1)
                    ~~~~~~~~       ^~~~~
e_block.cpp:963:44: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (DelChars(i, O - N, N) != 1)
                        ~~~~~~~~           ^
e_block.cpp:990:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (DelChars(i, O1, N) != 1)
                    ~~~~~~~~        ^
In file included from e_block.cpp:10:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
41 warnings generated.
g++ -c e_buffer.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_buffer.cpp:487:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Col) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_buffer.cpp:488:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Row) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_buffer.cpp:593:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    return ScreenPos(L, L->Count);
           ~~~~~~~~~    ~~~^~~~~
e_buffer.cpp:598:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    return RLine(Row)->Count;
    ~~~~~~ ~~~~~~~~~~~~^~~~~
e_buffer.cpp:628:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:651:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(PELine) * (RCount - RGap));
                ~~~~~~            ^~~~~~~~~~~~~
e_buffer.cpp:665:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(VV[0]) * (VCount - VGap));
                ~~~~~~           ^~~~~~~~~~~~~
e_buffer.cpp:698:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:713:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(PELine) * (RCount - RGap));
                ~~~~~~            ^~~~~~~~~~~~~
e_buffer.cpp:727:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(VV[0]) * (VCount - VGap));
                ~~~~~~           ^~~~~~~~~~~~~
e_buffer.cpp:752:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (Ofs + ACount >= L->Count)
        ^~~
e_buffer.cpp:753:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        ACount = L->Count - Ofs;
                 ~          ^~~
e_buffer.cpp:762:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:763:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:768:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (L->Count > Ofs + ACount)
                   ^~~
e_buffer.cpp:769:69: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memmove(L->Chars + Ofs, L->Chars + Ofs + ACount, L->Count - Ofs - ACount);
                                                         ~          ^~~
e_buffer.cpp:794:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:795:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:802:69: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memmove(L->Chars + Ofs + ACount, L->Chars + Ofs, L->Count - Ofs);
                                                         ~          ^~~
e_buffer.cpp:830:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (InsChars(Row, Ofs, TPos - Pos, 0) != 1)
            ~~~~~~~~           ^~~~~~~~~~
e_buffer.cpp:852:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:853:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:855:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:856:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:878:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (ACount == -1 || ACount + Col > L)
                        ~~~~~~   ^~~
e_buffer.cpp:879:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        ACount = L - Col;
               ~ ^~~~~~~
e_buffer.cpp:882:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    if (UnTabPoint(Row, Col + ACount) == 0)
        ~~~~~~~~~~      ^~~~~~~~~~~~
e_buffer.cpp:882:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (UnTabPoint(Row, Col + ACount) == 0)
                        ^~~
e_buffer.cpp:885:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    C = CharOffset(RLine(Row), Col + ACount);
        ~~~~~~~~~~             ^~~~~~~~~~~~
e_buffer.cpp:885:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    C = CharOffset(RLine(Row), Col + ACount);
                               ^~~
e_buffer.cpp:887:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelChars(Row, B, C - B) == 0) return 0;
            ~~~~~~~~         ^~~~~
e_buffer.cpp:888:57: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (DoMark) UpdateMarker(umDelete, Row, Col, 0, ACount);
                    ~~~~~~~~~~~~                        ^~~~~~
e_buffer.cpp:902:53: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    if (DoMark) UpdateMarker(umInsert, Row, Col, 0, ACount);
                ~~~~~~~~~~~~                        ^~~~~~
e_buffer.cpp:905:39: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (InsChars(Row, RLine(Row)->Count, Col - L, 0) == 0)
            ~~~~~~~~      ~~~~~~~~~~~~^~~~~
e_buffer.cpp:905:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (InsChars(Row, RLine(Row)->Count, Col - L, 0) == 0)
            ~~~~~~~~                         ^~~~~~~
e_buffer.cpp:918:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    L = LineLen(Row);
      ~ ^~~~~~~~~~~~
e_buffer.cpp:920:39: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (InsChars(Row, RLine(Row)->Count, Length - L, 0) == 0)
            ~~~~~~~~      ~~~~~~~~~~~~^~~~~
e_buffer.cpp:933:31: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    L = ScreenPos(Line, Line->Count);
        ~~~~~~~~~       ~~~~~~^~~~~
e_buffer.cpp:935:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (ACount == -1) ACount = L - LCol;
                             ~ ^~~~~~~~
e_buffer.cpp:936:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (ACount + LCol > L) ACount = L - LCol;
        ~~~~~~   ^~~~
e_buffer.cpp:936:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (ACount + LCol > L) ACount = L - LCol;
                                  ~ ^~~~~~~~
e_buffer.cpp:945:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsText(Row, Col, TPos - LCol, 0) == 0)
                ~~~~~~~           ^~~~~~~~~~~
e_buffer.cpp:948:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            ACount -= TPos - LCol;
                   ~~ ^~~~~~~~~~~
e_buffer.cpp:953:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    C = Ofs = CharOffset(Line, LCol + ACount);
              ~~~~~~~~~~       ^~~~~~~~~~~~~
e_buffer.cpp:953:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    C = Ofs = CharOffset(Line, LCol + ACount);
                               ^~~~
e_buffer.cpp:956:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (Pos < LCol + ACount) {
                  ^~~~
e_buffer.cpp:957:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (InsText(Row, Col, LCol + ACount - Pos, 0) == 0)
                                  ^~~~
e_buffer.cpp:957:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (InsText(Row, Col, LCol + ACount - Pos, 0) == 0)
                                  ~~~~            ^~~
e_buffer.cpp:964:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (InsText(Row, Col, C, Line->Chars + B) == 0) return 0;
        ~~~~~~~           ^
e_buffer.cpp:992:23: warning: implicit conversion changes signedness: 'short' to 'hlState' (aka 'unsigned short') [-Wsign-conversion]
        RLine(Row)->StateE = short((Row > 0) ? RLine(Row - 1)->StateE : 0);
                           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_buffer.cpp:1003:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (InsText(Row + 1, 0, RLine(Row)->Count - P, RLine(Row)->Chars + P, 0) == 0) return 0;
                                    ~~~~~               ^
e_buffer.cpp:1004:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Row, Col, L - Col, 0) == 0) return 0;
                ~~~~~~~           ^~~~~~~
In file included from e_buffer.cpp:10:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
53 warnings generated.
g++ -c e_cmds.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_cmds.cpp:62:34: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (P > L->Count) P = L->Count;
                            ~ ~~~^~~~~
e_cmds.cpp:137:34: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (P > L->Count) P = L->Count;
                            ~ ~~~^~~~~
e_cmds.cpp:184:34: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (P > L->Count) P = L->Count;
                            ~ ~~~^~~~~
e_cmds.cpp:491:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, 0, LineLen())) return 1;
            ~~~~~~~       ^~~~~~~~~
e_cmds.cpp:531:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, CP.Col, C - CP.Col) == 0) return 0;
            ~~~~~~~            ^~~~~~~~~~
e_cmds.cpp:551:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, C, CP.Col - C) == 0) return 0;
            ~~~~~~~       ^~~~~~~~~~
e_cmds.cpp:573:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, CP.Col, C - CP.Col) == 0) return 0;
            ~~~~~~~            ^~~~~~~~~~
e_cmds.cpp:597:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, C, CP.Col - C) == 0) return 0;
            ~~~~~~~       ^~~~~~~~~~
e_cmds.cpp:605:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (DelText(Y, 0, CP.Col) == 0) return 0;
        ~~~~~~~       ~~~^~~
e_cmds.cpp:612:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (DelText(Y, CP.Col, LineLen() - CP.Col)) return 1;
        ~~~~~~~            ^~~~~~~~~~~~~~~~~~
e_cmds.cpp:663:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Y, C1, C - C1) == 0) return 0;
                ~~~~~~~        ^~~~~~
e_cmds.cpp:671:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Y, C1, C - C1) == 0) return 0;
                ~~~~~~~        ^~~~~~
e_cmds.cpp:701:31: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Y, C, C1 - C) == 0) return 0;
                ~~~~~~~       ^~~~~~
e_cmds.cpp:843:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                memcpy(Str, L->Chars + P, Len);
                ~~~~~~                    ^~~
e_cmds.cpp:850:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (DelText(R, C, C1 - C) == 0)
                            ~~~~~~~       ^~~~~~
e_cmds.cpp:854:35: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                            Len = strlen(ab->Replace);
                                ~ ^~~~~~~~~~~~~~~~~~~
e_cmds.cpp:855:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                            if (InsText(R, C, Len, ab->Replace) == 0)
                                ~~~~~~~       ^~~
e_cmds.cpp:946:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(VToR(CP.Row), CP.Col, P1 - P) == 0) return 0;
                ~~~~~~~                       ^~~~~~
e_cmds.cpp:948:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (InsText(VToR(CP.Row), CP.Col, P1 - P, 0) == 0) return 0;
        ~~~~~~~                       ^~~~~~
e_cmds.cpp:979:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    CC = l->Count;
       ~ ~~~^~~~~
e_cmds.cpp:998:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Row, 0, I) == 0) return 0;
                ~~~~~~~         ^
e_cmds.cpp:1011:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (InsText(Row, C, Indent, 0) == 0) return 0;
                    ~~~~~~~         ^~~~~~
e_cmds.cpp:1083:60: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                if ((ScreenPos(RLine(L + 1), RLine(L + 1)->Count) == 0) ||
                     ~~~~~~~~~               ~~~~~~~~~~~~~~^~~~~
e_cmds.cpp:1103:40: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    firstwordend = lp->Count;
                                 ~ ~~~~^~~~~
e_cmds.cpp:1199:15: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        Len = RLine(L)->Count - P;
            ~ ^~~~~~~~~~~~~~~~~~~
e_cmds.cpp:1199:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Len = RLine(L)->Count - P;
              ~~~~~             ^
e_cmds.cpp:1201:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            return InsertString(RLine(L)->Chars + P, Len);
                   ~~~~~~~~~~~~                      ^~~
e_cmds.cpp:1218:12: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    P = L->Count;
      ~ ~~~^~~~~
e_cmds.cpp:1222:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    E = ScreenPos(L, L->Count);
        ~~~~~~~~~    ~~~^~~~~
e_cmds.cpp:1224:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Row, X, E - X, 1) == 0) return 0;
            ~~~~~~~         ^~~~~
In file included from e_cmds.cpp:10:
In file included from ./egui.h:13:
In file included from ./gui.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
31 warnings generated.
g++ -c e_cvslog.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_cvslog.cpp:16:
./o_cvs.h:34:22: warning: 'ECvs::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
e_cvslog.cpp:112:15: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int i=strlen (title);
            ~ ^~~~~~~~~~~~~~
e_cvslog.cpp:114:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        InsText (p,5,i, title);
        ~~~~~~~      ^
e_cvslog.cpp:124:33: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                InsText (p++,11,len[i], list+position[i]);
                ~~~~~~~         ^~~~~~
In file included from e_cvslog.cpp:11:
In file included from ./e_cvslog.h:14:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c e_file.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_file.cpp:10:
In file included from ./i_modelview.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c e_fold.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_fold.cpp:61:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(int) * (VCount - VGap));
                ~~~~~~         ^~~~~~~~~~~~~
e_fold.cpp:99:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(int) * (VCount - VGap));
                ~~~~~~         ^~~~~~~~~~~~~
e_fold.cpp:184:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:191:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    FF = (EFold *) realloc((void *)FF, sizeof(EFold) * ((1 + FCount) | 7));
                                       ~~~~~~           ^~~~~~~~~~~~~~~~
e_fold.cpp:193:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(FF + n + 1, FF + n, sizeof(EFold) * (FCount - n));
                                ~~~~~~           ^~~~~~~~~~
e_fold.cpp:269:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:274:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(FF + f, FF + f + 1, sizeof(EFold) * (FCount - f - 1));
                                ~~~~~~           ^~~~~~~~~~~~~~
e_fold.cpp:276:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    FF = (EFold *) realloc((void *)FF, sizeof(EFold) * (FCount | 7));
                                       ~~~~~~           ^~~~~~~~~~
e_fold.cpp:303:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:327:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:352:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:435:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
In file included from e_fold.cpp:11:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
13 warnings generated.
g++ -c e_line.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_line.cpp:53:18: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int Len = L->Count;
        ~~~   ~~~^~~~~
e_line.cpp:65:16: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Pos += Ofs - L->Count;
               ^~~
e_line.cpp:88:18: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int Len = L->Count;
        ~~~   ~~~^~~~~
e_line.cpp:110:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    L = (PELine *) realloc(LL, sizeof(PELine) * (ACount + 1));
                               ~~~~~~            ^~~~~~~~~~
e_line.cpp:133:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(PELine) * (RPos - RGap));
                ~~~~~~            ^~~~~~~~~~~
e_line.cpp:140:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    sizeof(PELine) * (RGap - RPos));
                    ~~~~~~            ^~~~~~~~~~~
e_line.cpp:148:49: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    int *V = (int *) realloc(VV, sizeof(int) * (ACount + 1));
                                 ~~~~~~         ^~~~~~~~~~
e_line.cpp:169:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    sizeof(VV[0]) * (VPos - VGap));
                    ~~~~~~           ^~~~~~~~~~~
e_line.cpp:176:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    sizeof(VV[0]) * (VGap - VPos));
                    ~~~~~~           ^~~~~~~~~~~
In file included from e_line.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
10 warnings generated.
g++ -c e_loadsave.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_loadsave.cpp:124:54: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                e = (char *)memchr((void *)p, lchar, FileBuffer - p + len);
                            ~~~~~~                   ^~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:143:44: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            m = (char *)realloc((void *)m, (lm + partLen) + CHAR_TRESHOLD);
                        ~~~~~~~            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:146:31: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            memcpy(m + lm, p, partLen);
            ~~~~~~            ^~~~~~~
e_loadsave.cpp:148:25: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'unsigned long' [-Wsign-conversion]
            numChars += partLen;
                     ~~ ^~~~~~~
e_loadsave.cpp:169:51: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (!(LL[RCount++] = new ELine(m, lm)))
                                     ~~~          ^~
e_loadsave.cpp:192:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if ((LL[RCount++] = new ELine(m, lm)) == 0)
                            ~~~          ^~
e_loadsave.cpp:215:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(VV, 0, VCount * sizeof(int));
                  ^~~~~~
e_loadsave.cpp:234:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        else len_start = strlen(BFS(this, BFS_CommentStart));
                       ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:236:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        else len_end = strlen(BFS(this, BFS_CommentEnd));
                     ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:265:31: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        pos = LL[l]->Count - len_end;
                            ~ ^~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:265:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        pos = LL[l]->Count - len_end;
                              ~~             ^~~~~~~
e_loadsave.cpp:267:99: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (len_end != 0 && memcmp(LL[l]->Chars + pos, BFS(this, BFS_CommentEnd), len_end) != 0) continue;
                                            ~~~~~~                                                ^~~~~~~
e_loadsave.cpp:284:111: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (pos < 0 || (len_start != 0 && memcmp(LL[l]->Chars + pos, BFS(this, BFS_CommentStart), len_start) != 0)) continue;
                                                      ~~~~~~                                                  ^~~~~~~~~
e_loadsave.cpp:286:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    if (LL[l]->Count - pos == len_start + len_end) continue;
                        ~~             ^~~
e_loadsave.cpp:344:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                memcpy(buf, LL[l]->Chars + pos, i); buf[i] = 0;
                                ~~~~~~                          ^
e_loadsave.cpp:365:95: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (len_end != 0 && memcmp(LL[l]->Chars + pos, BFS(this, BFS_CommentEnd), len_end) != 0) continue;
                                        ~~~~~~                                                ^~~~~~~
e_loadsave.cpp:378:39: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
                        FF[f].level = (char)(level & 0xFF);
                                    ~ ^~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:386:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            LL[l]->Count - pos);
                            ~~             ^~~
e_loadsave.cpp:387:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    LL[l]->Count -= pos - startpos;
                                 ~~ ^~~~~~~~~~~~~~
e_loadsave.cpp:495:50: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    if (BFS(this, BFS_CommentStart)) len_start = strlen(BFS(this, BFS_CommentStart));
                                               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:496:46: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    if (BFS(this, BFS_CommentEnd)) len_end = strlen(BFS(this, BFS_CommentEnd));
                                           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:505:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            foldlen = sprintf(fold,
                    ~ ^~~~~~~~~~~~~
e_loadsave.cpp:520:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                blen += sprintf(book + blen, "%04x%02x%s", eb->GetPoint().Col, (int)l, eb->GetName());
                     ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:523:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                blen += sprintf(book + blen, "x%04xb", blen);
                     ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from e_loadsave.cpp:10:
In file included from ./e_cvslog.h:14:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
25 warnings generated.
g++ -c e_mark.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
e_mark.cpp:78:29: note: in instantiation of member function 'fte::vector<EMark *>::size' requested here
    size_t L = 0, R = Marks.size();
                            ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:204:22: warning: implicit conversion changes signedness: 'long' to 'const size_type' (aka 'const unsigned long') [-Wsign-conversion]
        const size_type n = pos - m_begin;
                        ~   ^~~~~~~~~~~~~
e_mark.cpp:92:11: note: in instantiation of member function 'fte::vector<EMark *>::insert' requested here
    Marks.insert(Marks.begin() + L, m);
          ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:310:21: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type isz = to - from;
              ~~~   ^~~~~~~~~
./stl_fte.h:205:2: note: in instantiation of member function 'fte::vector<EMark *>::insert' requested here
        insert(pos, &t, &t + 1);
        ^
e_mark.cpp:92:11: note: in instantiation of member function 'fte::vector<EMark *>::insert' requested here
    Marks.insert(Marks.begin() + L, m);
          ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:332:19: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type n = pos - m_begin;
              ~   ^~~~~~~~~~~~~
5 warnings generated.
g++ -c e_print.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_print.cpp:51:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_print.cpp:66:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_print.cpp:69:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_print.cpp:79:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    Z = LL->Count;
                      ~ ~~~~^~~~~
e_print.cpp:81:56: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if ((int)(fwrite(LL->Chars + A, 1, Z - A, fp)) != Z - A) {
                              ~~~~~~                   ^~~~~
e_print.cpp:153:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                ByteCount += BChars;
                          ~~ ^~~~~~
e_print.cpp:155:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if ((int)(fwrite(FileBuffer, 1, BChars, fp)) != BChars) goto fail;
                          ~~~~~~                ^~~~~~
e_print.cpp:175:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        ByteCount += BChars;
                  ~~ ^~~~~~
e_print.cpp:177:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if ((int)(fwrite(FileBuffer, 1, BChars, fp)) != BChars) goto fail;
                  ~~~~~~                ^~~~~~
In file included from e_print.cpp:10:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
10 warnings generated.
g++ -c e_redraw.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_redraw.cpp:29:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        *StateMap = (hsState *) malloc(*StateLen);
                                ~~~~~~ ^~~~~~~~~
e_redraw.cpp:152:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, W, ' ', hcPlain_Background, W);
    ~~~~~~~~                                   ^
e_redraw.cpp:202:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveAttr(B, 0, W, foldColor, W);
                    ~~~~~~~~                     ^
e_redraw.cpp:239:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveBgAttr(B, StartPos, W, hcPlain_Selected, EndPos - StartPos);
                    ~~~~~~~~~~                                   ^~~~~~~~~~~~~~~~~
e_redraw.cpp:241:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveAttr(B, StartPos, W, hcPlain_Selected, EndPos - StartPos);
                    ~~~~~~~~                                   ^~~~~~~~~~~~~~~~~
e_redraw.cpp:252:63: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveBgAttr(B, 0, W, hcPlain_Bookmark, W);
                        ~~~~~~~~~~                            ^
e_redraw.cpp:254:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveAttr(B, 0, W, hcPlain_Bookmark, W);
                        ~~~~~~~~                            ^
e_redraw.cpp:270:73: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, W, ConGetDrawChar(DCH_END), hcPlain_Markers, W);
            ~~~~~~~~                                                    ^
e_redraw.cpp:417:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveChar(B, 0, W->Cols, ' ', SColor, W->Cols);
        ~~~~~~~~                             ~~~^~~~
e_redraw.cpp:430:48: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int NumChars = RLine(ActLine)->Count;
                    ~~~~~~~~   ~~~~~~~~~~~~~~~~^~~~~
e_redraw.cpp:434:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int lf = strlen(fName);
                    ~~   ^~~~~~~~~~~~~
e_redraw.cpp:440:29: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
                    CurCh = VLine(CurLine)->Chars[CurPos];
                          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_redraw.cpp:485:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int l = strlen(s);
                    ~   ^~~~~~~~~
e_redraw.cpp:487:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int fl = strlen(FileName);
                    ~~   ^~~~~~~~~~~~~~~~
e_redraw.cpp:490:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveStr(B, 0, W->Cols, s, SColor, W->Cols);
                ~~~~~~~                           ~~~^~~~
e_redraw.cpp:492:28: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                MoveStr(B, W->Cols - strlen(num), W->Cols, num, SColor, W->Cols);
                ~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~
e_redraw.cpp:492:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MoveStr(B, W->Cols - strlen(num), W->Cols, num, SColor, W->Cols);
                           ~~~^~~~
e_redraw.cpp:492:76: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveStr(B, W->Cols - strlen(num), W->Cols, num, SColor, W->Cols);
                ~~~~~~~                                                 ~~~^~~~
e_redraw.cpp:497:75: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveStr(B, l, W->Cols, FileName + fl - fw, SColor, W->Cols);
                    ~~~~~~~                                            ~~~^~~~
e_redraw.cpp:499:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveStr(B, l, W->Cols, FileName, SColor, W->Cols);
                    ~~~~~~~                                  ~~~^~~~
e_redraw.cpp:502:58: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, W->Cols, V->CurMsg, SColor, W->Cols);
            ~~~~~~~                                   ~~~^~~~
In file included from e_redraw.cpp:10:
In file included from ./c_bind.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
22 warnings generated.
g++ -c e_regex.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_regex.cpp:77:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:81:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:85:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:96:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 7) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:100:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 7) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:104:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 7) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:115:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:119:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:154:22: warning: implicit conversion changes signedness: 'const char' to 'unsigned char' [-Wsign-conversion]
        switch (Ch = *((*Regexp)++)) {
                   ~ ^~~~~~~~~~~~~~
e_regex.cpp:166:26: warning: implicit conversion changes signedness: 'const char' to 'unsigned char' [-Wsign-conversion]
            switch (Ch = *((*Regexp)++)) {
                       ~ ^~~~~~~~~~~~~~
e_regex.cpp:181:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                      N = toupper(**Regexp) - 48; if (N > 9) return 0;
                        ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:185:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                      N = toupper(**Regexp) - 48; if (N > 9) return 0;
                        ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:189:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                      N = toupper(**Regexp) - 48; if (N > 9) return 0;
                        ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:200:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 7) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:204:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 7) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:208:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 7) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:219:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:223:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:246:33: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (isalnum(xx)) {
                        ~~~~~~~ ^~
e_regex.cpp:254:34: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (!isalnum(xx)) {
                         ~~~~~~~ ^~
e_regex.cpp:262:33: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (isdigit(xx)) {
                        ~~~~~~~ ^~
e_regex.cpp:270:34: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (!isdigit(xx)) {
                         ~~~~~~~ ^~
e_regex.cpp:657:46: warning: implicit conversion changes signedness: 'short' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (memcmp(rex, n->fChar, n->fLen) != 0) return 0;
                    ~~~~~~                ~~~^~~~
e_regex.cpp:772:13: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    flags = RxOpt;
          ~ ^~~~~
e_regex.cpp:785:13: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    flags = RxOpt;
          ~ ^~~~~
e_regex.cpp:908:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    add(&dlen, &dest, Src + match.Open[n], match.Close[n] - match.Open[n], flag);
                    ~~~                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
26 warnings generated.
g++ -c e_search.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_search.cpp:30:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    case 'c': opt &= ~SEARCH_NEXT; break;    // search from current position
                  ~~ ^~~~~~~~~~~~
e_search.cpp:142:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    opt.Options = Options;
                ~ ^~~~~~~
e_search.cpp:148:23: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    int Options = opt.Options;
        ~~~~~~~   ~~~~^~~~~~~
e_search.cpp:182:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = X->Count;
                  ~ ~~~^~~~~
e_search.cpp:216:35: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    C = RLine(L)->Count;
                      ~ ~~~~~~~~~~^~~~~
e_search.cpp:242:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        LLen = X->Count;
             ~ ~~~^~~~~
e_search.cpp:278:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                  && (memcmp(P + C, Data, Len) == 0))
                      ~~~~~~              ^~~
e_search.cpp:282:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                  && (strnicmp(P + C, Data, Len) == 0))) /* && BOL | EOL */
                      ~~~~~~~~              ^~~
e_search.cpp:288:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MatchLen = ScreenPos(X, C + Len) - Match.Col;
                         ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:303:31: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = RLine(L)->Count;
                  ~ ~~~~~~~~~~^~~~~
e_search.cpp:314:23: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    int Options = opt.Options;
        ~~~~~~~   ~~~~^~~~~~~
e_search.cpp:350:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = X->Count;
                  ~ ~~~^~~~~
e_search.cpp:359:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = X->Count;
                  ~ ~~~^~~~~
e_search.cpp:405:35: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    C = RLine(L)->Count;
                      ~ ~~~~~~~~~~^~~~~
e_search.cpp:431:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        LLen = X->Count;
             ~ ~~~^~~~~
e_search.cpp:458:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (RxExec(Rx, P + Start, End - Start, P + C, &b, (Options & SEARCH_NCASE) ? 0 : RX_CASE) == 1) {
                ~~~~~~                ^~~~~~~~~~~
e_search.cpp:463:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MatchLen = ScreenPos(X, b.Close[0] + Start) - C;
                         ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:489:23: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    int Options = opt.Options;
        ~~~~~~~   ~~~~^~~~~~~
e_search.cpp:528:40: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            if (FindStr(opt.strSearch, slen, opt) == 0) goto end;
                ~~~~~~~                ^~~~
e_search.cpp:596:37: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                opt.lastInsertLen = strlen(opt.strReplace);
                                  ~ ^~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:600:30: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                MatchCount = rlen;
                           ~ ^~~~
e_search.cpp:691:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (DelText(Match.Row, 0, LineLen()) == 0) goto error;
                    ~~~~~~~               ^~~~~~~~~
e_search.cpp:820:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options = Case | Next | (Options & ~SEARCH_NCASE);
                    ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:855:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options = Case | (Options & ~SEARCH_NCASE) | SEARCH_ALL | SEARCH_REPLACE;
                    ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:899:78: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            rlst.Lines = (int *) realloc((void *) rlst.Lines, sizeof(int) * (rlst.Count | 0x1F));
                                                              ~~~~~~         ^~~~~~~~~~~~~~~~~
e_search.cpp:928:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    NChars = VLine(CP.Row)->Count;
           ~ ~~~~~~~~~~~~~~~^~~~~
e_search.cpp:1031:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (searchForLine == -1 || BMarks[i]->GetPoint().Row == searchForLine) {
                                   ~~~~~~ ^
e_search.cpp:1032:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
            b = BMarks[i];
                ~~~~~~ ^
e_search.cpp:1106:37: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            Pos = (dir == 1) ? 0 : (L->Count - 1);
                             ~      ^~~~~~~~~~~~
In file included from e_search.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from e_search.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<EBookmark *>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
e_search.cpp:995:12: note: in instantiation of member function 'fte::vector<EBookmark *>::push_back' requested here
    BMarks.push_back(b);
           ^
In file included from e_search.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
e_search.cpp:1030:46: note: in instantiation of member function 'fte::vector<EBookmark *>::size' requested here
    for (int i = searchFrom; i < (int)BMarks.size(); i++)
                                             ^
32 warnings generated.
g++ -c e_svnlog.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_svnlog.cpp:17:
./o_svn.h:32:22: warning: 'ESvn::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
e_svnlog.cpp:119:20: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        InsText (p,i+=5,5, " file");
        ~~~~~~~    ^~~~
e_svnlog.cpp:121:36: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (fCount!=1) InsText (p,i++,1, "s");
                       ~~~~~~~    ~^~
e_svnlog.cpp:122:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        InsText (p++,i,1, ":");
        ~~~~~~~      ^
e_svnlog.cpp:128:32: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                InsText(p++,11,len[i], list+position[i]);
                ~~~~~~~        ^~~~~~
In file included from e_svnlog.cpp:11:
In file included from ./e_svnlog.h:14:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
6 warnings generated.
g++ -c e_tags.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_tags.cpp:72:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    while (N < (TagLen + Len))
                ^~~~~~
e_tags.cpp:75:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (!(NM = (char *)realloc((void *)TagMem, N)))
                           ~~~~~~~                 ^
e_tags.cpp:93:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (!(ND = (TagData *)realloc((void *)TagD, N * sizeof(TagData))))
                                                    ^
e_tags.cpp:137:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (!(NI = (int *)realloc(TagI, CTags * sizeof(int))))
                                    ^~~~~
e_tags.cpp:144:17: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(TagI, CTags, sizeof(TagI[0]), cmptags);
    ~~~~~       ^~~~~
e_tags.cpp:179:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (!(TagMem = (char *)realloc((void *)TagMem, TagLen + (size_t)sb.st_size)))
                                                       ^~~~~~
e_tags.cpp:194:16: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        TagL = p - LTag;
             ~ ^~~~~~~~
e_tags.cpp:199:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        FileL = p - LFile;
              ~ ^~~~~~~~~
e_tags.cpp:207:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (!AllocMem(LTag, TagL + FileL, &MTag))
             ~~~~~~~~       ^~~~~~~~~~~~
e_tags.cpp:258:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (!(NewT = (int *)realloc((void *)TagFiles, (TagFileCount + 1) * sizeof(int))))
                                                  ~^~~~~~~~~~~~~~~~
e_tags.cpp:370:70: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (!((EBuffer *)ActiveModel)->FindStr(TagMem + TT->StrFind, strlen(TagMem + TT->StrFind), 0))
             ~                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_tags.cpp:373:57: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    ((EBuffer *)ActiveModel)->FindStr(TagMem + TT->Tag, strlen(TagMem + TT->Tag), 0);
    ~                                                   ^~~~~~~~~~~~~~~~~~~~~~~~
e_tags.cpp:381:15: warning: unused variable 'T' [-Wunused-variable]
    TagStack* T = TagStack::TStack;
              ^
e_tags.cpp:493:33: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int L = 0, R = CTags, len = strlen(Tag);
                          ~~~   ^~~~~~~~~~~
e_tags.cpp:498:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        c = strncmp(Tag, TagMem + TagD[TagI[M]].Tag, len);
            ~~~~~~~                                  ^~~
e_tags.cpp:501:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                   strncmp(Tag, TagMem + TagD[TagI[M - 1]].Tag, len) == 0)
                   ~~~~~~~                                      ^~~
e_tags.cpp:504:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            while (strncmp(Tag, TagMem + TagD[TagI[N]].Tag, len) == 0) {
                   ~~~~~~~                                  ^~~
e_tags.cpp:508:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                    int l = strlen(TagMem + TagD[TagI[N]].Tag) - len;
                        ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_tags.cpp:508:66: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    int l = strlen(TagMem + TagD[TagI[N]].Tag) - len;
                            ~~~~~~                               ^~~
In file included from e_tags.cpp:9:
In file included from ./e_tags.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
20 warnings generated.
g++ -c e_trans.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_trans.cpp:110:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                E = LL->Count;
                  ~ ~~~~^~~~~
e_trans.cpp:126:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                E = LL->Count;
                  ~ ~~~~^~~~~
e_trans.cpp:132:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                E = LL->Count;
                  ~ ~~~~^~~~~
e_trans.cpp:137:21: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            B = LL->Count;
              ~ ~~~~^~~~~
e_trans.cpp:139:21: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            E = LL->Count;
              ~ ~~~~^~~~~
e_trans.cpp:141:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (ChgChars(L, B, E - B, 0) == 0) return 0;
                ~~~~~~~~       ^~~~~
e_trans.cpp:143:32: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
                LL->Chars[I] = tab[(unsigned char)LL->Chars[I]];
                             ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_trans.cpp:152:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    unsigned int P = CharOffset(L, CP.Col);
                 ~   ^~~~~~~~~~~~~~~~~~~~~
e_trans.cpp:155:26: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (ChgChars(CP.Row, P, 1, 0) == 0) return 0;
        ~~~~~~~~         ^
e_trans.cpp:156:19: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
    L->Chars[P] = tab[(unsigned char)L->Chars[P]];
                ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_trans.cpp:167:27: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
            L->Chars[I] = tab[(unsigned char)L->Chars[I]];
                        ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from e_trans.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
12 warnings generated.
g++ -c e_undo.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_undo.cpp:36:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BB.Col) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:37:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BB.Row) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:38:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BE.Col) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:39:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BE.Row) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:40:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BlockMode) == 0) return 0;
        ~~~~~~~~~ ^~~~~~~~~
e_undo.cpp:59:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        US.Data = (void **) realloc(US.Data, sizeof(void *) * Order);
                                             ~~~~~~           ^~~~~
e_undo.cpp:60:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        US.Top = (int *) realloc(US.Top, sizeof(int) * Order);
                                         ~~~~~~        ^~~~~
e_undo.cpp:92:68: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            US.Data = (void **) realloc(US.Data, sizeof(void *) * (N | 255));
                                                 ~~~~~~            ^~~~~~~
e_undo.cpp:93:67: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            US.Top = (int *)   realloc(US.Top,  sizeof(int)    * (N | 255));
                                                ~~~~~~            ^~~~~~~
e_undo.cpp:100:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memmove(US.Data, US.Data + 1, (N - 1) * sizeof(US.Data[0]));
                                          ~^~~~~
e_undo.cpp:101:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memmove(US.Top,  US.Top  + 1, (N - 1) * sizeof(US.Top[0]));
                                          ~^~~~~
e_undo.cpp:111:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(CP.Col) == 0) return 0;
                ~~~~~~~~~ ~~~^~~
e_undo.cpp:112:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(CP.Row) == 0) return 0;
                ~~~~~~~~~ ~~~^~~
e_undo.cpp:124:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    while (Order < (US.Top[N] + len)) Order <<= 1;
                    ^~~~~~~~~
e_undo.cpp:125:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    US.Data[N] = realloc(US.Data[N], Order);
                 ~~~~~~~             ^~~~~
e_undo.cpp:214:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (DelLine(Line) == 0) return 0;
                ~~~~~~~ ^~~~
e_undo.cpp:222:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsLine(Line, 0) == 0) return 0;
                ~~~~~~~ ^~~~
e_undo.cpp:224:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsText(Line, 0, Len, (char *) data) == 0) return 0;
                ~~~~~~~ ^~~~
e_undo.cpp:233:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (DelChars(Line, Col, ACount) == 0) return 0;
                ~~~~~~~~ ^~~~
e_undo.cpp:233:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (DelChars(Line, Col, ACount) == 0) return 0;
                ~~~~~~~~       ^~~
e_undo.cpp:242:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsChars(Line, Col, ACount, (char *) data) == 0) return 0;
                ~~~~~~~~ ^~~~
e_undo.cpp:242:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsChars(Line, Col, ACount, (char *) data) == 0) return 0;
                ~~~~~~~~       ^~~
e_undo.cpp:250:24: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (SetPos(Col, Line) == 0) return 0;
                ~~~~~~ ^~~
e_undo.cpp:250:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (SetPos(Col, Line) == 0) return 0;
                ~~~~~~      ^~~~
e_undo.cpp:274:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldDestroy(Line) == 0) return 0;
                ~~~~~~~~~~~ ^~~~
e_undo.cpp:285:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                if (FoldCreate(Line) == 0) return 0;
                    ~~~~~~~~~~ ^~~~
e_undo.cpp:287:31: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                ff = FindFold(Line);
                     ~~~~~~~~ ^~~~
e_undo.cpp:295:28: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldDemote(Line) == 0) return 0;
                ~~~~~~~~~~ ^~~~
e_undo.cpp:301:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldPromote(Line) == 0) return 0;
                ~~~~~~~~~~~ ^~~~
e_undo.cpp:307:27: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldClose(Line) == 0) return 0;
                ~~~~~~~~~ ^~~~
e_undo.cpp:313:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldOpen(Line) == 0) return 0;
                ~~~~~~~~ ^~~~
e_undo.cpp:332:67: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                          ~~~~~~  ^~~~
e_undo.cpp:332:72: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                          ~~~~~~       ^~~
e_undo.cpp:343:63: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                      ~~~~~~  ^~~~
e_undo.cpp:343:68: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                      ~~~~~~       ^~~
In file included from e_undo.cpp:12:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
36 warnings generated.
g++ -c fte.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c gui.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c g_draw.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g_draw.cpp:36:16: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(CCh, Attr);
        ~      ^~~
g_draw.cpp:44:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:48:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
g_draw.cpp:50:16: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(CCh, Attr);
        ~      ^~~
g_draw.cpp:58:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:63:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
g_draw.cpp:65:16: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(*Ch++, Attr);
        ~      ^~~~~
g_draw.cpp:73:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        MaxCount += Pos;
                 ~~ ^~~
g_draw.cpp:78:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)MaxCount > Width - Pos) MaxCount = Width - Pos;
                                              ~ ^~~~~~~~~~~
g_draw.cpp:80:16: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(*Ch++, Attr);
        ~      ^~~~~
g_draw.cpp:89:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        MaxCount += Pos;
                 ~~ ^~~
g_draw.cpp:94:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)MaxCount > Width - Pos) MaxCount = Width - Pos;
                                              ~ ^~~~~~~~~~~
g_draw.cpp:101:18: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B++->Set(*Ch++, attr);
        ~        ^~~~~
g_draw.cpp:112:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:116:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
g_draw.cpp:126:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:130:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
17 warnings generated.
g++ -c g_menu.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g_menu.cpp:20:48: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                              sizeof(mMenu) * (MenuCount + 1));
                              ~~~~~~           ^~~~~~~~~~~~~
g_menu.cpp:38:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    n = Menus[menu].Count;
      ~ ~~~~~~~~~~~~^~~~~
g_menu.cpp:56:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    n = Menus[menu].Count;
      ~ ~~~~~~~~~~~~^~~~~
3 warnings generated.
g++ -c h_ada.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_ada.cpp:30:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_ada.cpp:37:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_ada.cpp:37:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:43:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_ada.cpp:44:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_ada.cpp:45:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_') ||
                                         ~   ^
h_ada.cpp:46:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '\''))
                                         ~   ^
h_ada.cpp:48:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 1)) {
                        ~~                                       ^
h_ada.cpp:52:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        x = i + j;
                          ~ ^~~~~
h_ada.cpp:52:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        x = i + j;
                            ~   ^
h_ada.cpp:63:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_ada.cpp:65:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_ada.cpp:66:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_ada.cpp:67:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_ada.cpp:76:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:78:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:82:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:83:102: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.' || *p == '_')) ColorNext();
                                                                                                     ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:105:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:113:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:123:15: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
    if ((len1 == 0)) {
         ~~~~~^~~~
h_ada.cpp:123:15: note: remove extraneous parentheses around the comparison to silence this warning
    if ((len1 == 0)) {
        ~     ^   ~
h_ada.cpp:123:15: note: use '=' to turn this equality comparison into an assignment
    if ((len1 == 0)) {
              ^~
              =
In file included from h_ada.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
22 warnings generated.
g++ -c h_c.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_c.cpp:44:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_c.cpp:50:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_c.cpp:50:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:65:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    for (j = 0; (((i + j) < Line->Count)
                                   ~   ^
h_c.cpp:66:60: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                 && ISNAME(Line->Chars[i + j])); j++)
                                    ~~~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:29: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                            ^
h_c.cpp:66:60: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                 && ISNAME(Line->Chars[i + j])); j++)
                                    ~~~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:37: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                                    ^
h_c.cpp:68:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j)) {
                        ~~                                       ^
h_c.cpp:72:33: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        int x = i + j;
                            ~   ^~~~~
h_c.cpp:72:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        int x = i + j;
                                ~   ^
h_c.cpp:92:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_c.cpp:94:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_c.cpp:95:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_c.cpp:96:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_c.cpp:114:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:115:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:116:57: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            while (len && isxdigit(*p)) ColorNext();
                                                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:119:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:120:69: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            while (len && ('0' <= *p && *p <= '7')) ColorNext();
                                                                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:125:61: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                                while (len && !isspace(*p)) ColorNext();
                                                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:131:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:132:93: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.')) ColorNext();
                                                                                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:135:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:142:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:146:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:147:56: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (len && (ISUPPER(*p, 'L'))) ColorNext();
                                                       ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:148:71: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (! colored_u && len && (ISUPPER(*p, 'U'))) ColorNext();
                                                                      ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:178:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:179:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:187:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:188:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:208:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:218:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:228:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:238:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:247:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_c.cpp:248:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (ISNAME(Line->Chars[i+j])))
                            ~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:29: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                            ^
h_c.cpp:248:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (ISNAME(Line->Chars[i+j])))
                            ~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:37: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                                    ^
h_c.cpp:253:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_c.cpp:255:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_c.cpp:256:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_c.cpp:257:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_c.cpp:269:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:271:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:277:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:278:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:280:33: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                                ColorNext();
                                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:283:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:284:69: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            while (len && ('0' <= *p && *p <= '7')) ColorNext();
                                                                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:290:37: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                                    ColorNext();
                                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:296:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:298:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:306:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:310:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:311:56: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (len && (ISUPPER(*p, 'L'))) ColorNext();
                                                       ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:312:71: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (! colored_u && len && (ISUPPER(*p, 'U'))) ColorNext();
                                                                      ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:324:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:368:43: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    unsigned uLineLength = B->RLine(Row)->Count;
             ~~~~~~~~~~~   ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:369:11: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    Pos = B->CharOffset(B->RLine(Row), Pos);
        ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
h_c.cpp:369:40: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    Pos = B->CharOffset(B->RLine(Row), Pos);
          ~                            ^~~
h_c.cpp:504:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:522:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    if (LOpen + Pos <= L) {
                        ~~~~~   ^~~
h_c.cpp:536:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        if (LClose + Pos <= L) {
                            ~~~~~~   ^~~
h_c.cpp:572:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    L = B->RLine(RowP)->Count;
      ~ ~~~~~~~~~~~~~~~~^~~~~
h_c.cpp:584:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(RowP)->Count;
          ~ ~~~~~~~~~~~~~~~~^~~~~
h_c.cpp:828:33: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            L = B->RLine(RowP)->Count;
              ~ ~~~~~~~~~~~~~~~~^~~~~
h_c.cpp:850:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    L = B->RLine(Row)->Count;
      ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:857:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:897:36: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                L = B->RLine(Row)->Count;
                  ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:1088:40: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                       ~~~~~~          ^~~~
h_c.cpp:1091:46: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && !LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                             ~~~~~~          ^~~~
h_c.cpp:1094:45: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                            ~~~~~~          ^~~~
h_c.cpp:1151:40: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                       ~~~~~~          ^~~~
h_c.cpp:1154:46: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && !LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                             ~~~~~~          ^~~~
h_c.cpp:1157:45: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                            ~~~~~~          ^~~~
h_c.cpp:1270:36: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            if (LookAt(B, Row - 1, I, "/*", hsC_Comment, 0)) I += C_COMMENT_DELTA;
                ~~~~~~             ^
h_c.cpp:1272:36: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            if (LookAt(B, Row - 1, I, "/*", hsC_CPP_Comm, 0)) I += C_COMMENT_DELTA;
                ~~~~~~             ^
In file included from h_c.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
77 warnings generated.
g++ -c h_catbs.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_catbs.cpp:26:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_catbs.cpp:26:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_catbs.cpp:46:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_catbs.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
4 warnings generated.
g++ -c h_fte.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_fte.cpp:32:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_fte.cpp:39:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_fte.cpp:39:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:45:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_fte.cpp:46:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_fte.cpp:47:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_fte.cpp:49:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j)) {
                        ~~                                       ^
h_fte.cpp:56:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_fte.cpp:58:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_fte.cpp:59:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_fte.cpp:60:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_fte.cpp:75:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:76:89: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.')) ColorNext();
                                                                                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:77:54: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    if (len && (toupper(*p) == 'U')) ColorNext();
                                                     ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:78:54: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    if (len && (toupper(*p) == 'L')) ColorNext();
                                                     ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:98:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:102:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:114:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:116:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:119:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:129:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:139:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:149:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_fte.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
24 warnings generated.
g++ -c h_ipf.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_ipf.cpp:32:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_ipf.cpp:32:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:51:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_ipf.cpp:52:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_ipf.cpp:53:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_ipf.cpp:55:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 1)) {
                        ~~                                       ^
h_ipf.cpp:58:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_ipf.cpp:60:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_ipf.cpp:61:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_ipf.cpp:62:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_ipf.cpp:72:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:80:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:88:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:101:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_ipf.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
15 warnings generated.
g++ -c h_make.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_make.cpp:24:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_make.cpp:32:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_make.cpp:32:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_make.cpp:61:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_make.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c h_msg.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_msg.cpp:98:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_msg.cpp:98:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:101:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_msg.cpp:102:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_msg.cpp:103:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_msg.cpp:105:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, Line->Chars + i, j, 1)) ;
                        ~~                                       ^
h_msg.cpp:110:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_msg.cpp:112:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_msg.cpp:113:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_msg.cpp:114:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_msg.cpp:120:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:128:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_msg.cpp:128:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:129:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:136:68: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, Color, Width);
                    ~~~~~~~                                        ^~~~~
h_msg.cpp:141:82: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, Color, Line->Count - Pos);
                                                                   ~~~~          ^~~
h_msg.cpp:146:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        C = Line->Count;
          ~ ~~~~~~^~~~~
In file included from h_msg.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
18 warnings generated.
g++ -c h_pascal.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_pascal.cpp:35:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_pascal.cpp:35:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:41:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_pascal.cpp:42:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_pascal.cpp:43:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_pascal.cpp:45:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 1)) {
                        ~~                                       ^
h_pascal.cpp:53:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_pascal.cpp:55:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_pascal.cpp:56:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_pascal.cpp:57:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_pascal.cpp:65:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:73:7: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:74:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:75:49: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && isxdigit(*p)) ColorNext();
                                                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:79:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:80:89: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.')) ColorNext();
                                                                                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:99:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:100:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:108:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:116:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:124:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:129:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_pascal.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
23 warnings generated.
g++ -c h_perl.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_perl.cpp:145:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_perl.cpp:145:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:163:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:165:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:167:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:169:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:171:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:173:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:228:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_perl.cpp:229:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_perl.cpp:230:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_' || Line->Chars[i + j] == '\''))
                                         ~   ^
h_perl.cpp:230:75: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_' || Line->Chars[i + j] == '\''))
                                                                      ~   ^
h_perl.cpp:232:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j)) {
                        ~~                                       ^
h_perl.cpp:241:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        x = i + j;
                          ~ ^~~~~
h_perl.cpp:241:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        x = i + j;
                            ~   ^
h_perl.cpp:268:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_perl.cpp:270:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_perl.cpp:271:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_perl.cpp:272:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_perl.cpp:313:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:314:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:320:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:323:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:329:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:330:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:336:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:342:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:346:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:353:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:354:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:361:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:362:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:371:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:373:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        IF_TAB() else
                        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_perl.cpp:373:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        IF_TAB() else
                        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:374:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:384:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:397:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:401:48: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        UntilMatchBrace(first, ColorNext());
                        ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
                        ^
./c_hilit.h:126:13: note: expanded from:
            cmd;                         \
            ^~~
h_perl.cpp:410:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:417:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:418:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:419:64: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isxdigit(*p) || *p == '_')) ColorNext();
                                                               ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:427:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:428:91: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || (*p == 'e' || *p == 'E' || *p == '_'))) ColorNext();
                                                                                          ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:466:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:501:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:502:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:508:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:514:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:545:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:561:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:589:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:592:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:608:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:611:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:639:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:656:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:676:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:684:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:685:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:686:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:687:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:701:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:711:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:721:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_perl.cpp:21:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
67 warnings generated.
g++ -c h_plain.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_plain.cpp:28:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_plain.cpp:28:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:31:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_plain.cpp:32:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_plain.cpp:33:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_plain.cpp:35:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, Line->Chars + i, j, 1)) ;
                        ~~                                       ^
h_plain.cpp:41:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_plain.cpp:43:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_plain.cpp:44:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_plain.cpp:45:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_plain.cpp:52:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:60:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_plain.cpp:60:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:61:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:68:75: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, HILIT_CLRD(), Width);
                    ~~~~~~~                                               ^~~~~
h_plain.cpp:73:89: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, HILIT_CLRD(), Line->Count - Pos);
                                                                          ~~~~          ^~~
h_plain.cpp:78:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        C = Line->Count;
          ~ ~~~~~~^~~~~
In file included from h_plain.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
18 warnings generated.
g++ -c h_rexx.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_rexx.cpp:37:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_rexx.cpp:37:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:42:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:44:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:66:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_rexx.cpp:67:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_rexx.cpp:68:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_rexx.cpp:75:70: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (BF->GetHilitWord(Color, Line->Chars + i, j, 1))
                            ~~                                       ^
h_rexx.cpp:79:33: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                            x = i + j;
                              ~ ^~~~~
h_rexx.cpp:79:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            x = i + j;
                                ~   ^
h_rexx.cpp:89:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_rexx.cpp:91:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_rexx.cpp:95:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_rexx.cpp:96:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_rexx.cpp:105:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:107:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:112:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:113:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:117:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:119:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:162:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int L = strlen(String);
        ~   ^~~~~~~~~~~~~~
h_rexx.cpp:165:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (StateMap == NULL || IsState(StateMap + Pos, State, L))
                                ~~~~~~~                        ^
h_rexx.cpp:166:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (strnicmp(String, Text + Pos, L) == 0)
                ~~~~~~~~                     ^
h_rexx.cpp:172:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int L = strlen(String);
        ~   ^~~~~~~~~~~~~~
h_rexx.cpp:179:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (StateMap == NULL || IsState(StateMap + Pos, State, L))
                                ~~~~~~~                        ^
h_rexx.cpp:180:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (strnicmp(String, Text + Pos, L) == 0)
                ~~~~~~~~                     ^
h_rexx.cpp:202:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
h_rexx.cpp:286:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
In file included from h_rexx.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
29 warnings generated.
g++ -c h_sh.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_sh.cpp:56:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_sh.cpp:56:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:79:57: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (!BF->GetHilitWord(Color, p, j, 0)) {
                             ~~                         ^
h_sh.cpp:93:58: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "in", j);
                                        ~~~~~~~          ^
h_sh.cpp:96:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "for", j);
                                        ~~~~~~~           ^
h_sh.cpp:99:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "read", j);
                                        ~~~~~~~            ^
h_sh.cpp:102:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "unset", j);
                                        ~~~~~~~             ^
h_sh.cpp:105:62: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "export", j);
                                        ~~~~~~~              ^
h_sh.cpp:134:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:137:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:140:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:162:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:163:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:164:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:248:49: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            UntilMatchBrace('{',ColorNext());
                            ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
                        ^
./c_hilit.h:126:13: note: expanded from:
            cmd;                         \
            ^~~
h_sh.cpp:255:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:279:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                memset(StateMap + i, State, j);
                ~~~~~~                      ^
h_sh.cpp:281:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveMem(B, C - Pos, Width, p, HILIT_CLRD(), j);
                ~~~~~~~                                     ^
h_sh.cpp:282:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            i += j;
              ~~ ^
h_sh.cpp:283:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            len -= j;
                ~~ ^
In file included from h_sh.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
21 warnings generated.
g++ -c h_simple.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_simple.cpp:42:17: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
    Color = st->color;
          ~ ~~~~^~~~~
h_simple.cpp:80:51: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                    Color = hm->state[entryState].color;
                          ~ ~~~~~~~~~~~~~~~~~~~~~~^~~~~
h_simple.cpp:81:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    IF_TAB()
                    ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_simple.cpp:81:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    IF_TAB()
                    ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:83:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:92:23: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            lastPos = i;
                    ~ ^
h_simple.cpp:103:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                matchFlags = tr->matchFlags;
                           ~ ~~~~^~~~~~~~~~
h_simple.cpp:121:77: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        if (b.Open[1] != -1 && b.Close[1] != -1) matchLen = b.Open[1] - i;
                                                                          ~ ^~~~~~~~~~~~~
h_simple.cpp:121:77: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        if (b.Open[1] != -1 && b.Close[1] != -1) matchLen = b.Open[1] - i;
                                                                            ^~~~~~~~~
h_simple.cpp:122:41: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        else matchLen = b.Close[0] - i;
                                      ~ ^~~~~~~~~~~~~~
h_simple.cpp:122:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        else matchLen = b.Close[0] - i;
                                        ^~~~~~~~~~
h_simple.cpp:124:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (memicmp(match, p, matchLen))
                            ~~~~~~~           ^~~~~~~~
h_simple.cpp:143:29: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                    State = nextState;
                          ~ ^~~~~~~~~
h_simple.cpp:150:33: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                        State = nextState;
                              ~ ^~~~~~~~~
h_simple.cpp:155:33: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                    Color = tr->color;
                          ~ ~~~~^~~~~
h_simple.cpp:157:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        IF_TAB()
                        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_simple.cpp:157:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        IF_TAB()
                        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:159:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:161:33: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                        State = nextState;
                              ~ ^~~~~~~~~
h_simple.cpp:183:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                while (((i + j) < Line->Count) &&
                         ~   ^
h_simple.cpp:184:64: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                       (WGETBIT(st->wordChars, Line->Chars[i + j]))) j++;
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./c_mode.h:153:27: note: expanded from:
    (((x)[(unsigned char)(y) / 8] &  (1 << ((unsigned char)(y) % 8))) ? 1 : 0)
                          ^
h_simple.cpp:184:64: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                       (WGETBIT(st->wordChars, Line->Chars[i + j]))) j++;
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./c_mode.h:153:61: note: expanded from:
    (((x)[(unsigned char)(y) / 8] &  (1 << ((unsigned char)(y) % 8))) ? 1 : 0)
                                                            ^
h_simple.cpp:187:29: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                Color = st->color;
                      ~ ~~~~^~~~~
h_simple.cpp:191:37: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                        State = st->nextKwdNoCharState;
                              ~ ~~~~^~~~~~~~~~~~~~~~~~
h_simple.cpp:195:37: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                        Color = st->color;
                              ~ ~~~~^~~~~
h_simple.cpp:199:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (st->GetHilitWord(Color, &Line->Chars[i], j) ||
                        ~~                                       ^
h_simple.cpp:200:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        BF->GetHilitWord(Color, &Line->Chars[i], j, BFI( BF, BFI_MatchCase ) ? 0 : 1))
                        ~~                                       ^
h_simple.cpp:203:41: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                            State = st->nextKwdMatchedState;
                                  ~ ~~~~^~~~~~~~~~~~~~~~~~~
h_simple.cpp:206:41: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                            State = st->nextKwdNotMatchedState;
                                  ~ ~~~~^~~~~~~~~~~~~~~~~~~~~~
h_simple.cpp:211:45: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                                Color = st->color;
                                      ~ ~~~~^~~~~
h_simple.cpp:224:37: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                        Color = st->color;
                              ~ ~~~~^~~~~
h_simple.cpp:228:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, MState, j);
                        ~~~~~~                       ^
h_simple.cpp:230:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_simple.cpp:231:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_simple.cpp:232:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_simple.cpp:238:37: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                        Color = st->color;
                              ~ ~~~~^~~~~
h_simple.cpp:244:21: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
        Color = st->color;
              ~ ~~~~^~~~~
h_simple.cpp:245:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB()
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_simple.cpp:245:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB()
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:247:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            ColorNext();
            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:256:26: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        matchFlags = tr->matchFlags;
                   ~ ~~~~^~~~~~~~~~
h_simple.cpp:268:21: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
            State = nextState;
                  ~ ^~~~~~~~~
In file included from h_simple.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
43 warnings generated.
g++ -c h_tex.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_tex.cpp:29:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_tex.cpp:29:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:40:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:45:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:54:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_tex.cpp:55:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j])/* ||
                                                ~ ^
h_tex.cpp:58:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 0)) {
                        ~~                                       ^
h_tex.cpp:61:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_tex.cpp:63:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_tex.cpp:64:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_tex.cpp:65:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_tex.cpp:72:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:82:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_tex.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
14 warnings generated.
g++ -c indent.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from indent.cpp:10:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c i_ascii.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_ascii.cpp:37:16: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch(kbCode(Event.Key.Code)) {
               ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
1 warning generated.
g++ -c i_choice.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_choice.cpp:24:10: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    SOpt(NSel),
    ~~~~ ^~~~
i_choice.cpp:55:40: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (x > pos && x <= pos + SOpt[i].GetCStrLen())
                                  ~~~~ ^
i_choice.cpp:57:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        pos += SOpt[i].GetCStrLen() + 1;
               ~~~~ ^
i_choice.cpp:65:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_choice.cpp:79:37: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    if (strstr(SOpt[i].GetCStr(), s) != 0) {
                               ~~~~ ^
i_choice.cpp:129:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', hcChoice_Background, W);
    ~~~~~~                              ^
i_choice.cpp:130:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, 0, W, Title.c_str(), hcChoice_Title, W);
    ~~~~~~~                                         ^
i_choice.cpp:132:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, lTitle + 2, W, Prompt, hcChoice_Param, W);
    ~~~~~~~                                           ^
i_choice.cpp:147:38: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        MoveCStr(B, pos + 1, W, SOpt[i].GetCStr(), color1, color2, W);
                                ~~~~ ^
i_choice.cpp:147:68: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveCStr(B, pos + 1, W, SOpt[i].GetCStr(), color1, color2, W);
        ~~~~~~~~                                                   ^
i_choice.cpp:148:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        pos += SOpt[i].GetCStrLen() + 1;
               ~~~~ ^
In file included from i_choice.cpp:10:
In file included from ./i_choice.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:290:12: note: in instantiation of member function 'fte::vector<ExChoice::option>::size' requested here
    assert(size() <= alloc);
           ^
/usr/include/assert.h:92:5: note: expanded from:
  ((expr)                                                               \
    ^
./stl_fte.h:230:6: note: in instantiation of member function 'fte::vector<ExChoice::option>::internal_copy' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
            ^
i_choice.cpp:30:14: note: in instantiation of member function 'fte::vector<ExChoice::option>::push_back' requested here
        SOpt.push_back((va_arg(ap, char *)));
             ^
In file included from i_choice.cpp:10:
In file included from ./i_choice.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<ExChoice::option>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
i_choice.cpp:30:14: note: in instantiation of member function 'fte::vector<ExChoice::option>::push_back' requested here
        SOpt.push_back((va_arg(ap, char *)));
             ^
13 warnings generated.
g++ -c i_complete.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_complete.cpp:78:27: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        && Buffer->SetPos(Orig.Col + l, Orig.Row)) {
           ~~~~~~         ^~~~~~~~~~~~
i_complete.cpp:78:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        && Buffer->SetPos(Orig.Col + l, Orig.Row)) {
                          ~~~~~^~~
i_complete.cpp:88:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    unsigned long kb = kbCode(Event.Key.Code);
                       ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_complete.cpp:222:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', COM_NORM, W);
    ~~~~~~                   ^
i_complete.cpp:233:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, W, sc, COM_NORM, W);
        ~~~~~~~                        ^
i_complete.cpp:235:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, (int)p, W, WordBegin, COM_ORIG, W);
        ~~~~~~~                                    ^
i_complete.cpp:239:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, (int)p, W, Words[WordPos], COM_MARK, W);
            ~~~~~~~                                         ^
i_complete.cpp:244:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                (WordFixedCount == 1) ? COM_ORIG : COM_HIGH, W);
                                                             ^
i_complete.cpp:249:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, (int)p, W, s, COM_NORM, W);
        ~~~~~~~                            ^
i_complete.cpp:252:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, W, STRNOCOMPLETE, COM_ERR, W);
        ~~~~~~~                                  ^
i_complete.cpp:282:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    strncpy(WordBegin, L->Chars + P, wlen);
    ~~~~~~~                          ^~~~
i_complete.cpp:297:48: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    while (Buffer->FindStr(L->Chars + P, wlen, mask) == 1) {
           ~~~~~~                              ^~~~
i_complete.cpp:318:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            strncpy(s, M->Chars + X + wlen, len);
            ~~~~~~~                         ^~~
i_complete.cpp:363:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(Words, WordsLast, sizeof(Words[0]), CmpStr);
    ~~~~~        ^~~~~~~~~
i_complete.cpp:380:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            WordFixed += add;
                      ~~ ^~~
i_complete.cpp:383:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            WordFixed += add;
                      ~~ ^~~
i_complete.cpp:392:19: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        WordFixedCount = WordsLast;
                       ~ ^~~~~~~~~
In file included from i_complete.cpp:10:
In file included from ./i_complete.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
18 warnings generated.
g++ -c i_input.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_input.cpp:37:11: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    Pos = strlen(Line);
        ~ ^~~~~~~~~~~~
i_input.cpp:51:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_input.cpp:77:27: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        case kbEnd: Pos = strlen(Line); goto common;
                        ~ ^~~~~~~~~~~~
i_input.cpp:92:27: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                    Pos = strlen(Line);
                        ~ ^~~~~~~~~~~~
i_input.cpp:157:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                size_t len = SSBuffer->LineChars(0);
                       ~~~   ^~~~~~~~~~~~~~~~~~~~~~
i_input.cpp:183:64: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                if (!CurItem || !GetInputHistory(HistId, Line, MaxLen, CurItem))
                                 ~~~~~~~~~~~~~~~               ^~~~~~
i_input.cpp:185:23: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                Pos = strlen(Line);
                    ~ ^~~~~~~~~~~~
i_input.cpp:200:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                if ((TabCount == 1) && (kbCode(Event.Key.Code) == kbTab))
                                        ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_input.cpp:206:27: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                    Pos = strlen(Line);
                        ~ ^~~~~~~~~~~~
i_input.cpp:244:12: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    FPos = Prompt.size() + 2;
         ~ ^~~~~~~~~~~~~~~~~
i_input.cpp:248:15: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        Pos = strlen(Line);
            ~ ^~~~~~~~~~~~
i_input.cpp:250:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (LPos + FLen <= Pos) LPos = Pos - FLen + 1;
        ~~~~   ^~~~
i_input.cpp:250:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (LPos + FLen <= Pos) LPos = Pos - FLen + 1;
                                   ~~~   ^~~~
i_input.cpp:253:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, W, ' ', hcEntry_Field, W);
    ~~~~~~~~                              ^
i_input.cpp:254:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, 0, W, Prompt.c_str(), hcEntry_Prompt, FPos);
    ~~~~~~~                                          ^~~~
i_input.cpp:256:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, FPos, W, Line + LPos, hcEntry_Field, FLen);
    ~~~~~~~                                         ^~~~
i_input.cpp:257:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    MoveAttr(B, FPos + SelStart - LPos, W, hcEntry_Selection, SelEnd - SelStart);
    ~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~
i_input.cpp:257:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    MoveAttr(B, FPos + SelStart - LPos, W, hcEntry_Selection, SelEnd - SelStart);
                ^~~~
i_input.cpp:258:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    ConSetCursorPos(FPos + Pos - LPos, H - 1);
    ~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~
i_input.cpp:258:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    ConSetCursorPos(FPos + Pos - LPos, H - 1);
                    ^~~~
In file included from i_input.cpp:11:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
21 warnings generated.
g++ -c i_key.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_key.cpp:38:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', 0x17, W);
    ~~~~~~               ^
1 warning generated.
g++ -c i_modelview.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c i_oview.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_oview.cpp:56:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (Event.What == evKeyDown && kbCode(Event.Key.Code) == kbF12)
                                   ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
1 warning generated.
g++ -c i_search.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_search.cpp:44:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_search.cpp:160:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', 0x17, W);
    ~~~~~~               ^
i_search.cpp:161:31: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, 0, W, s, 0x17, W);
    ~~~~~~~                   ^
In file included from i_search.cpp:10:
In file included from ./i_search.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
4 warnings generated.
g++ -c i_view.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_view.cpp:156:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveCh(B, ' ', 0x07, X);
        ~~~~~~               ^
i_view.cpp:182:40: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        return DLGGetStr(this, Prompt, BufLen, Str, HistId, 0);
               ~~~~~~~~~               ^~~~~~
i_view.cpp:189:41: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        return DLGGetFile(this, Prompt, BufLen, Str, Flags);
               ~~~~~~~~~~               ^~~~~~
i_view.cpp:215:51: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        rc = DLGPickChoice(this, Title, NSel, ap, Flags);
             ~~~~~~~~~~~~~                        ^~~~~
In file included from i_view.cpp:10:
In file included from ./i_view.h:13:
In file included from ./gui.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c log.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
log.cpp:131:25: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
    os << FillChar('|', myIndentLevel - 1);
          ~~~~~~~~      ^~~~~~~~~~~~~~~~~
1 warning generated.
g++ -c o_buffer.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_buffer.cpp:19:
./o_cvsdiff.h:28:22: warning: 'ECvsDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from o_buffer.cpp:21:
./o_svndiff.h:28:22: warning: 'ESvnDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
o_buffer.cpp:175:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollDown(Event.Msg.Param1);
            ~~~~~~             ~~~~~~~~~~^~~~~~
o_buffer.cpp:179:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollUp(Event.Msg.Param1);
            ~~~~~~           ~~~~~~~~~~^~~~~~
o_buffer.cpp:196:52: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Buffer->SetNearPos(Buffer->CP.Col, Event.Msg.Param1 + ypos);
                ~~~~~~                             ^~~~~~~~~~~~~~~~~~~~~~~
o_buffer.cpp:197:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                SetTop(TP.Col, Event.Msg.Param1);
                ~~~~~~         ~~~~~~~~~~^~~~~~
o_buffer.cpp:203:43: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollRight(Event.Msg.Param1);
            ~~~~~~              ~~~~~~~~~~^~~~~~
o_buffer.cpp:207:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollLeft(Event.Msg.Param1);
            ~~~~~~             ~~~~~~~~~~^~~~~~
o_buffer.cpp:223:36: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Buffer->SetNearPos(Event.Msg.Param1 + xpos, Buffer->CP.Row);
                ~~~~~~             ^~~~~~~~~~~~~~~~~~~~~~~
o_buffer.cpp:224:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                SetTop(Event.Msg.Param1, TP.Row);
                ~~~~~~ ~~~~~~~~~~^~~~~~
o_buffer.cpp:707:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num);
           ~ ^~~~~~~~~
o_buffer.cpp:720:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num);
           ~ ^~~~~~~~~
o_buffer.cpp:753:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                if (PushULong(prev.Row) == 0) return 0;
                    ~~~~~~~~~ ~~~~~^~~
o_buffer.cpp:754:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                if (PushULong(prev.Col) == 0) return 0;
                    ~~~~~~~~~ ~~~~~^~~
o_buffer.cpp:780:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(p.Row) == 0) return 0;
                ~~~~~~~~~ ~~^~~
o_buffer.cpp:781:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(p.Col) == 0) return 0;
                ~~~~~~~~~ ~~^~~
o_buffer.cpp:1189:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_GLOBAL;
                    ~~ ^~~~~~~~~~~~~~
o_buffer.cpp:1199:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_GLOBAL;
                    ~~ ^~~~~~~~~~~~~~
o_buffer.cpp:1209:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_GLOBAL;
                    ~~ ^~~~~~~~~~~~~~
o_buffer.cpp:1210:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_ALL;
                    ~~ ^~~~~~~~~~~
o_buffer.cpp:1259:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num);
           ~ ^~~~~~~~~
o_buffer.cpp:1283:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num) - 1;
           ~ ^~~~~~~~~~~~~
o_buffer.cpp:1298:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num) - 1;
           ~ ^~~~~~~~~~~~~
o_buffer.cpp:1673:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                size_t length = wordEnd - wordBegin;
                       ~~~~~~   ^~~~~~~~~~~~~~~~~~~
In file included from o_buffer.cpp:11:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
25 warnings generated.
g++ -c o_buflist.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_buflist.cpp:53:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, Width, BList[Line] + Col, color, Width);
            ~~~~~~~                                        ^~~~~
o_buflist.cpp:78:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    BList = (char **) malloc(sizeof(char *) * BCount);
                             ~~~~~~           ^~~~~~
o_buflist.cpp:194:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            switch (kbCode(Event.Key.Code)) {
                    ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
o_buflist.cpp:239:86: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (BList[i][j] == SearchString[0] && strnicmp(SearchString, BList[i]+j, SearchLen) == 0) {
                                                  ~~~~~~~~                           ^~~~~~~~~
In file included from o_buflist.cpp:11:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c o_cvs.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_cvs.cpp:9:
./o_cvs.h:34:22: warning: 'ECvs::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from o_cvs.cpp:9:
In file included from ./o_cvs.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c o_cvsbase.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_cvsbase.cpp:94:19: warning: implicit conversion loses integer precision: 'int' to 'char' [-Wconversion]
        l->Status=status;
                 ~^~~~~~
o_cvsbase.cpp:97:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Lines=(CvsLine **)realloc (Lines,sizeof (CvsLine *)*LineCount);
                                         ~~~~~~             ^~~~~~~~~
o_cvsbase.cpp:164:14: warning: implicit conversion loses integer precision: 'ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
        rc = gui->ReadPipe(PipeId, MsgBuf + BufLen, sizeof(MsgBuf) - BufLen);
           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
o_cvsbase.cpp:170:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            BufLen += rc;
                   ~~ ^~
o_cvsbase.cpp:172:9: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    l = max - 1;
      ~ ^~~~~~~
o_cvsbase.cpp:173:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (BufLen - BufPos < l)
        ~~~~~~   ^~~~~~
o_cvsbase.cpp:174:13: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        l = BufLen - BufPos;
          ~ ^~~~~~~~~~~~~~~
o_cvsbase.cpp:174:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        l = BufLen - BufPos;
            ~~~~~~   ^~~~~~
o_cvsbase.cpp:176:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    p = (char *)memchr(MsgBuf + BufPos, '\n', l);
                ~~~~~~                        ^
o_cvsbase.cpp:180:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        l = strlen(Line);
          ~ ^~~~~~~~~~~~
o_cvsbase.cpp:183:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        BufPos = p + 1 - MsgBuf;
               ~ ^~~~~~~~~~~~~~
o_cvsbase.cpp:186:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
                                         ~~~~~~   ^~~~~~
o_cvsbase.cpp:187:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        BufLen -= BufPos;
               ~~ ^~~~~~
o_cvsbase.cpp:194:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(Line, MsgBuf + BufPos, l);
        ~~~~~~                        ^
o_cvsbase.cpp:201:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
                                     ~~~~~~   ^~~~~~
o_cvsbase.cpp:202:15: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    BufLen -= BufPos;
           ~~ ^~~~~~
o_cvsbase.cpp:321:17: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            len=UnTabStr (str,sizeof (str),Lines[Line]->Msg,strlen (Lines[Line]->Msg));
               ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
o_cvsbase.cpp:322:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (len>Col) MoveStr (B,0,Width,str+Col,color,Width);
                         ~~~~~~~                          ^~~~~
In file included from o_cvsbase.cpp:10:
In file included from ./o_cvsbase.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
19 warnings generated.
g++ -c o_cvsdiff.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_cvsdiff.cpp:10:
./o_cvsdiff.h:28:22: warning: 'ECvsDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
o_cvsdiff.cpp:40:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    CurrLine=strtol (line+4,&end,10)-1;
            ~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from o_cvsdiff.cpp:10:
In file included from ./o_cvsdiff.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
3 warnings generated.
g++ -c o_directory.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_directory.cpp:55:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', color, Width);
    ~~~~~~                ^~~~~
o_directory.cpp:120:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, Width, s + Col, color, Width);
            ~~~~~~~                              ^~~~~
o_directory.cpp:171:58: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            Files = (FileInfo **)realloc((void *)Files, ((FCount | 255) + 1) * sizeof(FileInfo *));
                                                        ~^~~~~~~~~~~~~~~~~~
o_directory.cpp:181:26: warning: implicit conversion changes signedness: 'off_t' (aka 'long') to 'unsigned long' [-Wsign-conversion]
            SizeCount += Files[FCount]->Size();
                      ~~ ^~~~~~~~~~~~~~~~~~~~~
o_directory.cpp:202:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(Files, FCount, sizeof(FileInfo *), FileNameCmp);
    ~~~~~        ^~~~~~
o_directory.cpp:276:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (strnicmp(SearchName, Files[i]->Name(), SearchLen) == 0) {
                    ~~~~~~~~                               ^~~~~~~~~
o_directory.cpp:288:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (strnicmp(SearchName, Files[i]->Name(), SearchLen) == 0) {
                    ~~~~~~~~                               ^~~~~~~~~
o_directory.cpp:329:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        LOG << "Key Code: " << kbCode(Event.Key.Code) << ENDLINE;
                               ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
o_directory.cpp:331:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
o_directory.cpp:361:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (strnicmp(SearchName, Files[i]->Name(), SearchLen) == 0) {
                        ~~~~~~~~                               ^~~~~~~~~
In file included from o_directory.cpp:13:
In file included from ./o_directory.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
11 warnings generated.
g++ -c o_list.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_list.cpp:63:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollDown(Event.Msg.Param1);
            ~~~~             ~~~~~~~~~~^~~~~~
o_list.cpp:67:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollUp(Event.Msg.Param1);
            ~~~~           ~~~~~~~~~~^~~~~~
o_list.cpp:83:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                List->TopRow = Event.Msg.Param1;
                             ~ ~~~~~~~~~~^~~~~~
o_list.cpp:89:41: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollRight(Event.Msg.Param1);
            ~~~~              ~~~~~~~~~~^~~~~~
o_list.cpp:93:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollLeft(Event.Msg.Param1);
            ~~~~             ~~~~~~~~~~^~~~~~
o_list.cpp:105:39: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->LeftCol = Event.Msg.Param1;
                          ~ ~~~~~~~~~~^~~~~~
o_list.cpp:260:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, W, ' ', color, W);
            ~~~~~~~~                      ^
o_list.cpp:298:18: warning: implicit conversion changes signedness: 'ChColor' (aka 'unsigned char') to 'char' [-Wsign-conversion]
        SColor = hcStatus_Active;
               ~ ^~~~~~~~~~~~~~~
o_list.cpp:300:18: warning: implicit conversion changes signedness: 'ChColor' (aka 'unsigned char') to 'char' [-Wsign-conversion]
        SColor = hcStatus_Normal;
               ~ ^~~~~~~~~~~~~~~
o_list.cpp:301:20: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
    MoveCh(B, ' ', SColor, W);
    ~~~~~~         ^~~~~~
o_list.cpp:301:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', SColor, W);
    ~~~~~~                 ^
o_list.cpp:304:43: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
            MoveStr(B, 0, W, List->Title, SColor, W);
            ~~~~~~~                       ^~~~~~
o_list.cpp:304:51: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, W, List->Title, SColor, W);
            ~~~~~~~                               ^
o_list.cpp:306:20: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
        ~~~~~~~    ^~~~~~~~~~~~~
o_list.cpp:306:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
                   ^
o_list.cpp:306:41: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
        ~~~~~~~                         ^~~~~~
o_list.cpp:306:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
        ~~~~~~~                                 ^
o_list.cpp:308:40: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveStr(B, 0, W, View->CurMsg, SColor, W);
        ~~~~~~~                        ^~~~~~
o_list.cpp:308:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, W, View->CurMsg, SColor, W);
        ~~~~~~~                                ^
o_list.cpp:514:11: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    len = GetRowLength(Row);
        ~ ^~~~~~~~~~~~~~~~~
In file included from o_list.cpp:10:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
21 warnings generated.
g++ -c o_messages.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_messages.cpp:196:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        ShowError(View->Next, Row);
        ~~~~~~~~~             ^~~
o_messages.cpp:243:70: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        rc = gui->ReadPipe(PipeId, MsgBuf + BufLen, sizeof(MsgBuf) - BufLen);
                                                    ~~~~~~           ^~~~~~
o_messages.cpp:253:9: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    l = maxim - 1;
      ~ ^~~~~~~~~
o_messages.cpp:257:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    p = (char *)memchr(MsgBuf + BufPos, '\n', l);
                ~~~~~~                        ^
o_messages.cpp:260:48: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        UnEscStr(Line, maxim, MsgBuf + BufPos, p - (MsgBuf + BufPos));
        ~~~~~~~~                               ^~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:262:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        l = strlen(Line);
          ~ ^~~~~~~~~~~~
o_messages.cpp:265:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        BufPos = p + 1 - MsgBuf;
               ~ ^~~~~~~~~~~~~~
o_messages.cpp:268:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
        ~~~~~~~                          ^~~~~~~~~~~~~~~
o_messages.cpp:276:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        UnEscStr(Line, maxim, MsgBuf + BufPos, l);
        ~~~~~~~~                               ^
o_messages.cpp:284:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
    ~~~~~~~                          ^~~~~~~~~~~~~~~
o_messages.cpp:354:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                unsigned s = RM.Close[n] - RM.Open[n];
                         ~   ^~~~~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:362:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                s = RM.Close[n] - RM.Open[n];
                  ~ ^~~~~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:370:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                s = RM.Close[n] - RM.Open[n];
                  ~ ^~~~~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:430:25: warning: implicit conversion loses integer precision: 'size_type' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                    for (unsigned i = DirLevel.size(); i-- > 0;) {
                                  ~   ^~~~~~~~~~~~~~~
o_messages.cpp:473:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
            ~~~~~~~ ^~~
o_messages.cpp:473:50: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
                                         ~~~~~~~ ^~~
o_messages.cpp:474:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            ShowError(V, Row);
            ~~~~~~~~~    ^~~
o_messages.cpp:491:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
            ~~~~~~~ ^~~
o_messages.cpp:491:50: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
                                         ~~~~~~~ ^~~
o_messages.cpp:492:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            ShowError(V, Row);
            ~~~~~~~~~    ^~~
o_messages.cpp:533:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (Col < int(ErrList[Line]->text.size())) {
                      ~~~~~~~ ^~~~
o_messages.cpp:538:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                           ErrList[Line]->text.c_str(),
                           ~~~~~~~ ^~~~
o_messages.cpp:539:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                           ErrList[Line]->text.size());
                           ~~~~~~~ ^~~~
o_messages.cpp:542:56: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveStr(B, 0, Width, str + Col, color, Width);
                ~~~~~~~                                ^~~~~
o_messages.cpp:548:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        return strdup(ErrList[Line]->text.c_str());
                      ~~~~~~~ ^~~~
o_messages.cpp:554:64: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    return (Line >= 0 && Line < (int)ErrList.size()) ? ErrList[Line]->hilit : 0;
                                                       ~~~~~~~ ^~~~
o_messages.cpp:565:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    ShowError(View, Row);
    ~~~~~~~~~       ^~~
o_messages.cpp:572:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
            && (!ErrList[Line]->file.empty()
                 ~~~~~~~ ^~~~
o_messages.cpp:573:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                || ErrList[Line]->line != -1)) ? 1 : 0;
                   ~~~~~~~ ^~~~
o_messages.cpp:605:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        return ErrList[ARow]->text.size();
               ~~~~~~~ ^~~~
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
o_messages.cpp:109:26: note: in instantiation of member function 'fte::vector<Error *>::size' requested here
    assert(err < ErrList.size());
                         ^
/usr/include/assert.h:92:5: note: expanded from:
  ((expr)                                                               \
    ^
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<Error *>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
o_messages.cpp:208:13: note: in instantiation of member function 'fte::vector<Error *>::push_back' requested here
    ErrList.push_back(new Error(file, line, msg, text, hilit));
            ^
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<fte::string>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
o_messages.cpp:424:13: note: in instantiation of member function 'fte::vector<fte::string>::push_back' requested here
                        DirLevel.push_back(fn);
                                 ^
34 warnings generated.
g++ -c o_model.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c o_modemap.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_modemap.cpp:22:66: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        BList = (char **)realloc((void *)BList, sizeof(char *) * BCount);
                                                ~~~~~~           ^~~~~~
o_modemap.cpp:156:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, Width, BList[Line] + Col, color, Width);
            ~~~~~~~                                        ^~~~~
2 warnings generated.
g++ -c o_routine.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_routine.cpp:79:58: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            MoveStr(B, 0, Width, str + Col, color, len - Col);
                                                   ~~~   ^~~
In file included from o_routine.cpp:10:
In file included from ./o_routine.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c o_svn.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_svn.cpp:9:
./o_svn.h:32:22: warning: 'ESvn::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
In file included from o_svn.cpp:9:
In file included from ./o_svn.h:12:
In file included from ./o_svnbase.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c o_svnbase.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_svnbase.cpp:97:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Lines=(SvnLine **)realloc (Lines,sizeof (SvnLine *)*LineCount);
                                         ~~~~~~             ^~~~~~~~~
o_svnbase.cpp:166:70: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        rc = gui->ReadPipe(PipeId, MsgBuf + BufLen, sizeof(MsgBuf) - BufLen);
                                                    ~~~~~~           ^~~~~~
o_svnbase.cpp:174:9: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    l = max - 1;
      ~ ^~~~~~~
o_svnbase.cpp:178:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    p = (char *)memchr(MsgBuf + BufPos, '\n', l);
                ~~~~~~                        ^
o_svnbase.cpp:182:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        l = strlen(Line);
          ~ ^~~~~~~~~~~~
o_svnbase.cpp:185:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        BufPos = p + 1 - MsgBuf;
               ~ ^~~~~~~~~~~~~~
o_svnbase.cpp:188:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
        ~~~~~~~                          ^~~~~~~~~~~~~~~
o_svnbase.cpp:196:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(Line, MsgBuf + BufPos, l);
        ~~~~~~                        ^
o_svnbase.cpp:203:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
    ~~~~~~~                          ^~~~~~~~~~~~~~~
o_svnbase.cpp:323:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if ((int)len > Col) MoveStr (B,0,Width,str+Col,color,Width);
                                ~~~~~~~                          ^~~~~
In file included from o_svnbase.cpp:10:
In file included from ./o_svnbase.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
11 warnings generated.
g++ -c o_svndiff.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_svndiff.cpp:10:
./o_svndiff.h:28:22: warning: 'ESvnDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
In file included from o_svndiff.cpp:10:
In file included from ./o_svndiff.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c stl_string.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
stl_string.cpp:191:18: warning: operand of ? changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    return (p) ? p - str : npos;
               ~ ^~~~~~~
stl_string.cpp:197:18: warning: operand of ? changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    return (p) ? p - str : npos;
               ~ ^~~~~~~
stl_string.cpp:203:18: warning: operand of ? changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    return (p) ? p - str : npos;
               ~ ^~~~~~~
stl_string.cpp:245:16: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        string tmp(s, r);
               ~~~    ^
4 warnings generated.
g++ -c s_direct.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_direct.cpp:306:19: warning: use of logical '&&' with constant operand [-Wconstant-logical-operand]
        if (Flags && ffLINK)
                  ^  ~~~~~~
s_direct.cpp:306:19: note: use '&' for a bitwise operation
        if (Flags && ffLINK)
                  ^~
                  &
s_direct.cpp:306:19: note: remove constant to silence this warning
s_direct.cpp:339:31: warning: implicit conversion changes signedness: '__mode_t' (aka 'unsigned int') to 'int' [-Wsign-conversion]
                           st.st_mode
                           ~~~^~~~~~~
2 warnings generated.
g++ -c s_util.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_util.cpp:40:18: warning: implicit conversion loses integer precision: 'ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
    while ((rd = read(fd1, buffer, BUF_SZ)) > 0) {
               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
s_util.cpp:41:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (write(fd2, buffer, rd) != rd) {
            ~~~~~              ^~
s_util.cpp:99:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbEsc) { *Ch = 27; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:100:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbEnter) { *Ch = 13; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:101:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == (kbEnter | kfCtrl)) { *Ch = 10; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:102:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbBackSp) { *Ch = 8; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:103:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == (kbBackSp | kfCtrl)) { *Ch = 127; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:104:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbTab) { *Ch = 9; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:105:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbDel) { *Ch = 127; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
In file included from s_util.cpp:11:
In file included from ./s_util.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
10 warnings generated.
g++ -c view.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from view.cpp:20:
./o_cvs.h:34:22: warning: 'ECvs::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from view.cpp:21:
./o_cvsdiff.h:28:22: warning: 'ECvsDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from view.cpp:26:
./o_svn.h:32:22: warning: 'ESvn::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
In file included from view.cpp:27:
./o_svndiff.h:28:22: warning: 'ESvnDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
view.cpp:522:35: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveChar(B, 0, Cols, ' ', SColor, Cols);
        ~~~~~~~~                  ^~~~~~
view.cpp:522:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveChar(B, 0, Cols, ' ', SColor, Cols);
        ~~~~~~~~                          ^~~~
view.cpp:523:37: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveStr(B, 0, Cols, CurMsg, SColor, Cols);
        ~~~~~~~                     ^~~~~~
view.cpp:523:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, Cols, CurMsg, SColor, Cols);
        ~~~~~~~                             ^~~~
In file included from view.cpp:11:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
9 warnings generated.
g++ -c e_unix.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_unix.cpp:12:
In file included from ./c_bind.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c memicmp.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c clip_x11.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
clip_x11.cpp:35:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            SSBuffer->InsertLine(P, i - j - dx, data + j);
            ~~~~~~~~                ^~~~~~~~~~
clip_x11.cpp:45:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        SSBuffer->InsText(P.Row, P.Col, i - j - dx, data + j);
        ~~~~~~~~                        ^~~~~~~~~~
clip_x11.cpp:61:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        char *n = (char *)realloc(p, l + L->Count + 1);
                                     ^
In file included from clip_x11.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
4 warnings generated.
g++ -c con_i18n.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c con_x11.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
con_x11.cpp:242:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                clr.pixel = j;
                          ~ ^
con_x11.cpp:262:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    pix = j;
                        ~ ^
con_x11.cpp:289:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                         ((Colors[0].blue & 0xff00) << 8)
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:478:32: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
    XSelectInput(display, win, mask);
    ~~~~~~~~~~~~               ^~~~
con_x11.cpp:589:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        long *iconBuffer = (long *)malloc(iconBufferSize * sizeof(long) + 16);
                                          ^~~~~~~~~~~~~~
con_x11.cpp:616:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    XResizeWindow(display, win, ScreenCols * FontCX, ScreenRows * FontCY);
    ~~~~~~~~~~~~~               ^~~~~~~~~~~~~~~~~~~
con_x11.cpp:616:54: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    XResizeWindow(display, win, ScreenCols * FontCX, ScreenRows * FontCY);
    ~~~~~~~~~~~~~                                    ^~~~~~~~~~~~~~~~~~~
con_x11.cpp:626:50: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    XFillRectangle(display, win, colorXGC->GetGC(clr),
                                 ~~~~~~~~        ^~~
con_x11.cpp:627:44: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                   X * FontCX, Y * FontCY, W * FontCX,
                                           ^~~~~~~~~~
con_x11.cpp:628:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                   H * FontCY / ((clr == 13) ? 2 : 1));
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:645:60: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            XDrawImageString(display, win, colorXGC->GetGC(attr),
                                           ~~~~~~~~        ^~~~
con_x11.cpp:651:72: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            XmbDrawImageString(display, win, font_set, colorXGC->GetGC(attr),
                                                       ~~~~~~~~        ^~~~
con_x11.cpp:697:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', 0x07, ScreenCols);
    ~~~~~~               ^~~~~~~~~~
con_x11.cpp:755:36: warning: implicit conversion changes signedness: 'int' to 'const unsigned int' [-Wsign-conversion]
                const unsigned p = x + l;
                               ~   ^~~~~
con_x11.cpp:769:31: warning: implicit conversion changes signedness: 'TChar' (aka 'unsigned char') to 'char' [-Wsign-conversion]
                default: ch = Cell[p].GetChar();
                            ~ ^~~~~~~~~~~~~~~~~
con_x11.cpp:801:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(Cell, CursorXYPos(X, Y + i), W * sizeof(TCell));
                                            ^
con_x11.cpp:834:19: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                  ^~~~~~~~~~
con_x11.cpp:834:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                              ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:838:74: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memcpy(CursorXYPos(X, Y + l), CursorXYPos(X, Y + l + Count), W * sizeof(TCell));
                                                                         ^
con_x11.cpp:848:19: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                  ^~~~~~~~~~
con_x11.cpp:848:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                              ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:852:74: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memcpy(CursorXYPos(X, Y + l), CursorXYPos(X, Y + l - Count), W * sizeof(TCell));
                                                                         ^
con_x11.cpp:869:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(NewBuffer + X * i, CursorXYPos(0, i), MX * sizeof(TCell));
                                                     ^~
con_x11.cpp:1124:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                key += ('A' - 'a');
                    ~~  ^~~~~~~~~
con_x11.cpp:1138:35: warning: implicit conversion changes signedness: 'long' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
                Event->Key.Code = k | myState;
                                ~ ^~~~~~~~~~~
con_x11.cpp:1206:42: warning: implicit conversion changes signedness: 'short' to 'unsigned short' [-Wsign-conversion]
                    Event->Mouse.Count = ++LastClickCount;
                                       ~ ^~~~~~~~~~~~~~~~
con_x11.cpp:1360:34: warning: implicit conversion changes signedness: 'short' to 'unsigned short' [-Wsign-conversion]
                    rect.width = (short) event.xexpose.width;
                               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1361:34: warning: implicit conversion changes signedness: 'short' to 'unsigned short' [-Wsign-conversion]
                    rect.height= (short) event.xexpose.height;
                               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1390:43: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                            event.xbutton.button, event.xbutton.state,
                            ~~~~~~~~~~~~~~^~~~~~
con_x11.cpp:1390:65: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                            event.xbutton.button, event.xbutton.state,
                                                  ~~~~~~~~~~~~~~^~~~~
con_x11.cpp:1406:34: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            event1.xkey.state &= ~(ShiftMask | ControlMask | Mod1Mask /* | Mod2Mask*/ | Mod3Mask | Mod4Mask | Mod5Mask);
                              ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1421:54: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                              event.type, event.xkey.state, Event);
                                          ~~~~~~~~~~~^~~~~
con_x11.cpp:1427:46: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                            0, event.xmotion.state, Event, event.xmotion.time);
                               ~~~~~~~~~~~~~~^~~~~
con_x11.cpp:1514:94: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                  (CurSelectionData[clip] ? CurSelectionData[clip] : empty), CurSelectionLen[clip], False);
                                                                                             ^~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1581:22: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    CursorLastTime = tv.tv_sec * 1000 + tv.tv_usec / 1000;
                   ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1815:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        buffer_len = *(int *)d;
                   ~ ^~~~~~~~~
con_x11.cpp:1836:65: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
            XGetWindowProperty(display, win, prop_selection, 0, nitems + bytes_after, True, type,
            ~~~~~~~~~~~~~~~~~~                                  ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1868:65: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
        if (XGetWindowProperty(display, win, prop_selection, 0, nitems + bytes_after,
            ~~~~~~~~~~~~~~~~~~                                  ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1907:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            *data = (char *)malloc(*len + 1);
                            ~~~~~~ ^~~~~~~~
con_x11.cpp:1931:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (!(*data = (char *) malloc(CurSelectionLen[clipboard])))
                               ~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1933:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(*data, CurSelectionData[clipboard], CurSelectionLen[clipboard]);
        ~~~~~~                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1963:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    CurSelectionData[clipboard] = (unsigned char *)malloc(len + 1);
                                                   ~~~~~~ ^~~~~~~
con_x11.cpp:1971:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memcpy(CurSelectionData[clipboard], data, CurSelectionLen[clipboard]);
    ~~~~~~                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
43 warnings generated.
g++ -c g_nodlg.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c g_text.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g_text.cpp:804:14: warning: explicitly assigning a variable of type 'GView *' to itself [-Wself-assign]
        view = view;
        ~~~~ ^ ~~~~
g_text.cpp:1201:46: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                    if (::ExecVertMenu(x, y, id, E, 0) != 1) {
                        ~~                   ^~
2 warnings generated.
g++ -c g_unix_pipe.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c menu_text.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
menu_text.cpp:49:61: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            if (X >= pos && X <= pos + (int)len + 1) return i;
                                                     ~~~~~~ ^
menu_text.cpp:67:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, Cols, ' ', hcMenu_Background, Cols);
    ~~~~~~~~                                     ^~~~
menu_text.cpp:104:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    Y = Menus[id].Count;
      ~ ~~~~~~~~~~^~~~~
menu_text.cpp:128:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, w, ConGetDrawChar(DCH_H), hcMenu_Background, w);
    ~~~~~~~~                                                    ^
menu_text.cpp:151:44: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, w, ' ', color1, w);
            ~~~~~~~~                       ^
menu_text.cpp:162:73: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, w, ConGetDrawChar(DCH_H), hcMenu_Background, w);
            ~~~~~~~~                                                    ^
menu_text.cpp:167:22: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        ConPutBox(x, y + i + 1, w, 1, B);
        ~~~~~~~~~    ^~~~~~~~~
menu_text.cpp:167:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        ConPutBox(x, y + i + 1, w, 1, B);
                     ^
menu_text.cpp:169:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, w, ConGetDrawChar(DCH_H), hcMenu_Background, w);
    ~~~~~~~~                                                    ^
menu_text.cpp:172:18: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    ConPutBox(x, y + Menus[id].Count + 1, w, 1, B);
    ~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~
menu_text.cpp:172:18: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    ConPutBox(x, y + Menus[id].Count + 1, w, 1, B);
                 ^
menu_text.cpp:229:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    c = (PCell) malloc(w * h * sizeof(TCell));
                       ^~~~~
menu_text.cpp:285:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            switch (kbCode(E.Key.Code)) {
                    ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
menu_text.cpp:287:41: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            case kbEnd: cur = Menus[id].Count;
                            ~ ~~~~~~~~~~^~~~~
menu_text.cpp:294:44: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                        if (cur < 0) cur = Menus[id].Count - 1;
                                         ~ ^~~~~~~~~~~~~~~~~~~
menu_text.cpp:315:62: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                        E.Msg.Command = Menus[id].Items[cur].Cmd;
                                      ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:344:82: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                                            E.Msg.Command = Menus[id].Items[cur].Cmd;
                                                          ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:450:58: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                    E.Msg.Command = Menus[id].Items[cur].Cmd;
                                  ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:539:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            switch (kbCode(E.Key.Code)) {
                    ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
menu_text.cpp:540:41: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            case kbEnd: cur = Menus[id].Count;
                            ~ ~~~~~~~~~~^~~~~
menu_text.cpp:547:44: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                        if (cur < 0) cur = Menus[id].Count - 1;
                                         ~ ^~~~~~~~~~~~~~~~~~~
menu_text.cpp:568:62: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                        E.Msg.Command = Menus[id].Items[cur].Cmd;
                                      ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:592:82: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                                            E.Msg.Command = Menus[id].Items[cur].Cmd;
                                                          ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:640:58: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                    E.Msg.Command = Menus[id].Items[cur].Cmd;
                                  ~ ~~~~~~~~~~~~~~~~~~~~~^~~
24 warnings generated.
g++ -o xfte -g   commands.o c_bind.o c_color.o c_config.o c_desktop.o c_hilit.o c_history.o c_mode.o egui.o e_block.o e_buffer.o e_cmds.o e_cvslog.o e_file.o e_fold.o e_line.o e_loadsave.o e_mark.o e_print.o e_redraw.o e_regex.o e_search.o e_svnlog.o e_tags.o e_trans.o e_undo.o fte.o gui.o g_draw.o g_menu.o h_ada.o h_c.o h_catbs.o h_fte.o h_ipf.o h_make.o h_msg.o h_pascal.o h_perl.o h_plain.o h_rexx.o h_sh.o h_simple.o h_tex.o indent.o i_ascii.o i_choice.o i_complete.o i_input.o i_key.o i_modelview.o i_oview.o i_search.o i_view.o log.o o_buffer.o o_buflist.o o_cvs.o o_cvsbase.o o_cvsdiff.o o_directory.o o_list.o o_messages.o o_model.o o_modemap.o o_routine.o o_svn.o o_svnbase.o o_svndiff.o stl_string.o s_direct.o s_files.o s_string.o s_util.o view.o e_unix.o memicmp.o clip_x11.o con_i18n.o con_x11.o g_nodlg.o g_text.o g_unix_pipe.o menu_text.o  -lX11  -lXpm 
g++ -c clip_no.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c con_linux.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
con_linux.cpp:110:11: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
            ch = fromScreen[(unsigned char)s[n + (BYTE_ORDER == BIG_ENDIAN)]];
               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:115:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        p->Set(ch, s[n + (BYTE_ORDER != BIG_ENDIAN)]);
        ~      ^~
con_linux.cpp:115:13: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        p->Set(ch, s[n + (BYTE_ORDER != BIG_ENDIAN)]);
        ~          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:128:36: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
            c[BYTE_ORDER == BIG_ENDIAN] = toScreen[(unsigned char)p[n].GetChar()];
                                        ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:131:36: warning: implicit conversion changes signedness: 'TChar' (aka 'unsigned char') to 'char' [-Wsign-conversion]
            c[BYTE_ORDER == BIG_ENDIAN] = p[n].GetChar();
                                        ~ ^~~~~~~~~~~~~~
con_linux.cpp:132:32: warning: implicit conversion changes signedness: 'TAttr' (aka 'unsigned char') to 'char' [-Wsign-conversion]
        c[BYTE_ORDER != BIG_ENDIAN] = p[n].GetAttr();
                                    ~ ^~~~~~~~~~~~~~
con_linux.cpp:135:27: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return write(fd, buf, c - buf);
           ~~~~~          ^~~~~~~
con_linux.cpp:141:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
            ~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:141:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                   ^~~~~~~~~~
con_linux.cpp:141:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                                ^~~~~~~~~~
con_linux.cpp:154:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
            ~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:154:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                   ^~~~~~~~~~
con_linux.cpp:154:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                                ^~~~~~~~~~
con_linux.cpp:255:39: warning: implicit conversion loses integer precision: 'unsigned int' to 'unsigned char' [-Wconversion]
            fromScreen[toScreen[c]] = c;
                                    ~ ^
con_linux.cpp:264:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    newt.c_lflag &= ~ (ICANON | ECHO | ISIG);
                 ~~ ^~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:346:20: warning: implicit conversion changes signedness: 'int' to 'tcflag_t' (aka 'unsigned int') [-Wsign-conversion]
    newt.c_lflag = ~ (ICANON | ECHO | ISIG);
                 ~ ^~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:394:31: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        conwrite(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
        ~~~~~~~~              ^
con_linux.cpp:394:40: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conwrite(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                      ~^~~~~
con_linux.cpp:394:61: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conwrite(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                      ~                     ^
con_linux.cpp:404:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        conread(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
        ~~~~~~~              ^
con_linux.cpp:404:39: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conread(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                     ~^~~~~
con_linux.cpp:404:60: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conread(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                     ~                     ^
con_linux.cpp:422:15: warning: implicit conversion changes signedness: 'TChar' (aka 'unsigned char') to 'char' [-Wsign-conversion]
    MoveCh(B, Cell.GetChar(), Cell.GetAttr(), W);
    ~~~~~~    ^~~~~~~~~~~~~~
con_linux.cpp:422:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, Cell.GetChar(), Cell.GetAttr(), W);
    ~~~~~~                                    ^
con_linux.cpp:434:12: error: variable length array of non-POD element type 'TCell'
    TCell C[W * H];
           ^
con_linux.cpp:438:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', Fill, W);
    ~~~~~~               ^
con_linux.cpp:459:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (X) *X = VideoCols;
              ~ ^~~~~~~~~
con_linux.cpp:460:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (Y) *Y = VideoRows;
              ~ ^~~~~~~~~
con_linux.cpp:468:49: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (X >= 0 && X < int(VideoCols)) CursorX = X;
                                              ~ ^
con_linux.cpp:469:49: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (Y >= 0 && Y < int(VideoRows)) CursorY = Y;
                                              ~ ^
con_linux.cpp:479:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (X) *X = CursorX;
              ~ ^~~~~~~
con_linux.cpp:480:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (Y) *Y = CursorY;
              ~ ^~~~~~~
con_linux.cpp:665:20: warning: implicit conversion loses integer precision: 'int' to 'unsigned char' [-Wconversion]
    kbe.kb_index = key;
                 ~ ^~~
con_linux.cpp:790:28: warning: implicit conversion loses integer precision: 'int' to 'unsigned char' [-Wconversion]
            kbe.kb_index = key;
                         ~ ^~~
con_linux.cpp:791:28: warning: implicit conversion loses integer precision: 'int' to 'unsigned char' [-Wconversion]
            kbe.kb_table = shift_final;
                         ~ ^~~~~~~~~~~
con_linux.cpp:805:27: warning: implicit conversion changes signedness: 'int' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
                KeyCode = toupper(KeyCode);
                        ~ ^~~~~~~~~~~~~~~~
con_linux.cpp:805:35: warning: implicit conversion loses integer precision: 'TKeyCode' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                KeyCode = toupper(KeyCode);
                          ~~~~~~~ ^~~~~~~
con_linux.cpp:838:16: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    KeyCode |= ShiftFlags;
            ~~ ^~~~~~~~~~
con_linux.cpp:852:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Event->Key.Code = KeyCode & ~kfKeyUp;
                          ~~~~~~~   ^~~~~~~~
con_linux.cpp:864:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event->Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
con_linux.cpp:925:42: warning: implicit conversion loses integer precision: 'unsigned int' to 'short' [-Wconversion]
        if (e.x >= int(VideoCols)) e.x = VideoCols - 1;
                                       ~ ^~~~~~~~~~~~~
con_linux.cpp:926:42: warning: implicit conversion loses integer precision: 'unsigned int' to 'short' [-Wconversion]
        if (e.y >= int(VideoRows)) e.y = VideoRows - 1;
                                       ~ ^~~~~~~~~~~~~
con_linux.cpp:962:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    SavedScreen = (PCell) malloc(SavedX * SavedY * sizeof(PCell));
                                 ^~~~~~~~~~~~~~~
con_linux.cpp:1065:12: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
    return fromScreen[(unsigned char)tab[idx]];
    ~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
43 warnings and 1 error generated.
make[1]: *** [con_linux.o] Error 1
make[1]: Leaving directory `/build/fte-ncL6Ki/fte-0.50.2b6/src'
make: *** [build] Error 2
dpkg-buildpackage: error: debian/rules build gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20120113-0247

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /var/lib/schroot/mount/lsid64b-905dc1a6-f878-41d0-8b6d-abd78b4debb0/build/fte-ncL6Ki
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Architecture: amd64
Build-Space: 15644
Build-Time: 18
Distribution: lsid64b
Fail-Stage: build
Install-Time: 9
Job: fte_0.50.2b6-1
Package: fte
Package-Time: 39
Source-Version: 0.50.2b6-1
Space: 15644
Status: attempted
Version: 0.50.2b6-1
────────────────────────────────────────────────────────────────────────────────
Finished at 20120113-0247
Build needed 00:00:39, 15644k disc space
DC-Message: Failed, but took only 41.473048. Retrying, you never know.
Requested exclusive mode, but other builds running.
Requested exclusive mode, but other builds running.
sbuild (Debian sbuild) 0.62.2 (05 Apr 2011) on stremi-22.reims.grid5000.fr

╔══════════════════════════════════════════════════════════════════════════════╗
║ fte 0.50.2b6-1 (amd64)                                     13 Jan 2012 02:48 ║
╚══════════════════════════════════════════════════════════════════════════════╝

Package: fte
Version: 0.50.2b6-1
Source Version: 0.50.2b6-1
Distribution: lsid64b
Architecture: amd64


┌──────────────────────────────────────────────────────────────────────────────┐
│ Update chroot                                                                │
└──────────────────────────────────────────────────────────────────────────────┘

Ign http://localhost sid InRelease
Get:1 http://localhost sid Release.gpg [836 B]
Get:2 http://localhost sid Release [188 kB]
Ign http://localhost sid/main Sources/DiffIndex
Ign http://localhost sid/main amd64 Packages/DiffIndex
Ign http://localhost sid/main TranslationIndex
Get:3 http://localhost sid/main Sources [7544 kB]
Get:4 http://localhost sid/main amd64 Packages [10.4 MB]
Ign http://localhost sid/main Translation-en
Fetched 18.2 MB in 8s (2186 kB/s)
Reading package lists...
Reading package lists...
Building dependency tree...
Reading state information...
The following packages have been kept back:
  clang cpp-4.6 g++-4.6 gcc-4.6 gcc-4.6-base libgcc1 libgomp1 libquadmath0
  libstdc++6 libstdc++6-4.6-dev
0 upgraded, 0 newly installed, 0 to remove and 10 not upgraded.

┌──────────────────────────────────────────────────────────────────────────────┐
│ Fetch source files                                                           │
└──────────────────────────────────────────────────────────────────────────────┘


Check APT
─────────

Checking available source versions...

Download source files with APT
──────────────────────────────

Reading package lists...
Building dependency tree...
Reading state information...
Need to get 611 kB of source archives.
Get:1 http://localhost/debian/ sid/main fte 0.50.2b6-1 (dsc) [1217 B]
Get:2 http://localhost/debian/ sid/main fte 0.50.2b6-1 (tar) [598 kB]
Get:3 http://localhost/debian/ sid/main fte 0.50.2b6-1 (diff) [11.6 kB]
Fetched 611 kB in 0s (25.4 MB/s)
Download complete and in download only mode

Check arch
──────────

Merged Build-Depends: build-essential, fakeroot
Filtered Build-Depends: build-essential, fakeroot
dpkg-deb: building package `sbuild-build-depends-core-dummy' in `/build/fte-3TmUY8/resolver-23cnP7/apt_archive/sbuild-build-depends-core-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install core build dependencies (apt-based resolver)                         │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following NEW packages will be installed:
  sbuild-build-depends-core-dummy
0 upgraded, 1 newly installed, 0 to remove and 10 not upgraded.
Need to get 0 B/704 B of archives.
After this operation, 0 B of additional disk space will be used.
WARNING: The following packages cannot be authenticated!
  sbuild-build-depends-core-dummy
Authentication warning overridden.
Selecting previously unselected package sbuild-build-depends-core-dummy.
(Reading database ... 10821 files and directories currently installed.)
Unpacking sbuild-build-depends-core-dummy (from .../sbuild-build-depends-core-dummy.deb) ...
Setting up sbuild-build-depends-core-dummy (0.invalid.0) ...
Cannot open /var/lib/schroot/mount/lsid64b-8da0465f-b47c-45bc-9ff2-65e75410b08b/etc/lsb-release: No such file or directory
Merged Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev | libc-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 5.0.0), perl5, libx11-dev, libxt-dev, libgpmg1-dev, x11proto-core-dev, libncurses5-dev, libslang2-dev, patch, libxpm-dev
Filtered Build-Depends: base-files, base-passwd, bash, coreutils, dash, debianutils, diffutils, dpkg, e2fsprogs, findutils, grep, gzip, hostname, ncurses-base, ncurses-bin, perl-base, sed, login, sysvinit-utils, sysvinit, tar, bsdutils, mount, util-linux, libc6-dev, gcc (>= 4:4.4.3), g++ (>= 4:4.4.3), make, dpkg-dev (>= 1.13.5), debhelper (>= 5.0.0), perl5, libx11-dev, libxt-dev, libgpmg1-dev, x11proto-core-dev, libncurses5-dev, libslang2-dev, patch, libxpm-dev
dpkg-deb: building package `sbuild-build-depends-fte-dummy' in `/build/fte-3TmUY8/resolver-TlWlnu/apt_archive/sbuild-build-depends-fte-dummy.deb'.
OK
Reading package lists...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Install fte build dependencies (apt-based resolver)                          │
└──────────────────────────────────────────────────────────────────────────────┘

Installing build dependencies
Reading package lists...
Building dependency tree...
Reading state information...
The following extra packages will be installed:
  bsdmainutils debhelper file gettext gettext-base groff-base html2text
  intltool-debian libcroco3 libglib2.0-0 libgpm-dev libgpm2 libgpmg1-dev
  libice-dev libice6 libmagic1 libncurses5-dev libpcre3 libpipeline1
  libpng12-0 libpng12-dev libpthread-stubs0 libpthread-stubs0-dev
  libslang2-dev libsm-dev libsm6 libtinfo-dev libunistring0 libx11-6
  libx11-data libx11-dev libxau-dev libxau6 libxcb1 libxcb1-dev libxdmcp-dev
  libxdmcp6 libxml2 libxpm-dev libxpm4 libxt-dev libxt6 man-db po-debconf
  x11-common x11proto-core-dev x11proto-input-dev x11proto-kb-dev
  xorg-sgml-doctools xtrans-dev zlib1g-dev
Suggested packages:
  wamerican wordlist whois vacation dh-make gettext-doc groff gpm ncurses-doc
  www-browser libmail-box-perl
Recommended packages:
  curl wget lynx-cur autopoint libglib2.0-data shared-mime-info libx11-doc
  xml-core libmail-sendmail-perl
The following NEW packages will be installed:
  bsdmainutils debhelper file gettext gettext-base groff-base html2text
  intltool-debian libcroco3 libglib2.0-0 libgpm-dev libgpm2 libgpmg1-dev
  libice-dev libice6 libmagic1 libncurses5-dev libpcre3 libpipeline1
  libpng12-0 libpng12-dev libpthread-stubs0 libpthread-stubs0-dev
  libslang2-dev libsm-dev libsm6 libtinfo-dev libunistring0 libx11-6
  libx11-data libx11-dev libxau-dev libxau6 libxcb1 libxcb1-dev libxdmcp-dev
  libxdmcp6 libxml2 libxpm-dev libxpm4 libxt-dev libxt6 man-db po-debconf
  sbuild-build-depends-fte-dummy x11-common x11proto-core-dev
  x11proto-input-dev x11proto-kb-dev xorg-sgml-doctools xtrans-dev zlib1g-dev
0 upgraded, 52 newly installed, 0 to remove and 10 not upgraded.
Need to get 15.8 MB/15.8 MB of archives.
After this operation, 45.1 MB of additional disk space will be used.
WARNING: The following packages cannot be authenticated!
  libpipeline1 libgpm2 libpcre3 libglib2.0-0 libxml2 libcroco3 x11-common
  libice6 libpng12-0 libsm6 libunistring0 libxau6 libxdmcp6 libxcb1
  libx11-data libx11-6 libxpm4 libxt6 bsdmainutils groff-base man-db libmagic1
  file gettext-base html2text gettext intltool-debian po-debconf debhelper
  libgpm-dev libgpmg1-dev xorg-sgml-doctools x11proto-core-dev libice-dev
  libtinfo-dev libncurses5-dev zlib1g-dev libpng12-dev libpthread-stubs0
  libpthread-stubs0-dev libslang2-dev libsm-dev libxau-dev libxdmcp-dev
  x11proto-input-dev x11proto-kb-dev xtrans-dev libxcb1-dev libx11-dev
  libxpm-dev libxt-dev sbuild-build-depends-fte-dummy
Authentication warning overridden.
Get:1 http://localhost/debian/ sid/main libpipeline1 amd64 1.2.0-5 [38.2 kB]
Get:2 http://localhost/debian/ sid/main libgpm2 amd64 1.20.4-4 [35.6 kB]
Get:3 http://localhost/debian/ sid/main libpcre3 amd64 8.12-4 [225 kB]
Get:4 http://localhost/debian/ sid/main libglib2.0-0 amd64 2.30.2-4 [1844 kB]
Get:5 http://localhost/debian/ sid/main libxml2 amd64 2.7.8.dfsg-5.1 [891 kB]
Get:6 http://localhost/debian/ sid/main libcroco3 amd64 0.6.2-2 [122 kB]
Get:7 http://localhost/debian/ sid/main x11-common all 1:7.6+10 [281 kB]
Get:8 http://localhost/debian/ sid/main libice6 amd64 2:1.0.7-2 [56.5 kB]
Get:9 http://localhost/debian/ sid/main libpng12-0 amd64 1.2.46-4 [190 kB]
Get:10 http://localhost/debian/ sid/main libsm6 amd64 2:1.2.0-2 [29.8 kB]
Get:11 http://localhost/debian/ sid/main libunistring0 amd64 0.9.3-5 [434 kB]
Get:12 http://localhost/debian/ sid/main libxau6 amd64 1:1.0.6-4 [17.1 kB]
Get:13 http://localhost/debian/ sid/main libxdmcp6 amd64 1:1.1.0-4 [22.9 kB]
Get:14 http://localhost/debian/ sid/main libxcb1 amd64 1.7-4 [43.7 kB]
Get:15 http://localhost/debian/ sid/main libx11-data all 2:1.4.4-4 [187 kB]
Get:16 http://localhost/debian/ sid/main libx11-6 amd64 2:1.4.4-4 [889 kB]
Get:17 http://localhost/debian/ sid/main libxpm4 amd64 1:3.5.9-4 [48.1 kB]
Get:18 http://localhost/debian/ sid/main libxt6 amd64 1:1.1.1-2 [207 kB]
Get:19 http://localhost/debian/ sid/main bsdmainutils amd64 8.2.3 [208 kB]
Get:20 http://localhost/debian/ sid/main groff-base amd64 1.21-6 [1150 kB]
Get:21 http://localhost/debian/ sid/main man-db amd64 2.6.0.2-3 [1015 kB]
Get:22 http://localhost/debian/ sid/main libmagic1 amd64 5.09-2 [246 kB]
Get:23 http://localhost/debian/ sid/main file amd64 5.09-2 [52.0 kB]
Get:24 http://localhost/debian/ sid/main gettext-base amd64 0.18.1.1-5 [154 kB]
Get:25 http://localhost/debian/ sid/main html2text amd64 1.3.2a-15 [103 kB]
Get:26 http://localhost/debian/ sid/main gettext amd64 0.18.1.1-5 [2080 kB]
Get:27 http://localhost/debian/ sid/main intltool-debian all 0.35.0+20060710.1 [30.8 kB]
Get:28 http://localhost/debian/ sid/main po-debconf all 1.0.16+nmu2 [224 kB]
Get:29 http://localhost/debian/ sid/main debhelper all 8.9.14 [693 kB]
Get:30 http://localhost/debian/ sid/main libgpm-dev amd64 1.20.4-4 [39.8 kB]
Get:31 http://localhost/debian/ sid/main libgpmg1-dev all 1.20.4-4 [24.4 kB]
Get:32 http://localhost/debian/ sid/main xorg-sgml-doctools all 1:1.10-1 [24.1 kB]
Get:33 http://localhost/debian/ sid/main x11proto-core-dev all 7.0.22-1 [323 kB]
Get:34 http://localhost/debian/ sid/main libice-dev amd64 2:1.0.7-2 [143 kB]
Get:35 http://localhost/debian/ sid/main libtinfo-dev amd64 5.9-4 [103 kB]
Get:36 http://localhost/debian/ sid/main libncurses5-dev amd64 5.9-4 [406 kB]
Get:37 http://localhost/debian/ sid/main zlib1g-dev amd64 1:1.2.3.4.dfsg-3 [192 kB]
Get:38 http://localhost/debian/ sid/main libpng12-dev amd64 1.2.46-4 [266 kB]
Get:39 http://localhost/debian/ sid/main libpthread-stubs0 amd64 0.3-3 [3228 B]
Get:40 http://localhost/debian/ sid/main libpthread-stubs0-dev amd64 0.3-3 [3998 B]
Get:41 http://localhost/debian/ sid/main libslang2-dev amd64 2.2.4-5 [627 kB]
Get:42 http://localhost/debian/ sid/main libsm-dev amd64 2:1.2.0-2 [101 kB]
Get:43 http://localhost/debian/ sid/main libxau-dev amd64 1:1.0.6-4 [20.6 kB]
Get:44 http://localhost/debian/ sid/main libxdmcp-dev amd64 1:1.1.0-4 [39.3 kB]
Get:45 http://localhost/debian/ sid/main x11proto-input-dev all 2.1-1 [145 kB]
Get:46 http://localhost/debian/ sid/main x11proto-kb-dev all 1.0.5-2 [27.5 kB]
Get:47 http://localhost/debian/ sid/main xtrans-dev all 1.2.6-2 [101 kB]
Get:48 http://localhost/debian/ sid/main libxcb1-dev amd64 1.7-4 [82.7 kB]
Get:49 http://localhost/debian/ sid/main libx11-dev amd64 2:1.4.4-4 [1027 kB]
Get:50 http://localhost/debian/ sid/main libxpm-dev amd64 1:3.5.9-4 [107 kB]
Get:51 http://localhost/debian/ sid/main libxt-dev amd64 1:1.1.1-2 [512 kB]
Extracting templates from packages: 57%Extracting templates from packages: 100%
Preconfiguring packages ...
Fetched 15.8 MB in 0s (42.1 MB/s)
Selecting previously unselected package libpipeline1.
(Reading database ... 10821 files and directories currently installed.)
Unpacking libpipeline1 (from .../libpipeline1_1.2.0-5_amd64.deb) ...
Selecting previously unselected package libgpm2.
Unpacking libgpm2 (from .../libgpm2_1.20.4-4_amd64.deb) ...
Selecting previously unselected package libpcre3.
Unpacking libpcre3 (from .../libpcre3_8.12-4_amd64.deb) ...
Selecting previously unselected package libglib2.0-0.
Unpacking libglib2.0-0 (from .../libglib2.0-0_2.30.2-4_amd64.deb) ...
Selecting previously unselected package libxml2.
Unpacking libxml2 (from .../libxml2_2.7.8.dfsg-5.1_amd64.deb) ...
Selecting previously unselected package libcroco3.
Unpacking libcroco3 (from .../libcroco3_0.6.2-2_amd64.deb) ...
Selecting previously unselected package x11-common.
Unpacking x11-common (from .../x11-common_1%3a7.6+10_all.deb) ...
Selecting previously unselected package libice6.
Unpacking libice6 (from .../libice6_2%3a1.0.7-2_amd64.deb) ...
Selecting previously unselected package libpng12-0.
Unpacking libpng12-0 (from .../libpng12-0_1.2.46-4_amd64.deb) ...
Selecting previously unselected package libsm6.
Unpacking libsm6 (from .../libsm6_2%3a1.2.0-2_amd64.deb) ...
Selecting previously unselected package libunistring0.
Unpacking libunistring0 (from .../libunistring0_0.9.3-5_amd64.deb) ...
Selecting previously unselected package libxau6.
Unpacking libxau6 (from .../libxau6_1%3a1.0.6-4_amd64.deb) ...
Selecting previously unselected package libxdmcp6.
Unpacking libxdmcp6 (from .../libxdmcp6_1%3a1.1.0-4_amd64.deb) ...
Selecting previously unselected package libxcb1.
Unpacking libxcb1 (from .../libxcb1_1.7-4_amd64.deb) ...
Selecting previously unselected package libx11-data.
Unpacking libx11-data (from .../libx11-data_2%3a1.4.4-4_all.deb) ...
Selecting previously unselected package libx11-6.
Unpacking libx11-6 (from .../libx11-6_2%3a1.4.4-4_amd64.deb) ...
Selecting previously unselected package libxpm4.
Unpacking libxpm4 (from .../libxpm4_1%3a3.5.9-4_amd64.deb) ...
Selecting previously unselected package libxt6.
Unpacking libxt6 (from .../libxt6_1%3a1.1.1-2_amd64.deb) ...
Selecting previously unselected package bsdmainutils.
Unpacking bsdmainutils (from .../bsdmainutils_8.2.3_amd64.deb) ...
Selecting previously unselected package groff-base.
Unpacking groff-base (from .../groff-base_1.21-6_amd64.deb) ...
Selecting previously unselected package man-db.
Unpacking man-db (from .../man-db_2.6.0.2-3_amd64.deb) ...
Selecting previously unselected package libmagic1.
Unpacking libmagic1 (from .../libmagic1_5.09-2_amd64.deb) ...
Selecting previously unselected package file.
Unpacking file (from .../archives/file_5.09-2_amd64.deb) ...
Selecting previously unselected package gettext-base.
Unpacking gettext-base (from .../gettext-base_0.18.1.1-5_amd64.deb) ...
Selecting previously unselected package html2text.
Unpacking html2text (from .../html2text_1.3.2a-15_amd64.deb) ...
Selecting previously unselected package gettext.
Unpacking gettext (from .../gettext_0.18.1.1-5_amd64.deb) ...
Selecting previously unselected package intltool-debian.
Unpacking intltool-debian (from .../intltool-debian_0.35.0+20060710.1_all.deb) ...
Selecting previously unselected package po-debconf.
Unpacking po-debconf (from .../po-debconf_1.0.16+nmu2_all.deb) ...
Selecting previously unselected package debhelper.
Unpacking debhelper (from .../debhelper_8.9.14_all.deb) ...
Selecting previously unselected package libgpm-dev.
Unpacking libgpm-dev (from .../libgpm-dev_1.20.4-4_amd64.deb) ...
Selecting previously unselected package libgpmg1-dev.
Unpacking libgpmg1-dev (from .../libgpmg1-dev_1.20.4-4_all.deb) ...
Selecting previously unselected package xorg-sgml-doctools.
Unpacking xorg-sgml-doctools (from .../xorg-sgml-doctools_1%3a1.10-1_all.deb) ...
Selecting previously unselected package x11proto-core-dev.
Unpacking x11proto-core-dev (from .../x11proto-core-dev_7.0.22-1_all.deb) ...
Selecting previously unselected package libice-dev.
Unpacking libice-dev (from .../libice-dev_2%3a1.0.7-2_amd64.deb) ...
Selecting previously unselected package libtinfo-dev.
Unpacking libtinfo-dev (from .../libtinfo-dev_5.9-4_amd64.deb) ...
Selecting previously unselected package libncurses5-dev.
Unpacking libncurses5-dev (from .../libncurses5-dev_5.9-4_amd64.deb) ...
Selecting previously unselected package zlib1g-dev.
Unpacking zlib1g-dev (from .../zlib1g-dev_1%3a1.2.3.4.dfsg-3_amd64.deb) ...
Selecting previously unselected package libpng12-dev.
Unpacking libpng12-dev (from .../libpng12-dev_1.2.46-4_amd64.deb) ...
Selecting previously unselected package libpthread-stubs0.
Unpacking libpthread-stubs0 (from .../libpthread-stubs0_0.3-3_amd64.deb) ...
Selecting previously unselected package libpthread-stubs0-dev.
Unpacking libpthread-stubs0-dev (from .../libpthread-stubs0-dev_0.3-3_amd64.deb) ...
Selecting previously unselected package libslang2-dev.
Unpacking libslang2-dev (from .../libslang2-dev_2.2.4-5_amd64.deb) ...
Selecting previously unselected package libsm-dev.
Unpacking libsm-dev (from .../libsm-dev_2%3a1.2.0-2_amd64.deb) ...
Selecting previously unselected package libxau-dev.
Unpacking libxau-dev (from .../libxau-dev_1%3a1.0.6-4_amd64.deb) ...
Selecting previously unselected package libxdmcp-dev.
Unpacking libxdmcp-dev (from .../libxdmcp-dev_1%3a1.1.0-4_amd64.deb) ...
Selecting previously unselected package x11proto-input-dev.
Unpacking x11proto-input-dev (from .../x11proto-input-dev_2.1-1_all.deb) ...
Selecting previously unselected package x11proto-kb-dev.
Unpacking x11proto-kb-dev (from .../x11proto-kb-dev_1.0.5-2_all.deb) ...
Selecting previously unselected package xtrans-dev.
Unpacking xtrans-dev (from .../xtrans-dev_1.2.6-2_all.deb) ...
Selecting previously unselected package libxcb1-dev.
Unpacking libxcb1-dev (from .../libxcb1-dev_1.7-4_amd64.deb) ...
Selecting previously unselected package libx11-dev.
Unpacking libx11-dev (from .../libx11-dev_2%3a1.4.4-4_amd64.deb) ...
Selecting previously unselected package libxpm-dev.
Unpacking libxpm-dev (from .../libxpm-dev_1%3a3.5.9-4_amd64.deb) ...
Selecting previously unselected package libxt-dev.
Unpacking libxt-dev (from .../libxt-dev_1%3a1.1.1-2_amd64.deb) ...
Selecting previously unselected package sbuild-build-depends-fte-dummy.
Unpacking sbuild-build-depends-fte-dummy (from .../sbuild-build-depends-fte-dummy.deb) ...
Processing triggers for install-info ...
Setting up libpipeline1 (1.2.0-5) ...
Setting up libgpm2 (1.20.4-4) ...
Setting up libpcre3 (8.12-4) ...
Setting up libglib2.0-0 (2.30.2-4) ...
No schema files found: doing nothing.
Setting up libxml2 (2.7.8.dfsg-5.1) ...
Setting up libcroco3 (0.6.2-2) ...
Setting up x11-common (1:7.6+10) ...
invoke-rc.d: policy-rc.d denied execution of start.
Setting up libice6 (2:1.0.7-2) ...
Setting up libpng12-0 (1.2.46-4) ...
Setting up libsm6 (2:1.2.0-2) ...
Setting up libunistring0 (0.9.3-5) ...
Setting up libxau6 (1:1.0.6-4) ...
Setting up libxdmcp6 (1:1.1.0-4) ...
Setting up libxcb1 (1.7-4) ...
Setting up libx11-data (2:1.4.4-4) ...
Setting up libx11-6 (2:1.4.4-4) ...
Setting up libxpm4 (1:3.5.9-4) ...
Setting up libxt6 (1:1.1.1-2) ...
Setting up bsdmainutils (8.2.3) ...
update-alternatives: using /usr/bin/bsd-write to provide /usr/bin/write (write) in auto mode.
update-alternatives: using /usr/bin/bsd-from to provide /usr/bin/from (from) in auto mode.
Setting up groff-base (1.21-6) ...
Setting up man-db (2.6.0.2-3) ...
Building database of manual pages ...
Setting up libmagic1 (5.09-2) ...
Setting up file (5.09-2) ...
Setting up gettext-base (0.18.1.1-5) ...
Setting up html2text (1.3.2a-15) ...
Setting up gettext (0.18.1.1-5) ...
Setting up intltool-debian (0.35.0+20060710.1) ...
Setting up po-debconf (1.0.16+nmu2) ...
Setting up debhelper (8.9.14) ...
Setting up libgpm-dev (1.20.4-4) ...
Setting up libgpmg1-dev (1.20.4-4) ...
Setting up xorg-sgml-doctools (1:1.10-1) ...
Setting up x11proto-core-dev (7.0.22-1) ...
Setting up libice-dev (2:1.0.7-2) ...
Setting up libtinfo-dev (5.9-4) ...
Setting up libncurses5-dev (5.9-4) ...
Setting up zlib1g-dev (1:1.2.3.4.dfsg-3) ...
Setting up libpng12-dev (1.2.46-4) ...
Setting up libpthread-stubs0 (0.3-3) ...
Setting up libpthread-stubs0-dev (0.3-3) ...
Setting up libslang2-dev (2.2.4-5) ...
Setting up libsm-dev (2:1.2.0-2) ...
Setting up libxau-dev (1:1.0.6-4) ...
Setting up libxdmcp-dev (1:1.1.0-4) ...
Setting up x11proto-input-dev (2.1-1) ...
Setting up x11proto-kb-dev (1.0.5-2) ...
Setting up xtrans-dev (1.2.6-2) ...
Setting up libxcb1-dev (1.7-4) ...
Setting up libx11-dev (2:1.4.4-4) ...
Setting up libxpm-dev (1:3.5.9-4) ...
Setting up libxt-dev (1:1.1.1-2) ...
Setting up sbuild-build-depends-fte-dummy (0.invalid.0) ...

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build environment                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

Kernel: Linux 2.6.32-5-amd64 amd64 (x86_64)
Toolchain package versions: binutils_2.22-4 dpkg-dev_1.16.1.2 g++-4.6_4.6.2-9 gcc-4.6_4.6.2-9 libc6-dev_2.13-24 libstdc++6_4.6.2-9 libstdc++6-4.6-dev_4.6.2-9 linux-libc-dev_3.1.8-2
Package versions: apt_0.8.15.9 apt-utils_0.8.15.9 base-files_6.5 base-passwd_3.5.24 bash_4.2-1 binutils_2.22-4 bsdmainutils_8.2.3 bsdutils_1:2.20.1-1.1 build-essential_11.5 bzip2_1.0.6-1 clang_3.0-5 coreutils_8.13-3 cpp_4:4.6.2-4 cpp-4.6_4.6.2-9 dash_0.5.7-2 debconf_1.5.41 debfoster_2.7-1.1 debhelper_8.9.14 debian-archive-keyring_2010.08.28 debianutils_4.1 diffutils_1:3.2-1 dpkg_1.16.1.2 dpkg-dev_1.16.1.2 e2fslibs_1.42-1 e2fsprogs_1.42-1 fakeroot_1.18.2-1 file_5.09-2 findutils_4.4.2-4 g++_4:4.6.2-4 g++-4.6_4.6.2-9 gcc_4:4.6.2-4 gcc-4.6_4.6.2-9 gcc-4.6-base_4.6.2-9 gettext_0.18.1.1-5 gettext-base_0.18.1.1-5 gnupg_1.4.11-3 gpgv_1.4.11-3 grep_2.10-1 groff-base_1.21-6 gzip_1.4-2 hostname_3.09 html2text_1.3.2a-15 initscripts_2.88dsf-18 insserv_1.14.0-2.1 install-info_4.13a.dfsg.1-8 intltool-debian_0.35.0+20060710.1 less_444-1 libacl1_2.2.51-5 libattr1_1:2.4.46-5 libblkid1_2.20.1-1.1 libbz2-1.0_1.0.6-1 libc-bin_2.13-24 libc-dev-bin_2.13-24 libc6_2.13-24 libc6-dev_2.13-24 libclang-common-dev_3.0-5 libclass-isa-perl_0.36-3 libcomerr2_1.42-1 libcroco3_0.6.2-2 libdb5.1_5.1.29-1 libdpkg-perl_1.16.1.2 libffi5_3.0.10-3 libgc1c2_1:7.1-8 libgcc1_1:4.6.2-9 libgdbm3_1.8.3-10 libglib2.0-0_2.30.2-4 libgmp10_2:5.0.2+dfsg-2 libgomp1_4.6.2-9 libgpm-dev_1.20.4-4 libgpm2_1.20.4-4 libgpmg1-dev_1.20.4-4 libice-dev_2:1.0.7-2 libice6_2:1.0.7-2 libllvm3.0_3.0-5 liblzma2_5.1.1alpha+20110809-2 liblzma5_5.1.1alpha+20110809-3 libmagic1_5.09-2 libmount1_2.20.1-1.1 libmpc2_0.9-4 libmpfr4_3.1.0-3 libncurses5_5.9-4 libncurses5-dev_5.9-4 libncursesw5_5.9-4 libpam-modules_1.1.3-6 libpam-modules-bin_1.1.3-6 libpam-runtime_1.1.3-6 libpam0g_1.1.3-6 libpcre3_8.12-4 libpipeline1_1.2.0-5 libpng12-0_1.2.46-4 libpng12-dev_1.2.46-4 libpthread-stubs0_0.3-3 libpthread-stubs0-dev_0.3-3 libquadmath0_4.6.2-9 libreadline6_6.2-8 libselinux1_2.1.0-4 libsepol1_2.1.0-1.2 libslang2_2.2.4-5 libslang2-dev_2.2.4-5 libsm-dev_2:1.2.0-2 libsm6_2:1.2.0-2 libss2_1.42-1 libstdc++6_4.6.2-9 libstdc++6-4.6-dev_4.6.2-9 libswitch-perl_2.16-2 libtimedate-perl_1.2000-1 libtinfo-dev_5.9-4 libtinfo5_5.9-4 libunistring0_0.9.3-5 libusb-0.1-4_2:0.1.12-20 libuuid1_2.20.1-1.1 libx11-6_2:1.4.4-4 libx11-data_2:1.4.4-4 libx11-dev_2:1.4.4-4 libxau-dev_1:1.0.6-4 libxau6_1:1.0.6-4 libxcb1_1.7-4 libxcb1-dev_1.7-4 libxdmcp-dev_1:1.1.0-4 libxdmcp6_1:1.1.0-4 libxml2_2.7.8.dfsg-5.1 libxpm-dev_1:3.5.9-4 libxpm4_1:3.5.9-4 libxt-dev_1:1.1.1-2 libxt6_1:1.1.1-2 linux-libc-dev_3.1.8-2 login_1:4.1.4.2+svn3283-3 lsb-base_3.2-28 make_3.81-8.1 man-db_2.6.0.2-3 mawk_1.3.3-16 mount_2.20.1-1.1 multiarch-support_2.13-24 ncurses-base_5.9-4 ncurses-bin_5.9-4 nvi_1.81.6-8.2 passwd_1:4.1.4.2+svn3283-3 patch_2.6.1-2 perl_5.14.2-6 perl-base_5.14.2-6 perl-modules_5.14.2-6 po-debconf_1.0.16+nmu2 readline-common_6.2-8 sbuild-build-depends-core-dummy_0.invalid.0 sbuild-build-depends-fte-dummy_0.invalid.0 sed_4.2.1-9 sensible-utils_0.0.6 sysv-rc_2.88dsf-18 sysvinit_2.88dsf-18 sysvinit-utils_2.88dsf-18 tar_1.26-4 tzdata_2011n-2 util-linux_2.20.1-1.1 x11-common_1:7.6+10 x11proto-core-dev_7.0.22-1 x11proto-input-dev_2.1-1 x11proto-kb-dev_1.0.5-2 xorg-sgml-doctools_1:1.10-1 xtrans-dev_1.2.6-2 xz-utils_5.1.1alpha+20110809-3 zlib1g_1:1.2.3.4.dfsg-3 zlib1g-dev_1:1.2.3.4.dfsg-3

┌──────────────────────────────────────────────────────────────────────────────┐
│ Build                                                                        │
└──────────────────────────────────────────────────────────────────────────────┘


Unpack source
─────────────

gpgv: keyblock resource `/var/lib/sbuild/.gnupg/trustedkeys.gpg': file open error
gpgv: Signature made Sun Aug 14 11:40:41 2011 CEST using DSA key ID 28BCB3E3
gpgv: Can't check signature: public key not found
dpkg-source: warning: failed to verify signature on ./fte_0.50.2b6-1.dsc
dpkg-source: info: extracting fte in fte-0.50.2b6
dpkg-source: info: unpacking fte_0.50.2b6.orig.tar.gz
dpkg-source: info: unpacking fte_0.50.2b6-1.debian.tar.gz

Check disc space
────────────────

Sufficient free space for build

dpkg-buildpackage
─────────────────

dpkg-buildpackage: source package fte
dpkg-buildpackage: source version 0.50.2b6-1
 dpkg-source --before-build fte-0.50.2b6
dpkg-buildpackage: host architecture amd64
 fakeroot debian/rules clean
dh_testdir
dh_testroot
rm -f build
/usr/bin/make -C src -f fte-unix.mak clean
make[1]: Entering directory `/build/fte-3TmUY8/fte-0.50.2b6/src'
rm -f core *.o *.moc .depend xfte vfte nfte sfte  defcfg.h defcfg.cnf \
	cfte fte sfte vfte nfte mfte qfte xfte compkeys tags
make[1]: Leaving directory `/build/fte-3TmUY8/fte-0.50.2b6/src'
dh_clean
 dpkg-source -b fte-0.50.2b6
dpkg-source: info: using source format `3.0 (quilt)'
dpkg-source: info: building fte using existing ./fte_0.50.2b6.orig.tar.gz
dpkg-source: info: building fte in fte_0.50.2b6-1.debian.tar.gz
dpkg-source: info: building fte in fte_0.50.2b6-1.dsc
 debian/rules build
dh_testdir
/usr/bin/make -C src -f fte-unix.mak
make[1]: Entering directory `/build/fte-3TmUY8/fte-0.50.2b6/src'
g++ -c cfte.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
cfte.cpp:87:9: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
        l[0] = (char)len;
             ~ ^~~~~~~~~
cfte.cpp:88:9: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
        l[1] = (char)(len >> 8);
             ~ ^~~~~~~~~~~~~~~~
cfte.cpp:109:23: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    unsigned long l = num;
                  ~   ^~~
cfte.cpp:620:73: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    colors = (struct _color *)realloc(colors, sizeof (struct _color) * (colorCount + 1));
                                              ~~~~~~                    ^~~~~~~~~~~~~~
cfte.cpp:831:20: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            return i | CMD_EXT;
            ~~~~~~ ^~~~~~~~~~~
cfte.cpp:841:12: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    return CMacrosCFTE - 1;
    ~~~~~~ ^~~~~~~~~~~~~~~
6 warnings generated.
g++ -c s_files.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_files.cpp:507:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            strlcpy(RelPath, p + dl, RelPathSize);
            ~~~~~~~                  ^~~~~~~~~~~
1 warning generated.
g++ -c s_string.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_string.cpp:52:12: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return p - dest;
    ~~~~~~ ^~~~~~~~
1 warning generated.
g++ -o cfte -g   cfte.o s_files.o s_string.o
./cfte defcfg.fte defcfg.cnf
cfte 0.50.02-cvs
Copyright (c) 1994-1998 Marko Macek
Copyright (c) 2000-2010 Others
Compiling to 'defcfg.cnf'

Done.
perl mkdefcfg.pl <defcfg.cnf >defcfg.h
.........................................................................
g++ -MM -MG -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX commands.cpp c_bind.cpp c_color.cpp c_config.cpp c_desktop.cpp c_hilit.cpp c_history.cpp c_mode.cpp egui.cpp e_block.cpp e_buffer.cpp e_cmds.cpp e_cvslog.cpp e_file.cpp e_fold.cpp e_line.cpp e_loadsave.cpp e_mark.cpp e_print.cpp e_redraw.cpp e_regex.cpp e_search.cpp e_svnlog.cpp e_tags.cpp e_trans.cpp e_undo.cpp fte.cpp gui.cpp g_draw.cpp g_menu.cpp h_ada.cpp h_c.cpp h_catbs.cpp h_fte.cpp h_ipf.cpp h_make.cpp h_msg.cpp h_pascal.cpp h_perl.cpp h_plain.cpp h_rexx.cpp h_sh.cpp h_simple.cpp h_tex.cpp indent.cpp i_ascii.cpp i_choice.cpp i_complete.cpp i_input.cpp i_key.cpp i_modelview.cpp i_oview.cpp i_search.cpp i_view.cpp log.cpp o_buffer.cpp o_buflist.cpp o_cvs.cpp o_cvsbase.cpp o_cvsdiff.cpp o_directory.cpp o_list.cpp o_messages.cpp o_model.cpp o_modemap.cpp o_routine.cpp o_svn.cpp o_svnbase.cpp o_svndiff.cpp stl_string.cpp s_direct.cpp s_files.cpp s_string.cpp s_util.cpp view.cpp cfte.cpp s_files.cpp s_string.cpp e_unix.cpp memicmp.cpp clip_no.cpp con_ncurses.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp e_unix.cpp memicmp.cpp clip_no.cpp con_slang.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp e_unix.cpp memicmp.cpp clip_no.cpp con_linux.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp e_unix.cpp memicmp.cpp clip_x11.cpp con_i18n.cpp con_x11.cpp g_nodlg.cpp g_text.cpp g_unix_pipe.cpp menu_text.cpp 1>.depend
g++ -c commands.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c c_bind.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_bind.cpp:101:18: warning: implicit conversion changes signedness: 'const char' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
        ks.Key = *Key;
               ~ ^~~~
c_bind.cpp:107:26: warning: implicit conversion changes signedness: 'int' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
                ks.Key = toupper(ks.Key);
                       ~ ^~~~~~~~~~~~~~~
c_bind.cpp:107:37: warning: implicit conversion loses integer precision: 'TKeyCode' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                ks.Key = toupper(ks.Key);
                         ~~~~~~~ ~~~^~~
c_bind.cpp:422:18: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
    long flags = aKey & ~ 0xFFFF;
         ~~~~~   ^~~~~~~~~~~~~~~
c_bind.cpp:422:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    long flags = aKey & ~ 0xFFFF;
                 ~~~~   ^~~~~~~~
c_bind.cpp:431:30: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            else if (isascii(key))
                     ~~~~~~~ ^~~
c_bind.cpp:432:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                key = toupper(key);
                      ~~~~~~~ ^~~
c_bind.cpp:443:25: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            if (isascii(key))
                ~~~~~~~ ^~~
c_bind.cpp:444:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                key = toupper(key);
                      ~~~~~~~ ^~~
c_bind.cpp:446:12: warning: implicit conversion changes signedness: 'long' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
    aKey = key | flags;
         ~ ^~~~~~~~~~~
c_bind.cpp:637:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    Macros = (ExMacro *) realloc(Macros, sizeof(ExMacro) * (1 + CMacros));
                                         ~~~~~~             ^~~~~~~~~~~
c_bind.cpp:656:55: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        if (view->GetStrVar(Macros[Macro].cmds[Pos].u.num, str, maxlen) == 0)
            ~~~~            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
c_bind.cpp:684:44: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        *value = Macros[Macro].cmds[Pos].u.num;
               ~ ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
c_bind.cpp:687:55: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        if (view->GetIntVar(Macros[Macro].cmds[Pos].u.num, value) == 0)
            ~~~~            ~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
c_bind.cpp:701:12: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    return i % maxim;
    ~~~~~~ ^~~~~~~~~
c_bind.cpp:701:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    return i % maxim;
           ~   ^~~~~
16 warnings generated.
g++ -c c_color.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c c_config.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_config.cpp:158:34: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        g->name = (char *)malloc((s-string) + 1);
                          ~~~~~~ ^~~~~~~~~~~~~~
c_config.cpp:165:35: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        strncat(g->name, string, (s-string));
        ~~~~~~~                   ^~~~~~~~
c_config.cpp:405:13: warning: implicit conversion changes signedness: 'const char' to 'unsigned char' [-Wsign-conversion]
        c = *cp.c++;
          ~ ^~~~~~~
c_config.cpp:407:15: warning: implicit conversion loses integer precision: 'int' to 'unsigned short' [-Wconversion]
        len = (l[1] << 8) + l[0];
            ~ ^~~~~~~~~~~~~~~~~~
c_config.cpp:439:15: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
        num = num | (~0xFFFFFFFFUL);
            ~ ^~~~~~~~~~~~~~~~~~~~~
c_config.cpp:439:15: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
        num = num | (~0xFFFFFFFFUL);
              ^~~
c_config.cpp:481:32: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~ ^~~
c_config.cpp:481:37: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~      ^~~
c_config.cpp:481:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~           ^~~
c_config.cpp:481:47: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCommand(Cmd, cmd, cnt, ign) == 0) {
                    ~~~~~~~~~~                ^~~
c_config.cpp:494:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddString(Cmd, s) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~ ^~~
c_config.cpp:502:31: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddNumber(Cmd, num) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~ ^~~
c_config.cpp:510:33: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddVariable(Cmd, num) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~~~ ^~~
c_config.cpp:510:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddVariable(Cmd, num) == 0) ENDFUNCRC(-1);
                    ~~~~~~~~~~~      ^~~
c_config.cpp:514:27: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            if (AddConcat(Cmd) == 0) ENDFUNCRC(-1);
                ~~~~~~~~~ ^~~
c_config.cpp:517:23: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            ENDFUNCRC(Cmd);
            ~~~~~~~~~~^~~~
./log.h:277:30: note: expanded from:
#define ENDFUNCRC(rc) return rc
                      ~~~~~~ ^
c_config.cpp:630:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (Colorize->SetColor(cidx, svalue) == 0)
                    ~~~~~~~~           ^~~~
c_config.cpp:721:49: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetEventString(Map, what, val) != 0) return -1;
                            ~~~~~~~~~~~~~~      ^~~~
c_config.cpp:803:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                newState.color = color;
                               ~ ^~~~~
c_config.cpp:836:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                newTrans.nextState = nextState;
                                   ~ ^~~~~~~~~
c_config.cpp:837:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                newTrans.color = color;
                               ~ ^~~~~
c_config.cpp:851:41: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    newTrans.matchLen = strlen(match);
                                      ~ ^~~~~~~~~~~~~
c_config.cpp:892:66: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Colorize->hm->LastState()->nextKwdMatchedState = nextKwdMatchedState;
                                                               ~ ^~~~~~~~~~~~~~~~~~~
c_config.cpp:893:69: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Colorize->hm->LastState()->nextKwdNotMatchedState = nextKwdNotMatchedState;
                                                                  ~ ^~~~~~~~~~~~~~~~~~~~~~
c_config.cpp:894:65: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Colorize->hm->LastState()->nextKwdNoCharState = nextKwdNoCharState;
                                                              ~ ^~~~~~~~~~~~~~~~~~
c_config.cpp:931:31: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                        Col = ColFg | (ColBg << 4);
                            ~ ^~~~~~~~~~~~~~~~~~~~
c_config.cpp:991:49: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetModeString(Mode, what, val) != 0) return -1;
                            ~~~~~~~~~~~~~       ^~~~
c_config.cpp:999:49: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetModeNumber(Mode, what, num) != 0) return -1;
                            ~~~~~~~~~~~~~       ^~~~
c_config.cpp:999:55: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetModeNumber(Mode, what, num) != 0) return -1;
                            ~~~~~~~~~~~~~             ^~~
c_config.cpp:1040:32: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCRegexp(file, line, msg, regexp) == 0) return -1;
                    ~~~~~~~~~~ ^~~~
c_config.cpp:1040:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCRegexp(file, line, msg, regexp) == 0) return -1;
                    ~~~~~~~~~~       ^~~~
c_config.cpp:1040:44: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                if (AddCRegexp(file, line, msg, regexp) == 0) return -1;
                    ~~~~~~~~~~             ^~~
c_config.cpp:1087:45: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetGlobalNumber(what, num) != 0) return -1;
                            ~~~~~~~~~~~~~~~ ^~~~
c_config.cpp:1087:51: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                        if (SetGlobalNumber(what, num) != 0) return -1;
                            ~~~~~~~~~~~~~~~       ^~~
c_config.cpp:1279:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    ln = (l[3] << 24) + (l[2] << 16) + (l[1] << 8) + l[0];
       ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
c_config.cpp:1288:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    ln = (l[3] << 24) + (l[2] << 16) + (l[1] << 8) + l[0];
       ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from c_config.cpp:10:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
37 warnings generated.
g++ -c c_desktop.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from c_desktop.cpp:10:
In file included from ./c_desktop.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c c_hilit.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_hilit.cpp:293:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    state = (HState *)realloc(state, (stateCount + 1) * sizeof(HState) );
                                     ~^~~~~~~~~~~~~~
c_hilit.cpp:302:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    trans = (HTrans *)realloc(trans, (transCount + 1) * sizeof(HTrans) );
                                     ~^~~~~~~~~~~~~~
In file included from c_hilit.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from c_hilit.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<fte::string>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
c_hilit.cpp:108:14: note: in instantiation of member function 'fte::vector<fte::string>::push_back' requested here
    WordList.push_back(Word);
             ^
4 warnings generated.
g++ -c c_history.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_history.cpp:99:18: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    for (int i = inputHistory.Count - 1; i >= 0; i--)
             ~   ^~~~~~~~~~~~~~~~~~~~~~
c_history.cpp:129:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            r = strtol(p, &e, 10);
              ~ ^~~~~~~~~~~~~~~~~
c_history.cpp:136:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            c = strtol(p = e, &e, 10);
              ~ ^~~~~~~~~~~~~~~~~~~~~
c_history.cpp:168:21: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                r = strtol(p, &e, 10);
                  ~ ^~~~~~~~~~~~~~~~~
c_history.cpp:175:21: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                c = strtol(p = e, &e, 10);
                  ~ ^~~~~~~~~~~~~~~~~~~~~
c_history.cpp:186:77: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                nb=(HBookmark **)realloc (last->Books,sizeof (HBookmark *)*(last->BookCount+1));
                                                      ~~~~~~                ^~~~~~~~~~~~~~~~~
c_history.cpp:202:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            i = strtol(p, &e, 10);
              ~ ^~~~~~~~~~~~~~~~~
c_history.cpp:261:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    NH = (FPosHistory **)realloc((void *)FPHistory, N * sizeof(FPosHistory *));
                                                    ^
c_history.cpp:274:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                (FPHistoryCount - L) * sizeof(FPosHistory *));
                ~^~~~~~~~~~~~~~~~~~
c_history.cpp:329:55: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(inputHistory.Line + 1, inputHistory.Line, i * sizeof(char *));
                                                      ^
c_history.cpp:330:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(inputHistory.Id + 1, inputHistory.Id, i * sizeof(int *));
                                                  ^
c_history.cpp:353:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                strncpy(String, inputHistory.Line[i], len);
                ~~~~~~~                               ^~~
c_history.cpp:436:80: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                FPHistory[M]->Books=(HBookmark **)malloc (sizeof (HBookmark *)*j);
                                                          ~~~~~~               ^
In file included from c_history.cpp:11:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
14 warnings generated.
g++ -c c_mode.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
c_mode.cpp:104:10: warning: implicit conversion loses integer precision: 'ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
        int l = read(fd, buf, sizeof(buf) - 1);
            ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
c_mode.cpp:113:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (RxExec(m->MatchLineRx, buf, i, buf, &RM) == 1)
                    ~~~~~~                      ^
2 warnings generated.
g++ -c egui.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
egui.cpp:1041:31: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                c = Menus[mc].Count;
                  ~ ~~~~~~~~~~^~~~~
In file included from egui.cpp:10:
In file included from ./egui.h:13:
In file included from ./gui.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c e_block.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_block.cpp:155:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, -1, 0, RLine(L)) == 0) return 0;
                ~~~~~~~~                     ^~
e_block.cpp:163:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, E.Col - B.Col, B.Col, RLine(L)) == 0) return 0;
                ~~~~~~~~                     ^~~~~~~~~~~~~
e_block.cpp:164:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->PadLine(SL, E.Col - B.Col) == 0) return 0;
                ~~~~~~~~              ^~~~~~~~~~~~~
e_block.cpp:172:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, E.Col - B.Col, B.Col, RLine(B.Row)) == 0) return 0;
                ~~~~~~~~                     ^~~~~~~~~~~~~
e_block.cpp:175:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, -1, B.Col, RLine(B.Row)) == 0) return 0;
                ~~~~~~~~                     ^~
e_block.cpp:179:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (SSBuffer->InsLineText(SL, 0, -1, 0, RLine(L)) == 0) return 0;
                    ~~~~~~~~                     ^~
e_block.cpp:183:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (SSBuffer->InsLineText(SL, 0, E.Col, 0, RLine(E.Row)) == 0) return 0;
                ~~~~~~~~                     ~~^~~
e_block.cpp:232:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsLineText(BL, 0, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                ~~~~~~~~~~~        ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:244:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsLineText(BL, B.Col, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                ~~~~~~~~~~~            ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:258:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (InsLineText(B.Row, B.Col, SSBuffer->LineLen(0), 0, SSBuffer->RLine(0)) == 0) return 0;
            ~~~~~~~~~~~               ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:265:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (InsLineText(BL, 0, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                    ~~~~~~~~~~~        ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:269:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsLineText(BL, 0, SSBuffer->LineLen(L), 0, SSBuffer->RLine(L)) == 0) return 0;
                ~~~~~~~~~~~        ^~~~~~~~~~~~~~~~~~~~
e_block.cpp:295:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Col) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_block.cpp:296:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Row) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_block.cpp:327:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(L, B.Col, E.Col - B.Col) == 0) return 0;
                ~~~~~~~           ^~~~~~~~~~~~~
e_block.cpp:343:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(B.Row, B.Col, E.Col - B.Col) == 0) return 0;
                ~~~~~~~               ^~~~~~~~~~~~~
e_block.cpp:358:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(E.Row, 0, E.Col) == 0) return 0;
                ~~~~~~~           ~~^~~
e_block.cpp:361:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(B.Row, B.Col, -1) == 0) return 0;
                ~~~~~~~               ^~
e_block.cpp:677:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_block.cpp:692:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_block.cpp:695:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z  = LL->Count;
                   ~ ~~~~^~~~~
e_block.cpp:705:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    Z = LL->Count;
                      ~ ~~~~^~~~~
e_block.cpp:707:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if ((int)fwrite(LL->Chars + A, 1, Z - A, fp) != Z - A) {
                             ~~~~~~                   ^~~~~
e_block.cpp:797:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lA = LA->Count;
            ~~   ~~~~^~~~~
e_block.cpp:798:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lB = LB->Count;
            ~~   ~~~~^~~~~
e_block.cpp:801:59: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memcmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                        ~ ^~
e_block.cpp:801:64: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memcmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                        ~      ^~
e_block.cpp:803:60: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memicmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                         ~ ^~
e_block.cpp:803:65: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            rc = memicmp(LA->Chars, LB->Chars, (lA < lB) ? lA : lB);
                                                         ~      ^~
e_block.cpp:811:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lA = LA->Count;
            ~~   ~~~~^~~~~
e_block.cpp:812:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int lB = LB->Count;
            ~~   ~~~~^~~~~
e_block.cpp:832:72: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memcmp(LA->Chars+ PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                     ~ ^~
e_block.cpp:832:77: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memcmp(LA->Chars+ PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                     ~      ^~
e_block.cpp:834:74: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memicmp(LA->Chars + PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                       ~ ^~
e_block.cpp:834:79: warning: operand of ? changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                rc = memicmp(LA->Chars + PA, LB->Chars + PB, (lA < lB) ? lA : lB);
                                                                       ~      ^~
e_block.cpp:879:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    SortRows = (int *)malloc((SortMaxRow - SortMinRow + 1) * sizeof(int));
                             ~^~~~~~~~~~~~~~~~~~~~~~~~~~~
e_block.cpp:887:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(SortRows, SortMaxRow - SortMinRow + 1, sizeof(int), SortProc);
    ~~~~~           ^~~~~~~~~~~~~~~~~~~~~~~~~~~
e_block.cpp:928:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (InsChars(i, O, C - O, 0) != 1)
                    ~~~~~~~~       ^~~~~
e_block.cpp:963:44: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (DelChars(i, O - N, N) != 1)
                        ~~~~~~~~           ^
e_block.cpp:990:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (DelChars(i, O1, N) != 1)
                    ~~~~~~~~        ^
In file included from e_block.cpp:10:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
41 warnings generated.
g++ -c e_buffer.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_buffer.cpp:487:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Col) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_buffer.cpp:488:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(CP.Row) == 0) return 0;
            ~~~~~~~~~ ~~~^~~
e_buffer.cpp:593:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    return ScreenPos(L, L->Count);
           ~~~~~~~~~    ~~~^~~~~
e_buffer.cpp:598:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    return RLine(Row)->Count;
    ~~~~~~ ~~~~~~~~~~~~^~~~~
e_buffer.cpp:628:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:651:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(PELine) * (RCount - RGap));
                ~~~~~~            ^~~~~~~~~~~~~
e_buffer.cpp:665:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(VV[0]) * (VCount - VGap));
                ~~~~~~           ^~~~~~~~~~~~~
e_buffer.cpp:698:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:713:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(PELine) * (RCount - RGap));
                ~~~~~~            ^~~~~~~~~~~~~
e_buffer.cpp:727:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(VV[0]) * (VCount - VGap));
                ~~~~~~           ^~~~~~~~~~~~~
e_buffer.cpp:752:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (Ofs + ACount >= L->Count)
        ^~~
e_buffer.cpp:753:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        ACount = L->Count - Ofs;
                 ~          ^~~
e_buffer.cpp:762:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:763:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:768:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (L->Count > Ofs + ACount)
                   ^~~
e_buffer.cpp:769:69: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memmove(L->Chars + Ofs, L->Chars + Ofs + ACount, L->Count - Ofs - ACount);
                                                         ~          ^~~
e_buffer.cpp:794:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:795:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:802:69: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memmove(L->Chars + Ofs + ACount, L->Chars + Ofs, L->Count - Ofs);
                                                         ~          ^~~
e_buffer.cpp:830:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (InsChars(Row, Ofs, TPos - Pos, 0) != 1)
            ~~~~~~~~           ^~~~~~~~~~
e_buffer.cpp:852:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:853:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:855:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Row) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:856:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Ofs) == 0) return 0;
            ~~~~~~~~~ ^~~
e_buffer.cpp:878:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (ACount == -1 || ACount + Col > L)
                        ~~~~~~   ^~~
e_buffer.cpp:879:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        ACount = L - Col;
               ~ ^~~~~~~
e_buffer.cpp:882:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    if (UnTabPoint(Row, Col + ACount) == 0)
        ~~~~~~~~~~      ^~~~~~~~~~~~
e_buffer.cpp:882:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (UnTabPoint(Row, Col + ACount) == 0)
                        ^~~
e_buffer.cpp:885:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    C = CharOffset(RLine(Row), Col + ACount);
        ~~~~~~~~~~             ^~~~~~~~~~~~
e_buffer.cpp:885:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    C = CharOffset(RLine(Row), Col + ACount);
                               ^~~
e_buffer.cpp:887:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelChars(Row, B, C - B) == 0) return 0;
            ~~~~~~~~         ^~~~~
e_buffer.cpp:888:57: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (DoMark) UpdateMarker(umDelete, Row, Col, 0, ACount);
                    ~~~~~~~~~~~~                        ^~~~~~
e_buffer.cpp:902:53: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    if (DoMark) UpdateMarker(umInsert, Row, Col, 0, ACount);
                ~~~~~~~~~~~~                        ^~~~~~
e_buffer.cpp:905:39: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (InsChars(Row, RLine(Row)->Count, Col - L, 0) == 0)
            ~~~~~~~~      ~~~~~~~~~~~~^~~~~
e_buffer.cpp:905:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (InsChars(Row, RLine(Row)->Count, Col - L, 0) == 0)
            ~~~~~~~~                         ^~~~~~~
e_buffer.cpp:918:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    L = LineLen(Row);
      ~ ^~~~~~~~~~~~
e_buffer.cpp:920:39: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (InsChars(Row, RLine(Row)->Count, Length - L, 0) == 0)
            ~~~~~~~~      ~~~~~~~~~~~~^~~~~
e_buffer.cpp:933:31: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    L = ScreenPos(Line, Line->Count);
        ~~~~~~~~~       ~~~~~~^~~~~
e_buffer.cpp:935:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (ACount == -1) ACount = L - LCol;
                             ~ ^~~~~~~~
e_buffer.cpp:936:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (ACount + LCol > L) ACount = L - LCol;
        ~~~~~~   ^~~~
e_buffer.cpp:936:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (ACount + LCol > L) ACount = L - LCol;
                                  ~ ^~~~~~~~
e_buffer.cpp:945:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (InsText(Row, Col, TPos - LCol, 0) == 0)
                ~~~~~~~           ^~~~~~~~~~~
e_buffer.cpp:948:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            ACount -= TPos - LCol;
                   ~~ ^~~~~~~~~~~
e_buffer.cpp:953:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    C = Ofs = CharOffset(Line, LCol + ACount);
              ~~~~~~~~~~       ^~~~~~~~~~~~~
e_buffer.cpp:953:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    C = Ofs = CharOffset(Line, LCol + ACount);
                               ^~~~
e_buffer.cpp:956:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (Pos < LCol + ACount) {
                  ^~~~
e_buffer.cpp:957:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (InsText(Row, Col, LCol + ACount - Pos, 0) == 0)
                                  ^~~~
e_buffer.cpp:957:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (InsText(Row, Col, LCol + ACount - Pos, 0) == 0)
                                  ~~~~            ^~~
e_buffer.cpp:964:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (InsText(Row, Col, C, Line->Chars + B) == 0) return 0;
        ~~~~~~~           ^
e_buffer.cpp:992:23: warning: implicit conversion changes signedness: 'short' to 'hlState' (aka 'unsigned short') [-Wsign-conversion]
        RLine(Row)->StateE = short((Row > 0) ? RLine(Row - 1)->StateE : 0);
                           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_buffer.cpp:1003:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (InsText(Row + 1, 0, RLine(Row)->Count - P, RLine(Row)->Chars + P, 0) == 0) return 0;
                                    ~~~~~               ^
e_buffer.cpp:1004:35: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Row, Col, L - Col, 0) == 0) return 0;
                ~~~~~~~           ^~~~~~~
In file included from e_buffer.cpp:10:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
53 warnings generated.
g++ -c e_cmds.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_cmds.cpp:62:34: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (P > L->Count) P = L->Count;
                            ~ ~~~^~~~~
e_cmds.cpp:137:34: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (P > L->Count) P = L->Count;
                            ~ ~~~^~~~~
e_cmds.cpp:184:34: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (P > L->Count) P = L->Count;
                            ~ ~~~^~~~~
e_cmds.cpp:491:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, 0, LineLen())) return 1;
            ~~~~~~~       ^~~~~~~~~
e_cmds.cpp:531:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, CP.Col, C - CP.Col) == 0) return 0;
            ~~~~~~~            ^~~~~~~~~~
e_cmds.cpp:551:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, C, CP.Col - C) == 0) return 0;
            ~~~~~~~       ^~~~~~~~~~
e_cmds.cpp:573:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, CP.Col, C - CP.Col) == 0) return 0;
            ~~~~~~~            ^~~~~~~~~~
e_cmds.cpp:597:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Y, C, CP.Col - C) == 0) return 0;
            ~~~~~~~       ^~~~~~~~~~
e_cmds.cpp:605:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (DelText(Y, 0, CP.Col) == 0) return 0;
        ~~~~~~~       ~~~^~~
e_cmds.cpp:612:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (DelText(Y, CP.Col, LineLen() - CP.Col)) return 1;
        ~~~~~~~            ^~~~~~~~~~~~~~~~~~
e_cmds.cpp:663:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Y, C1, C - C1) == 0) return 0;
                ~~~~~~~        ^~~~~~
e_cmds.cpp:671:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Y, C1, C - C1) == 0) return 0;
                ~~~~~~~        ^~~~~~
e_cmds.cpp:701:31: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Y, C, C1 - C) == 0) return 0;
                ~~~~~~~       ^~~~~~
e_cmds.cpp:843:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                memcpy(Str, L->Chars + P, Len);
                ~~~~~~                    ^~~
e_cmds.cpp:850:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (DelText(R, C, C1 - C) == 0)
                            ~~~~~~~       ^~~~~~
e_cmds.cpp:854:35: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                            Len = strlen(ab->Replace);
                                ~ ^~~~~~~~~~~~~~~~~~~
e_cmds.cpp:855:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                            if (InsText(R, C, Len, ab->Replace) == 0)
                                ~~~~~~~       ^~~
e_cmds.cpp:946:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(VToR(CP.Row), CP.Col, P1 - P) == 0) return 0;
                ~~~~~~~                       ^~~~~~
e_cmds.cpp:948:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if (InsText(VToR(CP.Row), CP.Col, P1 - P, 0) == 0) return 0;
        ~~~~~~~                       ^~~~~~
e_cmds.cpp:979:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    CC = l->Count;
       ~ ~~~^~~~~
e_cmds.cpp:998:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (DelText(Row, 0, I) == 0) return 0;
                ~~~~~~~         ^
e_cmds.cpp:1011:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (InsText(Row, C, Indent, 0) == 0) return 0;
                    ~~~~~~~         ^~~~~~
e_cmds.cpp:1083:60: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                if ((ScreenPos(RLine(L + 1), RLine(L + 1)->Count) == 0) ||
                     ~~~~~~~~~               ~~~~~~~~~~~~~~^~~~~
e_cmds.cpp:1103:40: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    firstwordend = lp->Count;
                                 ~ ~~~~^~~~~
e_cmds.cpp:1199:15: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        Len = RLine(L)->Count - P;
            ~ ^~~~~~~~~~~~~~~~~~~
e_cmds.cpp:1199:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Len = RLine(L)->Count - P;
              ~~~~~             ^
e_cmds.cpp:1201:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            return InsertString(RLine(L)->Chars + P, Len);
                   ~~~~~~~~~~~~                      ^~~
e_cmds.cpp:1218:12: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    P = L->Count;
      ~ ~~~^~~~~
e_cmds.cpp:1222:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    E = ScreenPos(L, L->Count);
        ~~~~~~~~~    ~~~^~~~~
e_cmds.cpp:1224:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (DelText(Row, X, E - X, 1) == 0) return 0;
            ~~~~~~~         ^~~~~
In file included from e_cmds.cpp:10:
In file included from ./egui.h:13:
In file included from ./gui.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
31 warnings generated.
g++ -c e_cvslog.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_cvslog.cpp:16:
./o_cvs.h:34:22: warning: 'ECvs::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
e_cvslog.cpp:112:15: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        int i=strlen (title);
            ~ ^~~~~~~~~~~~~~
e_cvslog.cpp:114:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        InsText (p,5,i, title);
        ~~~~~~~      ^
e_cvslog.cpp:124:33: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                InsText (p++,11,len[i], list+position[i]);
                ~~~~~~~         ^~~~~~
In file included from e_cvslog.cpp:11:
In file included from ./e_cvslog.h:14:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c e_file.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_file.cpp:10:
In file included from ./i_modelview.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c e_fold.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_fold.cpp:61:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(int) * (VCount - VGap));
                ~~~~~~         ^~~~~~~~~~~~~
e_fold.cpp:99:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(int) * (VCount - VGap));
                ~~~~~~         ^~~~~~~~~~~~~
e_fold.cpp:184:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:191:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    FF = (EFold *) realloc((void *)FF, sizeof(EFold) * ((1 + FCount) | 7));
                                       ~~~~~~           ^~~~~~~~~~~~~~~~
e_fold.cpp:193:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(FF + n + 1, FF + n, sizeof(EFold) * (FCount - n));
                                ~~~~~~           ^~~~~~~~~~
e_fold.cpp:269:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:274:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(FF + f, FF + f + 1, sizeof(EFold) * (FCount - f - 1));
                                ~~~~~~           ^~~~~~~~~~~~~~
e_fold.cpp:276:57: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    FF = (EFold *) realloc((void *)FF, sizeof(EFold) * (FCount | 7));
                                       ~~~~~~           ^~~~~~~~~~
e_fold.cpp:303:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:327:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:352:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
e_fold.cpp:435:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (PushULong(Line) == 0) return 0;
            ~~~~~~~~~ ^~~~
In file included from e_fold.cpp:11:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
13 warnings generated.
g++ -c e_line.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_line.cpp:53:18: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int Len = L->Count;
        ~~~   ~~~^~~~~
e_line.cpp:65:16: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Pos += Ofs - L->Count;
               ^~~
e_line.cpp:88:18: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int Len = L->Count;
        ~~~   ~~~^~~~~
e_line.cpp:110:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    L = (PELine *) realloc(LL, sizeof(PELine) * (ACount + 1));
                               ~~~~~~            ^~~~~~~~~~
e_line.cpp:133:35: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                sizeof(PELine) * (RPos - RGap));
                ~~~~~~            ^~~~~~~~~~~
e_line.cpp:140:39: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    sizeof(PELine) * (RGap - RPos));
                    ~~~~~~            ^~~~~~~~~~~
e_line.cpp:148:49: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    int *V = (int *) realloc(VV, sizeof(int) * (ACount + 1));
                                 ~~~~~~         ^~~~~~~~~~
e_line.cpp:169:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    sizeof(VV[0]) * (VPos - VGap));
                    ~~~~~~           ^~~~~~~~~~~
e_line.cpp:176:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    sizeof(VV[0]) * (VGap - VPos));
                    ~~~~~~           ^~~~~~~~~~~
In file included from e_line.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
10 warnings generated.
g++ -c e_loadsave.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_loadsave.cpp:124:54: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                e = (char *)memchr((void *)p, lchar, FileBuffer - p + len);
                            ~~~~~~                   ^~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:143:44: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            m = (char *)realloc((void *)m, (lm + partLen) + CHAR_TRESHOLD);
                        ~~~~~~~            ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:146:31: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            memcpy(m + lm, p, partLen);
            ~~~~~~            ^~~~~~~
e_loadsave.cpp:148:25: warning: implicit conversion changes signedness: 'ssize_t' (aka 'long') to 'unsigned long' [-Wsign-conversion]
            numChars += partLen;
                     ~~ ^~~~~~~
e_loadsave.cpp:169:51: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (!(LL[RCount++] = new ELine(m, lm)))
                                     ~~~          ^~
e_loadsave.cpp:192:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if ((LL[RCount++] = new ELine(m, lm)) == 0)
                            ~~~          ^~
e_loadsave.cpp:215:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memset(VV, 0, VCount * sizeof(int));
                  ^~~~~~
e_loadsave.cpp:234:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        else len_start = strlen(BFS(this, BFS_CommentStart));
                       ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:236:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        else len_end = strlen(BFS(this, BFS_CommentEnd));
                     ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:265:31: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        pos = LL[l]->Count - len_end;
                            ~ ^~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:265:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        pos = LL[l]->Count - len_end;
                              ~~             ^~~~~~~
e_loadsave.cpp:267:99: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (len_end != 0 && memcmp(LL[l]->Chars + pos, BFS(this, BFS_CommentEnd), len_end) != 0) continue;
                                            ~~~~~~                                                ^~~~~~~
e_loadsave.cpp:284:111: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (pos < 0 || (len_start != 0 && memcmp(LL[l]->Chars + pos, BFS(this, BFS_CommentStart), len_start) != 0)) continue;
                                                      ~~~~~~                                                  ^~~~~~~~~
e_loadsave.cpp:286:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    if (LL[l]->Count - pos == len_start + len_end) continue;
                        ~~             ^~~
e_loadsave.cpp:344:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                memcpy(buf, LL[l]->Chars + pos, i); buf[i] = 0;
                                ~~~~~~                          ^
e_loadsave.cpp:365:95: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (len_end != 0 && memcmp(LL[l]->Chars + pos, BFS(this, BFS_CommentEnd), len_end) != 0) continue;
                                        ~~~~~~                                                ^~~~~~~
e_loadsave.cpp:378:39: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
                        FF[f].level = (char)(level & 0xFF);
                                    ~ ^~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:386:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            LL[l]->Count - pos);
                            ~~             ^~~
e_loadsave.cpp:387:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    LL[l]->Count -= pos - startpos;
                                 ~~ ^~~~~~~~~~~~~~
e_loadsave.cpp:495:50: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    if (BFS(this, BFS_CommentStart)) len_start = strlen(BFS(this, BFS_CommentStart));
                                               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:496:46: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    if (BFS(this, BFS_CommentEnd)) len_end = strlen(BFS(this, BFS_CommentEnd));
                                           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:505:23: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            foldlen = sprintf(fold,
                    ~ ^~~~~~~~~~~~~
e_loadsave.cpp:520:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                blen += sprintf(book + blen, "%04x%02x%s", eb->GetPoint().Col, (int)l, eb->GetName());
                     ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_loadsave.cpp:523:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                blen += sprintf(book + blen, "x%04xb", blen);
                     ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from e_loadsave.cpp:10:
In file included from ./e_cvslog.h:14:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
25 warnings generated.
g++ -c e_mark.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
e_mark.cpp:78:29: note: in instantiation of member function 'fte::vector<EMark *>::size' requested here
    size_t L = 0, R = Marks.size();
                            ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:204:22: warning: implicit conversion changes signedness: 'long' to 'const size_type' (aka 'const unsigned long') [-Wsign-conversion]
        const size_type n = pos - m_begin;
                        ~   ^~~~~~~~~~~~~
e_mark.cpp:92:11: note: in instantiation of member function 'fte::vector<EMark *>::insert' requested here
    Marks.insert(Marks.begin() + L, m);
          ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:310:21: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type isz = to - from;
              ~~~   ^~~~~~~~~
./stl_fte.h:205:2: note: in instantiation of member function 'fte::vector<EMark *>::insert' requested here
        insert(pos, &t, &t + 1);
        ^
e_mark.cpp:92:11: note: in instantiation of member function 'fte::vector<EMark *>::insert' requested here
    Marks.insert(Marks.begin() + L, m);
          ^
In file included from e_mark.cpp:1:
In file included from ./e_mark.h:4:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:332:19: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type n = pos - m_begin;
              ~   ^~~~~~~~~~~~~
5 warnings generated.
g++ -c e_print.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_print.cpp:51:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_print.cpp:66:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_print.cpp:69:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                Z = LL->Count;
                  ~ ~~~~^~~~~
e_print.cpp:79:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    Z = LL->Count;
                      ~ ~~~~^~~~~
e_print.cpp:81:56: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if ((int)(fwrite(LL->Chars + A, 1, Z - A, fp)) != Z - A) {
                              ~~~~~~                   ^~~~~
e_print.cpp:153:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                ByteCount += BChars;
                          ~~ ^~~~~~
e_print.cpp:155:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if ((int)(fwrite(FileBuffer, 1, BChars, fp)) != BChars) goto fail;
                          ~~~~~~                ^~~~~~
e_print.cpp:175:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        ByteCount += BChars;
                  ~~ ^~~~~~
e_print.cpp:177:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if ((int)(fwrite(FileBuffer, 1, BChars, fp)) != BChars) goto fail;
                  ~~~~~~                ^~~~~~
In file included from e_print.cpp:10:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
10 warnings generated.
g++ -c e_redraw.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_redraw.cpp:29:40: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        *StateMap = (hsState *) malloc(*StateLen);
                                ~~~~~~ ^~~~~~~~~
e_redraw.cpp:152:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, W, ' ', hcPlain_Background, W);
    ~~~~~~~~                                   ^
e_redraw.cpp:202:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveAttr(B, 0, W, foldColor, W);
                    ~~~~~~~~                     ^
e_redraw.cpp:239:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveBgAttr(B, StartPos, W, hcPlain_Selected, EndPos - StartPos);
                    ~~~~~~~~~~                                   ^~~~~~~~~~~~~~~~~
e_redraw.cpp:241:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveAttr(B, StartPos, W, hcPlain_Selected, EndPos - StartPos);
                    ~~~~~~~~                                   ^~~~~~~~~~~~~~~~~
e_redraw.cpp:252:63: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveBgAttr(B, 0, W, hcPlain_Bookmark, W);
                        ~~~~~~~~~~                            ^
e_redraw.cpp:254:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveAttr(B, 0, W, hcPlain_Bookmark, W);
                        ~~~~~~~~                            ^
e_redraw.cpp:270:73: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, W, ConGetDrawChar(DCH_END), hcPlain_Markers, W);
            ~~~~~~~~                                                    ^
e_redraw.cpp:417:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveChar(B, 0, W->Cols, ' ', SColor, W->Cols);
        ~~~~~~~~                             ~~~^~~~
e_redraw.cpp:430:48: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int NumChars = RLine(ActLine)->Count;
                    ~~~~~~~~   ~~~~~~~~~~~~~~~~^~~~~
e_redraw.cpp:434:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int lf = strlen(fName);
                    ~~   ^~~~~~~~~~~~~
e_redraw.cpp:440:29: warning: implicit conversion changes signedness: 'char' to 'unsigned char' [-Wsign-conversion]
                    CurCh = VLine(CurLine)->Chars[CurPos];
                          ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_redraw.cpp:485:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int l = strlen(s);
                    ~   ^~~~~~~~~
e_redraw.cpp:487:26: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                int fl = strlen(FileName);
                    ~~   ^~~~~~~~~~~~~~~~
e_redraw.cpp:490:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveStr(B, 0, W->Cols, s, SColor, W->Cols);
                ~~~~~~~                           ~~~^~~~
e_redraw.cpp:492:28: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                MoveStr(B, W->Cols - strlen(num), W->Cols, num, SColor, W->Cols);
                ~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~
e_redraw.cpp:492:31: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                MoveStr(B, W->Cols - strlen(num), W->Cols, num, SColor, W->Cols);
                           ~~~^~~~
e_redraw.cpp:492:76: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveStr(B, W->Cols - strlen(num), W->Cols, num, SColor, W->Cols);
                ~~~~~~~                                                 ~~~^~~~
e_redraw.cpp:497:75: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveStr(B, l, W->Cols, FileName + fl - fw, SColor, W->Cols);
                    ~~~~~~~                                            ~~~^~~~
e_redraw.cpp:499:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveStr(B, l, W->Cols, FileName, SColor, W->Cols);
                    ~~~~~~~                                  ~~~^~~~
e_redraw.cpp:502:58: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, W->Cols, V->CurMsg, SColor, W->Cols);
            ~~~~~~~                                   ~~~^~~~
In file included from e_redraw.cpp:10:
In file included from ./c_bind.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
22 warnings generated.
g++ -c e_regex.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_regex.cpp:77:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:81:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:85:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:96:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 7) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:100:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 7) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:104:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 7) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:115:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:119:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
              ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:154:22: warning: implicit conversion changes signedness: 'const char' to 'unsigned char' [-Wsign-conversion]
        switch (Ch = *((*Regexp)++)) {
                   ~ ^~~~~~~~~~~~~~
e_regex.cpp:166:26: warning: implicit conversion changes signedness: 'const char' to 'unsigned char' [-Wsign-conversion]
            switch (Ch = *((*Regexp)++)) {
                       ~ ^~~~~~~~~~~~~~
e_regex.cpp:181:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                      N = toupper(**Regexp) - 48; if (N > 9) return 0;
                        ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:185:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                      N = toupper(**Regexp) - 48; if (N > 9) return 0;
                        ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:189:27: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                      N = toupper(**Regexp) - 48; if (N > 9) return 0;
                        ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:200:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 7) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:204:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 7) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:208:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 7) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:219:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:223:25: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    N = toupper(**Regexp) - 48; if (N > 9) N = N + 48 - 65 + 10; if (N > 15) return 0;
                      ~ ^~~~~~~~~~~~~~~~~~~~~~
e_regex.cpp:246:33: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (isalnum(xx)) {
                        ~~~~~~~ ^~
e_regex.cpp:254:34: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (!isalnum(xx)) {
                         ~~~~~~~ ^~
e_regex.cpp:262:33: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (isdigit(xx)) {
                        ~~~~~~~ ^~
e_regex.cpp:270:34: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                    if (!isdigit(xx)) {
                         ~~~~~~~ ^~
e_regex.cpp:657:46: warning: implicit conversion changes signedness: 'short' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (memcmp(rex, n->fChar, n->fLen) != 0) return 0;
                    ~~~~~~                ~~~^~~~
e_regex.cpp:772:13: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    flags = RxOpt;
          ~ ^~~~~
e_regex.cpp:785:13: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    flags = RxOpt;
          ~ ^~~~~
e_regex.cpp:908:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    add(&dlen, &dest, Src + match.Open[n], match.Close[n] - match.Open[n], flag);
                    ~~~                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
26 warnings generated.
g++ -c e_search.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_search.cpp:30:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    case 'c': opt &= ~SEARCH_NEXT; break;    // search from current position
                  ~~ ^~~~~~~~~~~~
e_search.cpp:142:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    opt.Options = Options;
                ~ ^~~~~~~
e_search.cpp:148:23: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    int Options = opt.Options;
        ~~~~~~~   ~~~~^~~~~~~
e_search.cpp:182:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = X->Count;
                  ~ ~~~^~~~~
e_search.cpp:216:35: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    C = RLine(L)->Count;
                      ~ ~~~~~~~~~~^~~~~
e_search.cpp:242:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        LLen = X->Count;
             ~ ~~~^~~~~
e_search.cpp:278:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                  && (memcmp(P + C, Data, Len) == 0))
                      ~~~~~~              ^~~
e_search.cpp:282:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                  && (strnicmp(P + C, Data, Len) == 0))) /* && BOL | EOL */
                      ~~~~~~~~              ^~~
e_search.cpp:288:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MatchLen = ScreenPos(X, C + Len) - Match.Col;
                         ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:303:31: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = RLine(L)->Count;
                  ~ ~~~~~~~~~~^~~~~
e_search.cpp:314:23: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    int Options = opt.Options;
        ~~~~~~~   ~~~~^~~~~~~
e_search.cpp:350:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = X->Count;
                  ~ ~~~^~~~~
e_search.cpp:359:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                C = X->Count;
                  ~ ~~~^~~~~
e_search.cpp:405:35: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                    C = RLine(L)->Count;
                      ~ ~~~~~~~~~~^~~~~
e_search.cpp:431:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        LLen = X->Count;
             ~ ~~~^~~~~
e_search.cpp:458:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (RxExec(Rx, P + Start, End - Start, P + C, &b, (Options & SEARCH_NCASE) ? 0 : RX_CASE) == 1) {
                ~~~~~~                ^~~~~~~~~~~
e_search.cpp:463:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MatchLen = ScreenPos(X, b.Close[0] + Start) - C;
                         ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:489:23: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    int Options = opt.Options;
        ~~~~~~~   ~~~~^~~~~~~
e_search.cpp:528:40: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            if (FindStr(opt.strSearch, slen, opt) == 0) goto end;
                ~~~~~~~                ^~~~
e_search.cpp:596:37: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                opt.lastInsertLen = strlen(opt.strReplace);
                                  ~ ^~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:600:30: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                MatchCount = rlen;
                           ~ ^~~~
e_search.cpp:691:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (DelText(Match.Row, 0, LineLen()) == 0) goto error;
                    ~~~~~~~               ^~~~~~~~~
e_search.cpp:820:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options = Case | Next | (Options & ~SEARCH_NCASE);
                    ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:855:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options = Case | (Options & ~SEARCH_NCASE) | SEARCH_ALL | SEARCH_REPLACE;
                    ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_search.cpp:899:78: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            rlst.Lines = (int *) realloc((void *) rlst.Lines, sizeof(int) * (rlst.Count | 0x1F));
                                                              ~~~~~~         ^~~~~~~~~~~~~~~~~
e_search.cpp:928:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    NChars = VLine(CP.Row)->Count;
           ~ ~~~~~~~~~~~~~~~^~~~~
e_search.cpp:1031:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (searchForLine == -1 || BMarks[i]->GetPoint().Row == searchForLine) {
                                   ~~~~~~ ^
e_search.cpp:1032:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
            b = BMarks[i];
                ~~~~~~ ^
e_search.cpp:1106:37: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            Pos = (dir == 1) ? 0 : (L->Count - 1);
                             ~      ^~~~~~~~~~~~
In file included from e_search.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from e_search.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<EBookmark *>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
e_search.cpp:995:12: note: in instantiation of member function 'fte::vector<EBookmark *>::push_back' requested here
    BMarks.push_back(b);
           ^
In file included from e_search.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
e_search.cpp:1030:46: note: in instantiation of member function 'fte::vector<EBookmark *>::size' requested here
    for (int i = searchFrom; i < (int)BMarks.size(); i++)
                                             ^
32 warnings generated.
g++ -c e_svnlog.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_svnlog.cpp:17:
./o_svn.h:32:22: warning: 'ESvn::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
e_svnlog.cpp:119:20: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        InsText (p,i+=5,5, " file");
        ~~~~~~~    ^~~~
e_svnlog.cpp:121:36: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (fCount!=1) InsText (p,i++,1, "s");
                       ~~~~~~~    ~^~
e_svnlog.cpp:122:22: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        InsText (p++,i,1, ":");
        ~~~~~~~      ^
e_svnlog.cpp:128:32: warning: implicit conversion changes signedness: 'const int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                InsText(p++,11,len[i], list+position[i]);
                ~~~~~~~        ^~~~~~
In file included from e_svnlog.cpp:11:
In file included from ./e_svnlog.h:14:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
6 warnings generated.
g++ -c e_tags.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_tags.cpp:72:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    while (N < (TagLen + Len))
                ^~~~~~
e_tags.cpp:75:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (!(NM = (char *)realloc((void *)TagMem, N)))
                           ~~~~~~~                 ^
e_tags.cpp:93:53: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (!(ND = (TagData *)realloc((void *)TagD, N * sizeof(TagData))))
                                                    ^
e_tags.cpp:137:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (!(NI = (int *)realloc(TagI, CTags * sizeof(int))))
                                    ^~~~~
e_tags.cpp:144:17: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(TagI, CTags, sizeof(TagI[0]), cmptags);
    ~~~~~       ^~~~~
e_tags.cpp:179:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        if (!(TagMem = (char *)realloc((void *)TagMem, TagLen + (size_t)sb.st_size)))
                                                       ^~~~~~
e_tags.cpp:194:16: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        TagL = p - LTag;
             ~ ^~~~~~~~
e_tags.cpp:199:17: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        FileL = p - LFile;
              ~ ^~~~~~~~~
e_tags.cpp:207:29: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (!AllocMem(LTag, TagL + FileL, &MTag))
             ~~~~~~~~       ^~~~~~~~~~~~
e_tags.cpp:258:52: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (!(NewT = (int *)realloc((void *)TagFiles, (TagFileCount + 1) * sizeof(int))))
                                                  ~^~~~~~~~~~~~~~~~
e_tags.cpp:370:70: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        if (!((EBuffer *)ActiveModel)->FindStr(TagMem + TT->StrFind, strlen(TagMem + TT->StrFind), 0))
             ~                                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_tags.cpp:373:57: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    ((EBuffer *)ActiveModel)->FindStr(TagMem + TT->Tag, strlen(TagMem + TT->Tag), 0);
    ~                                                   ^~~~~~~~~~~~~~~~~~~~~~~~
e_tags.cpp:381:15: warning: unused variable 'T' [-Wunused-variable]
    TagStack* T = TagStack::TStack;
              ^
e_tags.cpp:493:33: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int L = 0, R = CTags, len = strlen(Tag);
                          ~~~   ^~~~~~~~~~~
e_tags.cpp:498:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        c = strncmp(Tag, TagMem + TagD[TagI[M]].Tag, len);
            ~~~~~~~                                  ^~~
e_tags.cpp:501:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                   strncmp(Tag, TagMem + TagD[TagI[M - 1]].Tag, len) == 0)
                   ~~~~~~~                                      ^~~
e_tags.cpp:504:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            while (strncmp(Tag, TagMem + TagD[TagI[N]].Tag, len) == 0) {
                   ~~~~~~~                                  ^~~
e_tags.cpp:508:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                    int l = strlen(TagMem + TagD[TagI[N]].Tag) - len;
                        ~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_tags.cpp:508:66: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    int l = strlen(TagMem + TagD[TagI[N]].Tag) - len;
                            ~~~~~~                               ^~~
In file included from e_tags.cpp:9:
In file included from ./e_tags.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
20 warnings generated.
g++ -c e_trans.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_trans.cpp:110:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                E = LL->Count;
                  ~ ~~~~^~~~~
e_trans.cpp:126:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                E = LL->Count;
                  ~ ~~~~^~~~~
e_trans.cpp:132:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                E = LL->Count;
                  ~ ~~~~^~~~~
e_trans.cpp:137:21: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            B = LL->Count;
              ~ ~~~~^~~~~
e_trans.cpp:139:21: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            E = LL->Count;
              ~ ~~~~^~~~~
e_trans.cpp:141:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (ChgChars(L, B, E - B, 0) == 0) return 0;
                ~~~~~~~~       ^~~~~
e_trans.cpp:143:32: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
                LL->Chars[I] = tab[(unsigned char)LL->Chars[I]];
                             ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_trans.cpp:152:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    unsigned int P = CharOffset(L, CP.Col);
                 ~   ^~~~~~~~~~~~~~~~~~~~~
e_trans.cpp:155:26: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (ChgChars(CP.Row, P, 1, 0) == 0) return 0;
        ~~~~~~~~         ^
e_trans.cpp:156:19: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
    L->Chars[P] = tab[(unsigned char)L->Chars[P]];
                ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
e_trans.cpp:167:27: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
            L->Chars[I] = tab[(unsigned char)L->Chars[I]];
                        ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from e_trans.cpp:10:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
12 warnings generated.
g++ -c e_undo.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
e_undo.cpp:36:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BB.Col) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:37:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BB.Row) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:38:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BE.Col) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:39:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BE.Row) == 0) return 0;
        ~~~~~~~~~ ~~~^~~
e_undo.cpp:40:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (PushULong(BlockMode) == 0) return 0;
        ~~~~~~~~~ ^~~~~~~~~
e_undo.cpp:59:63: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        US.Data = (void **) realloc(US.Data, sizeof(void *) * Order);
                                             ~~~~~~           ^~~~~
e_undo.cpp:60:56: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        US.Top = (int *) realloc(US.Top, sizeof(int) * Order);
                                         ~~~~~~        ^~~~~
e_undo.cpp:92:68: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            US.Data = (void **) realloc(US.Data, sizeof(void *) * (N | 255));
                                                 ~~~~~~            ^~~~~~~
e_undo.cpp:93:67: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            US.Top = (int *)   realloc(US.Top,  sizeof(int)    * (N | 255));
                                                ~~~~~~            ^~~~~~~
e_undo.cpp:100:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memmove(US.Data, US.Data + 1, (N - 1) * sizeof(US.Data[0]));
                                          ~^~~~~
e_undo.cpp:101:44: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memmove(US.Top,  US.Top  + 1, (N - 1) * sizeof(US.Top[0]));
                                          ~^~~~~
e_undo.cpp:111:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(CP.Col) == 0) return 0;
                ~~~~~~~~~ ~~~^~~
e_undo.cpp:112:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(CP.Row) == 0) return 0;
                ~~~~~~~~~ ~~~^~~
e_undo.cpp:124:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    while (Order < (US.Top[N] + len)) Order <<= 1;
                    ^~~~~~~~~
e_undo.cpp:125:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    US.Data[N] = realloc(US.Data[N], Order);
                 ~~~~~~~             ^~~~~
e_undo.cpp:214:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (DelLine(Line) == 0) return 0;
                ~~~~~~~ ^~~~
e_undo.cpp:222:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsLine(Line, 0) == 0) return 0;
                ~~~~~~~ ^~~~
e_undo.cpp:224:25: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsText(Line, 0, Len, (char *) data) == 0) return 0;
                ~~~~~~~ ^~~~
e_undo.cpp:233:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (DelChars(Line, Col, ACount) == 0) return 0;
                ~~~~~~~~ ^~~~
e_undo.cpp:233:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (DelChars(Line, Col, ACount) == 0) return 0;
                ~~~~~~~~       ^~~
e_undo.cpp:242:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsChars(Line, Col, ACount, (char *) data) == 0) return 0;
                ~~~~~~~~ ^~~~
e_undo.cpp:242:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (InsChars(Line, Col, ACount, (char *) data) == 0) return 0;
                ~~~~~~~~       ^~~
e_undo.cpp:250:24: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (SetPos(Col, Line) == 0) return 0;
                ~~~~~~ ^~~
e_undo.cpp:250:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (SetPos(Col, Line) == 0) return 0;
                ~~~~~~      ^~~~
e_undo.cpp:274:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldDestroy(Line) == 0) return 0;
                ~~~~~~~~~~~ ^~~~
e_undo.cpp:285:32: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                if (FoldCreate(Line) == 0) return 0;
                    ~~~~~~~~~~ ^~~~
e_undo.cpp:287:31: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                ff = FindFold(Line);
                     ~~~~~~~~ ^~~~
e_undo.cpp:295:28: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldDemote(Line) == 0) return 0;
                ~~~~~~~~~~ ^~~~
e_undo.cpp:301:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldPromote(Line) == 0) return 0;
                ~~~~~~~~~~~ ^~~~
e_undo.cpp:307:27: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldClose(Line) == 0) return 0;
                ~~~~~~~~~ ^~~~
e_undo.cpp:313:26: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (FoldOpen(Line) == 0) return 0;
                ~~~~~~~~ ^~~~
e_undo.cpp:332:67: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                          ~~~~~~  ^~~~
e_undo.cpp:332:72: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                          ~~~~~~       ^~~
e_undo.cpp:343:63: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                      ~~~~~~  ^~~~
e_undo.cpp:343:68: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
            if (PlaceUserBookmark ((const char *)data,EPoint (Line,Col))==0) return 0;
                                                      ~~~~~~       ^~~
In file included from e_undo.cpp:12:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
36 warnings generated.
g++ -c fte.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c gui.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c g_draw.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g_draw.cpp:36:16: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(CCh, Attr);
        ~      ^~~
g_draw.cpp:44:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:48:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
g_draw.cpp:50:16: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(CCh, Attr);
        ~      ^~~
g_draw.cpp:58:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:63:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
g_draw.cpp:65:16: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(*Ch++, Attr);
        ~      ^~~~~
g_draw.cpp:73:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        MaxCount += Pos;
                 ~~ ^~~
g_draw.cpp:78:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)MaxCount > Width - Pos) MaxCount = Width - Pos;
                                              ~ ^~~~~~~~~~~
g_draw.cpp:80:16: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B->Set(*Ch++, Attr);
        ~      ^~~~~
g_draw.cpp:89:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        MaxCount += Pos;
                 ~~ ^~~
g_draw.cpp:94:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)MaxCount > Width - Pos) MaxCount = Width - Pos;
                                              ~ ^~~~~~~~~~~
g_draw.cpp:101:18: warning: implicit conversion changes signedness: 'const char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        B++->Set(*Ch++, attr);
        ~        ^~~~~
g_draw.cpp:112:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:116:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
g_draw.cpp:126:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Count += Pos;
              ~~ ^~~
g_draw.cpp:130:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    if ((int)Count > Width - Pos) Count = Width - Pos;
                                        ~ ^~~~~~~~~~~
17 warnings generated.
g++ -c g_menu.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g_menu.cpp:20:48: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                              sizeof(mMenu) * (MenuCount + 1));
                              ~~~~~~           ^~~~~~~~~~~~~
g_menu.cpp:38:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    n = Menus[menu].Count;
      ~ ~~~~~~~~~~~~^~~~~
g_menu.cpp:56:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    n = Menus[menu].Count;
      ~ ~~~~~~~~~~~~^~~~~
3 warnings generated.
g++ -c h_ada.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_ada.cpp:30:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_ada.cpp:37:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_ada.cpp:37:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:43:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_ada.cpp:44:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_ada.cpp:45:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_') ||
                                         ~   ^
h_ada.cpp:46:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '\''))
                                         ~   ^
h_ada.cpp:48:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 1)) {
                        ~~                                       ^
h_ada.cpp:52:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        x = i + j;
                          ~ ^~~~~
h_ada.cpp:52:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        x = i + j;
                            ~   ^
h_ada.cpp:63:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_ada.cpp:65:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_ada.cpp:66:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_ada.cpp:67:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_ada.cpp:76:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:78:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:82:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:83:102: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.' || *p == '_')) ColorNext();
                                                                                                     ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:105:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:113:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ada.cpp:123:15: warning: equality comparison with extraneous parentheses [-Wparentheses-equality]
    if ((len1 == 0)) {
         ~~~~~^~~~
h_ada.cpp:123:15: note: remove extraneous parentheses around the comparison to silence this warning
    if ((len1 == 0)) {
        ~     ^   ~
h_ada.cpp:123:15: note: use '=' to turn this equality comparison into an assignment
    if ((len1 == 0)) {
              ^~
              =
In file included from h_ada.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
22 warnings generated.
g++ -c h_c.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_c.cpp:44:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_c.cpp:50:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_c.cpp:50:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:65:40: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    for (j = 0; (((i + j) < Line->Count)
                                   ~   ^
h_c.cpp:66:60: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                 && ISNAME(Line->Chars[i + j])); j++)
                                    ~~~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:29: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                            ^
h_c.cpp:66:60: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                                 && ISNAME(Line->Chars[i + j])); j++)
                                    ~~~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:37: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                                    ^
h_c.cpp:68:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j)) {
                        ~~                                       ^
h_c.cpp:72:33: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        int x = i + j;
                            ~   ^~~~~
h_c.cpp:72:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        int x = i + j;
                                ~   ^
h_c.cpp:92:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_c.cpp:94:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_c.cpp:95:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_c.cpp:96:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_c.cpp:114:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:115:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:116:57: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            while (len && isxdigit(*p)) ColorNext();
                                                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:119:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:120:69: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            while (len && ('0' <= *p && *p <= '7')) ColorNext();
                                                                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:125:61: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                                while (len && !isspace(*p)) ColorNext();
                                                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:131:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:132:93: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.')) ColorNext();
                                                                                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:135:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:142:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:146:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:147:56: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (len && (ISUPPER(*p, 'L'))) ColorNext();
                                                       ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:148:71: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (! colored_u && len && (ISUPPER(*p, 'U'))) ColorNext();
                                                                      ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:178:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:179:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:187:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:188:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:208:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:218:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:228:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:238:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:247:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_c.cpp:248:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (ISNAME(Line->Chars[i+j])))
                            ~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:29: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                            ^
h_c.cpp:248:50: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (ISNAME(Line->Chars[i+j])))
                            ~~~~~~~~~~~~~~~~~~~~~^~~
h_c.cpp:22:37: note: expanded from:
#define ISNAME(x)  (isalnum(x) || ((x) == '_'))
                                    ^
h_c.cpp:253:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_c.cpp:255:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_c.cpp:256:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_c.cpp:257:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_c.cpp:269:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:271:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:277:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:278:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:280:33: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                                ColorNext();
                                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:283:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:284:69: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            while (len && ('0' <= *p && *p <= '7')) ColorNext();
                                                                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:290:37: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                                    ColorNext();
                                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:296:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:298:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:306:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:310:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:311:56: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (len && (ISUPPER(*p, 'L'))) ColorNext();
                                                       ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:312:71: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        if (! colored_u && len && (ISUPPER(*p, 'U'))) ColorNext();
                                                                      ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:324:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_c.cpp:368:43: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    unsigned uLineLength = B->RLine(Row)->Count;
             ~~~~~~~~~~~   ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:369:11: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    Pos = B->CharOffset(B->RLine(Row), Pos);
        ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
h_c.cpp:369:40: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    Pos = B->CharOffset(B->RLine(Row), Pos);
          ~                            ^~~
h_c.cpp:504:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:522:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    if (LOpen + Pos <= L) {
                        ~~~~~   ^~~
h_c.cpp:536:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        if (LClose + Pos <= L) {
                            ~~~~~~   ^~~
h_c.cpp:572:25: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    L = B->RLine(RowP)->Count;
      ~ ~~~~~~~~~~~~~~~~^~~~~
h_c.cpp:584:29: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(RowP)->Count;
          ~ ~~~~~~~~~~~~~~~~^~~~~
h_c.cpp:828:33: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            L = B->RLine(RowP)->Count;
              ~ ~~~~~~~~~~~~~~~~^~~~~
h_c.cpp:850:24: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    L = B->RLine(Row)->Count;
      ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:857:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:897:36: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                L = B->RLine(Row)->Count;
                  ~ ~~~~~~~~~~~~~~~^~~~~
h_c.cpp:1088:40: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                       ~~~~~~          ^~~~
h_c.cpp:1091:46: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && !LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                             ~~~~~~          ^~~~
h_c.cpp:1094:45: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                            ~~~~~~          ^~~~
h_c.cpp:1151:40: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                    && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                       ~~~~~~          ^~~~
h_c.cpp:1154:46: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && !LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                             ~~~~~~          ^~~~
h_c.cpp:1157:45: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                         && LookAt(B, RowP, ColP, "{", hsC_Normal, 0))
                            ~~~~~~          ^~~~
h_c.cpp:1270:36: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            if (LookAt(B, Row - 1, I, "/*", hsC_Comment, 0)) I += C_COMMENT_DELTA;
                ~~~~~~             ^
h_c.cpp:1272:36: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            if (LookAt(B, Row - 1, I, "/*", hsC_CPP_Comm, 0)) I += C_COMMENT_DELTA;
                ~~~~~~             ^
In file included from h_c.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
77 warnings generated.
g++ -c h_catbs.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_catbs.cpp:26:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_catbs.cpp:26:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_catbs.cpp:46:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_catbs.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
4 warnings generated.
g++ -c h_fte.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_fte.cpp:32:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_fte.cpp:39:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_fte.cpp:39:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:45:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_fte.cpp:46:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_fte.cpp:47:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_fte.cpp:49:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j)) {
                        ~~                                       ^
h_fte.cpp:56:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_fte.cpp:58:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_fte.cpp:59:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_fte.cpp:60:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_fte.cpp:75:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:76:89: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.')) ColorNext();
                                                                                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:77:54: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    if (len && (toupper(*p) == 'U')) ColorNext();
                                                     ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:78:54: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    if (len && (toupper(*p) == 'L')) ColorNext();
                                                     ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:98:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:102:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:114:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:116:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:119:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:129:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:139:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_fte.cpp:149:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_fte.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
24 warnings generated.
g++ -c h_ipf.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_ipf.cpp:32:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_ipf.cpp:32:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:51:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_ipf.cpp:52:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_ipf.cpp:53:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_ipf.cpp:55:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 1)) {
                        ~~                                       ^
h_ipf.cpp:58:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_ipf.cpp:60:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_ipf.cpp:61:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_ipf.cpp:62:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_ipf.cpp:72:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:80:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:88:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_ipf.cpp:101:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_ipf.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
15 warnings generated.
g++ -c h_make.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_make.cpp:24:16: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int len1 = len;
        ~~~~   ^~~
h_make.cpp:32:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_make.cpp:32:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_make.cpp:61:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_make.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c h_msg.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_msg.cpp:98:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_msg.cpp:98:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:101:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_msg.cpp:102:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_msg.cpp:103:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_msg.cpp:105:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, Line->Chars + i, j, 1)) ;
                        ~~                                       ^
h_msg.cpp:110:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_msg.cpp:112:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_msg.cpp:113:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_msg.cpp:114:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_msg.cpp:120:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:128:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_msg.cpp:128:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:129:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_msg.cpp:136:68: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, Color, Width);
                    ~~~~~~~                                        ^~~~~
h_msg.cpp:141:82: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, Color, Line->Count - Pos);
                                                                   ~~~~          ^~~
h_msg.cpp:146:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        C = Line->Count;
          ~ ~~~~~~^~~~~
In file included from h_msg.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
18 warnings generated.
g++ -c h_pascal.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_pascal.cpp:35:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_pascal.cpp:35:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:41:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_pascal.cpp:42:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_pascal.cpp:43:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_pascal.cpp:45:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 1)) {
                        ~~                                       ^
h_pascal.cpp:53:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_pascal.cpp:55:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_pascal.cpp:56:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_pascal.cpp:57:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_pascal.cpp:65:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:73:7: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:74:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:75:49: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && isxdigit(*p)) ColorNext();
                                                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:79:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:80:89: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || *p == 'e' || *p == 'E' || *p == '.')) ColorNext();
                                                                                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:99:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:100:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:108:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:116:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:124:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_pascal.cpp:129:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_pascal.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
23 warnings generated.
g++ -c h_perl.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_perl.cpp:145:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_perl.cpp:145:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:163:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:165:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:167:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:169:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:171:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:173:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:228:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_perl.cpp:229:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_perl.cpp:230:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_' || Line->Chars[i + j] == '\''))
                                         ~   ^
h_perl.cpp:230:75: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_' || Line->Chars[i + j] == '\''))
                                                                      ~   ^
h_perl.cpp:232:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j)) {
                        ~~                                       ^
h_perl.cpp:241:29: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        x = i + j;
                          ~ ^~~~~
h_perl.cpp:241:33: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        x = i + j;
                            ~   ^
h_perl.cpp:268:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_perl.cpp:270:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_perl.cpp:271:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_perl.cpp:272:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_perl.cpp:313:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:314:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:320:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:323:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:329:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:330:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:336:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:342:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:346:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:353:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:354:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:361:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:362:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:371:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:373:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        IF_TAB() else
                        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_perl.cpp:373:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        IF_TAB() else
                        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:374:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:384:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:397:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:401:48: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        UntilMatchBrace(first, ColorNext());
                        ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
                        ^
./c_hilit.h:126:13: note: expanded from:
            cmd;                         \
            ^~~
h_perl.cpp:410:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:417:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:418:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:419:64: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isxdigit(*p) || *p == '_')) ColorNext();
                                                               ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:427:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:428:91: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    while (len && (isdigit(*p) || (*p == 'e' || *p == 'E' || *p == '_'))) ColorNext();
                                                                                          ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:466:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:501:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:502:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:508:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:514:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:545:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:561:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:589:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:592:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:608:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:611:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:639:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:656:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:676:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:684:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:685:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:686:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:687:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:701:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:711:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_perl.cpp:721:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_perl.cpp:21:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
67 warnings generated.
g++ -c h_plain.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_plain.cpp:28:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_plain.cpp:28:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:31:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_plain.cpp:32:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_plain.cpp:33:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_plain.cpp:35:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, Line->Chars + i, j, 1)) ;
                        ~~                                       ^
h_plain.cpp:41:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_plain.cpp:43:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_plain.cpp:44:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_plain.cpp:45:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_plain.cpp:52:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:60:13: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_plain.cpp:60:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            IF_TAB() else {
            ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:61:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_plain.cpp:68:75: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, HILIT_CLRD(), Width);
                    ~~~~~~~                                               ^~~~~
h_plain.cpp:73:89: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    MoveMem(B, 0, Width, Line->Chars + Pos, HILIT_CLRD(), Line->Count - Pos);
                                                                          ~~~~          ^~~
h_plain.cpp:78:19: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        C = Line->Count;
          ~ ~~~~~~^~~~~
In file included from h_plain.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
18 warnings generated.
g++ -c h_rexx.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_rexx.cpp:37:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_rexx.cpp:37:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:42:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:44:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:66:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_rexx.cpp:67:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j]) ||
                                                ~ ^
h_rexx.cpp:68:46: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            (Line->Chars[i + j] == '_'))
                                         ~   ^
h_rexx.cpp:75:70: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (BF->GetHilitWord(Color, Line->Chars + i, j, 1))
                            ~~                                       ^
h_rexx.cpp:79:33: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                            x = i + j;
                              ~ ^~~~~
h_rexx.cpp:79:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                            x = i + j;
                                ~   ^
h_rexx.cpp:89:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_rexx.cpp:91:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_rexx.cpp:95:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_rexx.cpp:96:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_rexx.cpp:105:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:107:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:112:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:113:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:117:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:119:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_rexx.cpp:162:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int L = strlen(String);
        ~   ^~~~~~~~~~~~~~
h_rexx.cpp:165:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (StateMap == NULL || IsState(StateMap + Pos, State, L))
                                ~~~~~~~                        ^
h_rexx.cpp:166:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (strnicmp(String, Text + Pos, L) == 0)
                ~~~~~~~~                     ^
h_rexx.cpp:172:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    int L = strlen(String);
        ~   ^~~~~~~~~~~~~~
h_rexx.cpp:179:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (StateMap == NULL || IsState(StateMap + Pos, State, L))
                                ~~~~~~~                        ^
h_rexx.cpp:180:46: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (strnicmp(String, Text + Pos, L) == 0)
                ~~~~~~~~                     ^
h_rexx.cpp:202:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
h_rexx.cpp:286:28: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        L = B->RLine(Row)->Count;
          ~ ~~~~~~~~~~~~~~~^~~~~
In file included from h_rexx.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
29 warnings generated.
g++ -c h_sh.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_sh.cpp:56:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_sh.cpp:56:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:79:57: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (!BF->GetHilitWord(Color, p, j, 0)) {
                             ~~                         ^
h_sh.cpp:93:58: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "in", j);
                                        ~~~~~~~          ^
h_sh.cpp:96:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "for", j);
                                        ~~~~~~~           ^
h_sh.cpp:99:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "read", j);
                                        ~~~~~~~            ^
h_sh.cpp:102:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "unset", j);
                                        ~~~~~~~             ^
h_sh.cpp:105:62: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                    s = strncmp(p, "export", j);
                                        ~~~~~~~              ^
h_sh.cpp:134:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:137:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:140:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:162:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:163:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:164:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:248:49: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            UntilMatchBrace('{',ColorNext());
                            ~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
                        ^
./c_hilit.h:126:13: note: expanded from:
            cmd;                         \
            ^~~
h_sh.cpp:255:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_sh.cpp:279:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                memset(StateMap + i, State, j);
                ~~~~~~                      ^
h_sh.cpp:281:61: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveMem(B, C - Pos, Width, p, HILIT_CLRD(), j);
                ~~~~~~~                                     ^
h_sh.cpp:282:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            i += j;
              ~~ ^
h_sh.cpp:283:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            len -= j;
                ~~ ^
In file included from h_sh.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
21 warnings generated.
g++ -c h_simple.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_simple.cpp:42:17: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
    Color = st->color;
          ~ ~~~~^~~~~
h_simple.cpp:80:51: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                    Color = hm->state[entryState].color;
                          ~ ~~~~~~~~~~~~~~~~~~~~~~^~~~~
h_simple.cpp:81:21: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    IF_TAB()
                    ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_simple.cpp:81:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    IF_TAB()
                    ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:83:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        ColorNext();
                        ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:92:23: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            lastPos = i;
                    ~ ^
h_simple.cpp:103:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                matchFlags = tr->matchFlags;
                           ~ ~~~~^~~~~~~~~~
h_simple.cpp:121:77: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        if (b.Open[1] != -1 && b.Close[1] != -1) matchLen = b.Open[1] - i;
                                                                          ~ ^~~~~~~~~~~~~
h_simple.cpp:121:77: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        if (b.Open[1] != -1 && b.Close[1] != -1) matchLen = b.Open[1] - i;
                                                                            ^~~~~~~~~
h_simple.cpp:122:41: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
                        else matchLen = b.Close[0] - i;
                                      ~ ^~~~~~~~~~~~~~
h_simple.cpp:122:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                        else matchLen = b.Close[0] - i;
                                        ^~~~~~~~~~
h_simple.cpp:124:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        if (memicmp(match, p, matchLen))
                            ~~~~~~~           ^~~~~~~~
h_simple.cpp:143:29: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                    State = nextState;
                          ~ ^~~~~~~~~
h_simple.cpp:150:33: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                        State = nextState;
                              ~ ^~~~~~~~~
h_simple.cpp:155:33: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                    Color = tr->color;
                          ~ ~~~~^~~~~
h_simple.cpp:157:25: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        IF_TAB()
                        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_simple.cpp:157:25: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                        IF_TAB()
                        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:159:29: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                            ColorNext();
                            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:161:33: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                        State = nextState;
                              ~ ^~~~~~~~~
h_simple.cpp:183:30: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                while (((i + j) < Line->Count) &&
                         ~   ^
h_simple.cpp:184:64: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                       (WGETBIT(st->wordChars, Line->Chars[i + j]))) j++;
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./c_mode.h:153:27: note: expanded from:
    (((x)[(unsigned char)(y) / 8] &  (1 << ((unsigned char)(y) % 8))) ? 1 : 0)
                          ^
h_simple.cpp:184:64: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                       (WGETBIT(st->wordChars, Line->Chars[i + j]))) j++;
                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
./c_mode.h:153:61: note: expanded from:
    (((x)[(unsigned char)(y) / 8] &  (1 << ((unsigned char)(y) % 8))) ? 1 : 0)
                                                            ^
h_simple.cpp:187:29: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                Color = st->color;
                      ~ ~~~~^~~~~
h_simple.cpp:191:37: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                        State = st->nextKwdNoCharState;
                              ~ ~~~~^~~~~~~~~~~~~~~~~~
h_simple.cpp:195:37: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                        Color = st->color;
                              ~ ~~~~^~~~~
h_simple.cpp:199:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (st->GetHilitWord(Color, &Line->Chars[i], j) ||
                        ~~                                       ^
h_simple.cpp:200:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        BF->GetHilitWord(Color, &Line->Chars[i], j, BFI( BF, BFI_MatchCase ) ? 0 : 1))
                        ~~                                       ^
h_simple.cpp:203:41: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                            State = st->nextKwdMatchedState;
                                  ~ ~~~~^~~~~~~~~~~~~~~~~~~
h_simple.cpp:206:41: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
                            State = st->nextKwdNotMatchedState;
                                  ~ ~~~~^~~~~~~~~~~~~~~~~~~~~~
h_simple.cpp:211:45: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                                Color = st->color;
                                      ~ ~~~~^~~~~
h_simple.cpp:224:37: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                        Color = st->color;
                              ~ ~~~~^~~~~
h_simple.cpp:228:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, MState, j);
                        ~~~~~~                       ^
h_simple.cpp:230:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_simple.cpp:231:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_simple.cpp:232:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_simple.cpp:238:37: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
                        Color = st->color;
                              ~ ~~~~^~~~~
h_simple.cpp:244:21: warning: implicit conversion loses integer precision: 'int' to 'ChColor' (aka 'unsigned char') [-Wconversion]
        Color = st->color;
              ~ ~~~~^~~~~
h_simple.cpp:245:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB()
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_simple.cpp:245:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB()
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:247:13: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
            ColorNext();
            ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_simple.cpp:256:26: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        matchFlags = tr->matchFlags;
                   ~ ~~~~^~~~~~~~~~
h_simple.cpp:268:21: warning: implicit conversion loses integer precision: 'int' to 'hlState' (aka 'unsigned short') [-Wconversion]
            State = nextState;
                  ~ ^~~~~~~~~
In file included from h_simple.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
43 warnings generated.
g++ -c h_tex.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
h_tex.cpp:29:9: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:151:59: note: expanded from:
    if (B) MoveChar(B, C - Pos, Width, ' ', HILIT_CLRD(), NC - C);\
           ~~~~~~~~                                       ^~~~~~
h_tex.cpp:29:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        IF_TAB() else {
        ^~~~~~~~
./c_hilit.h:152:32: note: expanded from:
    if (BFI(BF, BFI_ShowTabs)) ColorChar(); /*{ ChColor t = Color; Color = CLR_Punctuation; ColorChar(); Color = t; }*/\
                               ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:40:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:45:21: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                    ColorNext();
                    ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:54:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    while (((i + j) < Line->Count) &&
                             ~   ^
h_tex.cpp:55:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                           (isalnum(Line->Chars[i+j])/* ||
                                                ~ ^
h_tex.cpp:58:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (BF->GetHilitWord(Color, &Line->Chars[i], j, 0)) {
                        ~~                                       ^
h_tex.cpp:61:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        memset(StateMap + i, State, j);
                        ~~~~~~                      ^
h_tex.cpp:63:83: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                        MoveMem(B, C - Pos, Width, Line->Chars + i, HILIT_CLRD(), j);
                        ~~~~~~~                                                   ^
h_tex.cpp:64:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    i += j;
                      ~~ ^
h_tex.cpp:65:28: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    len -= j;
                        ~~ ^
h_tex.cpp:72:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
h_tex.cpp:82:17: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
                ColorNext();
                ^~~~~~~~~~~
./c_hilit.h:105:26: note: expanded from:
#define ColorNext() do { ColorChar(); NextChar(); } while (0)
                         ^
./c_hilit.h:97:18: note: expanded from:
            B[BPos].Set(*p, HILIT_CLRD()); \
            ~           ^~
In file included from h_tex.cpp:10:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
14 warnings generated.
g++ -c indent.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from indent.cpp:10:
In file included from ./e_buffer.h:13:
In file included from ./c_hilit.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c i_ascii.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_ascii.cpp:37:16: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch(kbCode(Event.Key.Code)) {
               ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
1 warning generated.
g++ -c i_choice.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_choice.cpp:24:10: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    SOpt(NSel),
    ~~~~ ^~~~
i_choice.cpp:55:40: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (x > pos && x <= pos + SOpt[i].GetCStrLen())
                                  ~~~~ ^
i_choice.cpp:57:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        pos += SOpt[i].GetCStrLen() + 1;
               ~~~~ ^
i_choice.cpp:65:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_choice.cpp:79:37: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                    if (strstr(SOpt[i].GetCStr(), s) != 0) {
                               ~~~~ ^
i_choice.cpp:129:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', hcChoice_Background, W);
    ~~~~~~                              ^
i_choice.cpp:130:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, 0, W, Title.c_str(), hcChoice_Title, W);
    ~~~~~~~                                         ^
i_choice.cpp:132:55: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, lTitle + 2, W, Prompt, hcChoice_Param, W);
    ~~~~~~~                                           ^
i_choice.cpp:147:38: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        MoveCStr(B, pos + 1, W, SOpt[i].GetCStr(), color1, color2, W);
                                ~~~~ ^
i_choice.cpp:147:68: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveCStr(B, pos + 1, W, SOpt[i].GetCStr(), color1, color2, W);
        ~~~~~~~~                                                   ^
i_choice.cpp:148:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        pos += SOpt[i].GetCStrLen() + 1;
               ~~~~ ^
In file included from i_choice.cpp:10:
In file included from ./i_choice.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:290:12: note: in instantiation of member function 'fte::vector<ExChoice::option>::size' requested here
    assert(size() <= alloc);
           ^
/usr/include/assert.h:92:5: note: expanded from:
  ((expr)                                                               \
    ^
./stl_fte.h:230:6: note: in instantiation of member function 'fte::vector<ExChoice::option>::internal_copy' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
            ^
i_choice.cpp:30:14: note: in instantiation of member function 'fte::vector<ExChoice::option>::push_back' requested here
        SOpt.push_back((va_arg(ap, char *)));
             ^
In file included from i_choice.cpp:10:
In file included from ./i_choice.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<ExChoice::option>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
i_choice.cpp:30:14: note: in instantiation of member function 'fte::vector<ExChoice::option>::push_back' requested here
        SOpt.push_back((va_arg(ap, char *)));
             ^
13 warnings generated.
g++ -c i_complete.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_complete.cpp:78:27: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        && Buffer->SetPos(Orig.Col + l, Orig.Row)) {
           ~~~~~~         ^~~~~~~~~~~~
i_complete.cpp:78:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        && Buffer->SetPos(Orig.Col + l, Orig.Row)) {
                          ~~~~~^~~
i_complete.cpp:88:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    unsigned long kb = kbCode(Event.Key.Code);
                       ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_complete.cpp:222:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', COM_NORM, W);
    ~~~~~~                   ^
i_complete.cpp:233:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, W, sc, COM_NORM, W);
        ~~~~~~~                        ^
i_complete.cpp:235:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, (int)p, W, WordBegin, COM_ORIG, W);
        ~~~~~~~                                    ^
i_complete.cpp:239:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, (int)p, W, Words[WordPos], COM_MARK, W);
            ~~~~~~~                                         ^
i_complete.cpp:244:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                (WordFixedCount == 1) ? COM_ORIG : COM_HIGH, W);
                                                             ^
i_complete.cpp:249:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, (int)p, W, s, COM_NORM, W);
        ~~~~~~~                            ^
i_complete.cpp:252:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, W, STRNOCOMPLETE, COM_ERR, W);
        ~~~~~~~                                  ^
i_complete.cpp:282:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    strncpy(WordBegin, L->Chars + P, wlen);
    ~~~~~~~                          ^~~~
i_complete.cpp:297:48: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    while (Buffer->FindStr(L->Chars + P, wlen, mask) == 1) {
           ~~~~~~                              ^~~~
i_complete.cpp:318:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            strncpy(s, M->Chars + X + wlen, len);
            ~~~~~~~                         ^~~
i_complete.cpp:363:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(Words, WordsLast, sizeof(Words[0]), CmpStr);
    ~~~~~        ^~~~~~~~~
i_complete.cpp:380:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            WordFixed += add;
                      ~~ ^~~
i_complete.cpp:383:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            WordFixed += add;
                      ~~ ^~~
i_complete.cpp:392:19: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        WordFixedCount = WordsLast;
                       ~ ^~~~~~~~~
In file included from i_complete.cpp:10:
In file included from ./i_complete.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
18 warnings generated.
g++ -c i_input.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_input.cpp:37:11: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
    Pos = strlen(Line);
        ~ ^~~~~~~~~~~~
i_input.cpp:51:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_input.cpp:77:27: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        case kbEnd: Pos = strlen(Line); goto common;
                        ~ ^~~~~~~~~~~~
i_input.cpp:92:27: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                    Pos = strlen(Line);
                        ~ ^~~~~~~~~~~~
i_input.cpp:157:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                size_t len = SSBuffer->LineChars(0);
                       ~~~   ^~~~~~~~~~~~~~~~~~~~~~
i_input.cpp:183:64: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                if (!CurItem || !GetInputHistory(HistId, Line, MaxLen, CurItem))
                                 ~~~~~~~~~~~~~~~               ^~~~~~
i_input.cpp:185:23: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                Pos = strlen(Line);
                    ~ ^~~~~~~~~~~~
i_input.cpp:200:41: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                if ((TabCount == 1) && (kbCode(Event.Key.Code) == kbTab))
                                        ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_input.cpp:206:27: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                    Pos = strlen(Line);
                        ~ ^~~~~~~~~~~~
i_input.cpp:244:12: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    FPos = Prompt.size() + 2;
         ~ ^~~~~~~~~~~~~~~~~
i_input.cpp:248:15: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        Pos = strlen(Line);
            ~ ^~~~~~~~~~~~
i_input.cpp:250:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (LPos + FLen <= Pos) LPos = Pos - FLen + 1;
        ~~~~   ^~~~
i_input.cpp:250:42: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (LPos + FLen <= Pos) LPos = Pos - FLen + 1;
                                   ~~~   ^~~~
i_input.cpp:253:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, W, ' ', hcEntry_Field, W);
    ~~~~~~~~                              ^
i_input.cpp:254:54: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, 0, W, Prompt.c_str(), hcEntry_Prompt, FPos);
    ~~~~~~~                                          ^~~~
i_input.cpp:256:53: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, FPos, W, Line + LPos, hcEntry_Field, FLen);
    ~~~~~~~                                         ^~~~
i_input.cpp:257:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    MoveAttr(B, FPos + SelStart - LPos, W, hcEntry_Selection, SelEnd - SelStart);
    ~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~
i_input.cpp:257:17: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    MoveAttr(B, FPos + SelStart - LPos, W, hcEntry_Selection, SelEnd - SelStart);
                ^~~~
i_input.cpp:258:21: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    ConSetCursorPos(FPos + Pos - LPos, H - 1);
    ~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~
i_input.cpp:258:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    ConSetCursorPos(FPos + Pos - LPos, H - 1);
                    ^~~~
In file included from i_input.cpp:11:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
21 warnings generated.
g++ -c i_key.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_key.cpp:38:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', 0x17, W);
    ~~~~~~               ^
1 warning generated.
g++ -c i_modelview.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c i_oview.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_oview.cpp:56:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (Event.What == evKeyDown && kbCode(Event.Key.Code) == kbF12)
                                   ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
1 warning generated.
g++ -c i_search.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_search.cpp:44:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
i_search.cpp:160:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', 0x17, W);
    ~~~~~~               ^
i_search.cpp:161:31: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveStr(B, 0, W, s, 0x17, W);
    ~~~~~~~                   ^
In file included from i_search.cpp:10:
In file included from ./i_search.h:13:
In file included from ./i_oview.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
4 warnings generated.
g++ -c i_view.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
i_view.cpp:156:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveCh(B, ' ', 0x07, X);
        ~~~~~~               ^
i_view.cpp:182:40: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        return DLGGetStr(this, Prompt, BufLen, Str, HistId, 0);
               ~~~~~~~~~               ^~~~~~
i_view.cpp:189:41: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
        return DLGGetFile(this, Prompt, BufLen, Str, Flags);
               ~~~~~~~~~~               ^~~~~~
i_view.cpp:215:51: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        rc = DLGPickChoice(this, Title, NSel, ap, Flags);
             ~~~~~~~~~~~~~                        ^~~~~
In file included from i_view.cpp:10:
In file included from ./i_view.h:13:
In file included from ./gui.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c log.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
log.cpp:131:25: warning: implicit conversion changes signedness: 'int' to 'const size_t' (aka 'const unsigned long') [-Wsign-conversion]
    os << FillChar('|', myIndentLevel - 1);
          ~~~~~~~~      ^~~~~~~~~~~~~~~~~
1 warning generated.
g++ -c o_buffer.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_buffer.cpp:19:
./o_cvsdiff.h:28:22: warning: 'ECvsDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from o_buffer.cpp:21:
./o_svndiff.h:28:22: warning: 'ESvnDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
o_buffer.cpp:175:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollDown(Event.Msg.Param1);
            ~~~~~~             ~~~~~~~~~~^~~~~~
o_buffer.cpp:179:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollUp(Event.Msg.Param1);
            ~~~~~~           ~~~~~~~~~~^~~~~~
o_buffer.cpp:196:52: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Buffer->SetNearPos(Buffer->CP.Col, Event.Msg.Param1 + ypos);
                ~~~~~~                             ^~~~~~~~~~~~~~~~~~~~~~~
o_buffer.cpp:197:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                SetTop(TP.Col, Event.Msg.Param1);
                ~~~~~~         ~~~~~~~~~~^~~~~~
o_buffer.cpp:203:43: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollRight(Event.Msg.Param1);
            ~~~~~~              ~~~~~~~~~~^~~~~~
o_buffer.cpp:207:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            Buffer->ScrollLeft(Event.Msg.Param1);
            ~~~~~~             ~~~~~~~~~~^~~~~~
o_buffer.cpp:223:36: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                Buffer->SetNearPos(Event.Msg.Param1 + xpos, Buffer->CP.Row);
                ~~~~~~             ^~~~~~~~~~~~~~~~~~~~~~~
o_buffer.cpp:224:34: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                SetTop(Event.Msg.Param1, TP.Row);
                ~~~~~~ ~~~~~~~~~~^~~~~~
o_buffer.cpp:707:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num);
           ~ ^~~~~~~~~
o_buffer.cpp:720:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num);
           ~ ^~~~~~~~~
o_buffer.cpp:753:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                if (PushULong(prev.Row) == 0) return 0;
                    ~~~~~~~~~ ~~~~~^~~
o_buffer.cpp:754:36: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                if (PushULong(prev.Col) == 0) return 0;
                    ~~~~~~~~~ ~~~~~^~~
o_buffer.cpp:780:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(p.Row) == 0) return 0;
                ~~~~~~~~~ ~~^~~
o_buffer.cpp:781:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            if (PushULong(p.Col) == 0) return 0;
                ~~~~~~~~~ ~~^~~
o_buffer.cpp:1189:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_GLOBAL;
                    ~~ ^~~~~~~~~~~~~~
o_buffer.cpp:1199:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_GLOBAL;
                    ~~ ^~~~~~~~~~~~~~
o_buffer.cpp:1209:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_GLOBAL;
                    ~~ ^~~~~~~~~~~~~~
o_buffer.cpp:1210:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    LSearch.Options &= ~SEARCH_ALL;
                    ~~ ^~~~~~~~~~~
o_buffer.cpp:1259:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num);
           ~ ^~~~~~~~~
o_buffer.cpp:1283:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num) - 1;
           ~ ^~~~~~~~~~~~~
o_buffer.cpp:1298:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        No = atol(Num) - 1;
           ~ ^~~~~~~~~~~~~
o_buffer.cpp:1673:33: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                size_t length = wordEnd - wordBegin;
                       ~~~~~~   ^~~~~~~~~~~~~~~~~~~
In file included from o_buffer.cpp:11:
In file included from ./c_config.h:13:
In file included from ./sysdep.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
25 warnings generated.
g++ -c o_buflist.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_buflist.cpp:53:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, Width, BList[Line] + Col, color, Width);
            ~~~~~~~                                        ^~~~~
o_buflist.cpp:78:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    BList = (char **) malloc(sizeof(char *) * BCount);
                             ~~~~~~           ^~~~~~
o_buflist.cpp:194:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            switch (kbCode(Event.Key.Code)) {
                    ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
o_buflist.cpp:239:86: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (BList[i][j] == SearchString[0] && strnicmp(SearchString, BList[i]+j, SearchLen) == 0) {
                                                  ~~~~~~~~                           ^~~~~~~~~
In file included from o_buflist.cpp:11:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
5 warnings generated.
g++ -c o_cvs.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_cvs.cpp:9:
./o_cvs.h:34:22: warning: 'ECvs::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from o_cvs.cpp:9:
In file included from ./o_cvs.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c o_cvsbase.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_cvsbase.cpp:94:19: warning: implicit conversion loses integer precision: 'int' to 'char' [-Wconversion]
        l->Status=status;
                 ~^~~~~~
o_cvsbase.cpp:97:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Lines=(CvsLine **)realloc (Lines,sizeof (CvsLine *)*LineCount);
                                         ~~~~~~             ^~~~~~~~~
o_cvsbase.cpp:164:14: warning: implicit conversion loses integer precision: 'ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
        rc = gui->ReadPipe(PipeId, MsgBuf + BufLen, sizeof(MsgBuf) - BufLen);
           ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
o_cvsbase.cpp:170:23: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            BufLen += rc;
                   ~~ ^~
o_cvsbase.cpp:172:9: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    l = max - 1;
      ~ ^~~~~~~
o_cvsbase.cpp:173:18: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (BufLen - BufPos < l)
        ~~~~~~   ^~~~~~
o_cvsbase.cpp:174:13: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        l = BufLen - BufPos;
          ~ ^~~~~~~~~~~~~~~
o_cvsbase.cpp:174:22: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        l = BufLen - BufPos;
            ~~~~~~   ^~~~~~
o_cvsbase.cpp:176:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    p = (char *)memchr(MsgBuf + BufPos, '\n', l);
                ~~~~~~                        ^
o_cvsbase.cpp:180:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        l = strlen(Line);
          ~ ^~~~~~~~~~~~
o_cvsbase.cpp:183:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        BufPos = p + 1 - MsgBuf;
               ~ ^~~~~~~~~~~~~~
o_cvsbase.cpp:186:51: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
                                         ~~~~~~   ^~~~~~
o_cvsbase.cpp:187:19: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        BufLen -= BufPos;
               ~~ ^~~~~~
o_cvsbase.cpp:194:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(Line, MsgBuf + BufPos, l);
        ~~~~~~                        ^
o_cvsbase.cpp:201:47: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
                                     ~~~~~~   ^~~~~~
o_cvsbase.cpp:202:15: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    BufLen -= BufPos;
           ~~ ^~~~~~
o_cvsbase.cpp:321:17: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
            len=UnTabStr (str,sizeof (str),Lines[Line]->Msg,strlen (Lines[Line]->Msg));
               ~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
o_cvsbase.cpp:322:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if (len>Col) MoveStr (B,0,Width,str+Col,color,Width);
                         ~~~~~~~                          ^~~~~
In file included from o_cvsbase.cpp:10:
In file included from ./o_cvsbase.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
19 warnings generated.
g++ -c o_cvsdiff.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_cvsdiff.cpp:10:
./o_cvsdiff.h:28:22: warning: 'ECvsDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
o_cvsdiff.cpp:40:14: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
    CurrLine=strtol (line+4,&end,10)-1;
            ~^~~~~~~~~~~~~~~~~~~~~~~~~
In file included from o_cvsdiff.cpp:10:
In file included from ./o_cvsdiff.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
3 warnings generated.
g++ -c o_directory.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_directory.cpp:55:27: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', color, Width);
    ~~~~~~                ^~~~~
o_directory.cpp:120:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, Width, s + Col, color, Width);
            ~~~~~~~                              ^~~~~
o_directory.cpp:171:58: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            Files = (FileInfo **)realloc((void *)Files, ((FCount | 255) + 1) * sizeof(FileInfo *));
                                                        ~^~~~~~~~~~~~~~~~~~
o_directory.cpp:181:26: warning: implicit conversion changes signedness: 'off_t' (aka 'long') to 'unsigned long' [-Wsign-conversion]
            SizeCount += Files[FCount]->Size();
                      ~~ ^~~~~~~~~~~~~~~~~~~~~
o_directory.cpp:202:18: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    qsort(Files, FCount, sizeof(FileInfo *), FileNameCmp);
    ~~~~~        ^~~~~~
o_directory.cpp:276:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (strnicmp(SearchName, Files[i]->Name(), SearchLen) == 0) {
                    ~~~~~~~~                               ^~~~~~~~~
o_directory.cpp:288:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                if (strnicmp(SearchName, Files[i]->Name(), SearchLen) == 0) {
                    ~~~~~~~~                               ^~~~~~~~~
o_directory.cpp:329:32: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        LOG << "Key Code: " << kbCode(Event.Key.Code) << ENDLINE;
                               ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
o_directory.cpp:331:17: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event.Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
o_directory.cpp:361:64: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                    if (strnicmp(SearchName, Files[i]->Name(), SearchLen) == 0) {
                        ~~~~~~~~                               ^~~~~~~~~
In file included from o_directory.cpp:13:
In file included from ./o_directory.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
11 warnings generated.
g++ -c o_list.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_list.cpp:63:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollDown(Event.Msg.Param1);
            ~~~~             ~~~~~~~~~~^~~~~~
o_list.cpp:67:38: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollUp(Event.Msg.Param1);
            ~~~~           ~~~~~~~~~~^~~~~~
o_list.cpp:83:42: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                List->TopRow = Event.Msg.Param1;
                             ~ ~~~~~~~~~~^~~~~~
o_list.cpp:89:41: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollRight(Event.Msg.Param1);
            ~~~~              ~~~~~~~~~~^~~~~~
o_list.cpp:93:40: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->ScrollLeft(Event.Msg.Param1);
            ~~~~             ~~~~~~~~~~^~~~~~
o_list.cpp:105:39: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
            List->LeftCol = Event.Msg.Param1;
                          ~ ~~~~~~~~~~^~~~~~
o_list.cpp:260:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, W, ' ', color, W);
            ~~~~~~~~                      ^
o_list.cpp:298:18: warning: implicit conversion changes signedness: 'ChColor' (aka 'unsigned char') to 'char' [-Wsign-conversion]
        SColor = hcStatus_Active;
               ~ ^~~~~~~~~~~~~~~
o_list.cpp:300:18: warning: implicit conversion changes signedness: 'ChColor' (aka 'unsigned char') to 'char' [-Wsign-conversion]
        SColor = hcStatus_Normal;
               ~ ^~~~~~~~~~~~~~~
o_list.cpp:301:20: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
    MoveCh(B, ' ', SColor, W);
    ~~~~~~         ^~~~~~
o_list.cpp:301:28: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', SColor, W);
    ~~~~~~                 ^
o_list.cpp:304:43: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
            MoveStr(B, 0, W, List->Title, SColor, W);
            ~~~~~~~                       ^~~~~~
o_list.cpp:304:51: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, W, List->Title, SColor, W);
            ~~~~~~~                               ^
o_list.cpp:306:20: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
        ~~~~~~~    ^~~~~~~~~~~~~
o_list.cpp:306:20: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
                   ^
o_list.cpp:306:41: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
        ~~~~~~~                         ^~~~~~
o_list.cpp:306:49: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, W - strlen(s), W, s, SColor, W);
        ~~~~~~~                                 ^
o_list.cpp:308:40: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveStr(B, 0, W, View->CurMsg, SColor, W);
        ~~~~~~~                        ^~~~~~
o_list.cpp:308:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, W, View->CurMsg, SColor, W);
        ~~~~~~~                                ^
o_list.cpp:514:11: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
    len = GetRowLength(Row);
        ~ ^~~~~~~~~~~~~~~~~
In file included from o_list.cpp:10:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
21 warnings generated.
g++ -c o_messages.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_messages.cpp:196:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        ShowError(View->Next, Row);
        ~~~~~~~~~             ^~~
o_messages.cpp:243:70: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        rc = gui->ReadPipe(PipeId, MsgBuf + BufLen, sizeof(MsgBuf) - BufLen);
                                                    ~~~~~~           ^~~~~~
o_messages.cpp:253:9: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    l = maxim - 1;
      ~ ^~~~~~~~~
o_messages.cpp:257:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    p = (char *)memchr(MsgBuf + BufPos, '\n', l);
                ~~~~~~                        ^
o_messages.cpp:260:48: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        UnEscStr(Line, maxim, MsgBuf + BufPos, p - (MsgBuf + BufPos));
        ~~~~~~~~                               ^~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:262:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        l = strlen(Line);
          ~ ^~~~~~~~~~~~
o_messages.cpp:265:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        BufPos = p + 1 - MsgBuf;
               ~ ^~~~~~~~~~~~~~
o_messages.cpp:268:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
        ~~~~~~~                          ^~~~~~~~~~~~~~~
o_messages.cpp:276:48: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        UnEscStr(Line, maxim, MsgBuf + BufPos, l);
        ~~~~~~~~                               ^
o_messages.cpp:284:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
    ~~~~~~~                          ^~~~~~~~~~~~~~~
o_messages.cpp:354:16: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                unsigned s = RM.Close[n] - RM.Open[n];
                         ~   ^~~~~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:362:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                s = RM.Close[n] - RM.Open[n];
                  ~ ^~~~~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:370:7: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                s = RM.Close[n] - RM.Open[n];
                  ~ ^~~~~~~~~~~~~~~~~~~~~~~~
o_messages.cpp:430:25: warning: implicit conversion loses integer precision: 'size_type' (aka 'unsigned long') to 'unsigned int' [-Wshorten-64-to-32]
                    for (unsigned i = DirLevel.size(); i-- > 0;) {
                                  ~   ^~~~~~~~~~~~~~~
o_messages.cpp:473:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
            ~~~~~~~ ^~~
o_messages.cpp:473:50: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
                                         ~~~~~~~ ^~~
o_messages.cpp:474:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            ShowError(V, Row);
            ~~~~~~~~~    ^~~
o_messages.cpp:491:21: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
            ~~~~~~~ ^~~
o_messages.cpp:491:50: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (ErrList[Row]->line != -1 && !ErrList[Row]->file.empty()) {
                                         ~~~~~~~ ^~~
o_messages.cpp:492:26: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            ShowError(V, Row);
            ~~~~~~~~~    ^~~
o_messages.cpp:533:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        if (Col < int(ErrList[Line]->text.size())) {
                      ~~~~~~~ ^~~~
o_messages.cpp:538:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                           ErrList[Line]->text.c_str(),
                           ~~~~~~~ ^~~~
o_messages.cpp:539:36: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                           ErrList[Line]->text.size());
                           ~~~~~~~ ^~~~
o_messages.cpp:542:56: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                MoveStr(B, 0, Width, str + Col, color, Width);
                ~~~~~~~                                ^~~~~
o_messages.cpp:548:31: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        return strdup(ErrList[Line]->text.c_str());
                      ~~~~~~~ ^~~~
o_messages.cpp:554:64: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    return (Line >= 0 && Line < (int)ErrList.size()) ? ErrList[Line]->hilit : 0;
                                                       ~~~~~~~ ^~~~
o_messages.cpp:565:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    ShowError(View, Row);
    ~~~~~~~~~       ^~~
o_messages.cpp:572:26: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
            && (!ErrList[Line]->file.empty()
                 ~~~~~~~ ^~~~
o_messages.cpp:573:28: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
                || ErrList[Line]->line != -1)) ? 1 : 0;
                   ~~~~~~~ ^~~~
o_messages.cpp:605:24: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        return ErrList[ARow]->text.size();
               ~~~~~~~ ^~~~
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
o_messages.cpp:109:26: note: in instantiation of member function 'fte::vector<Error *>::size' requested here
    assert(err < ErrList.size());
                         ^
/usr/include/assert.h:92:5: note: expanded from:
  ((expr)                                                               \
    ^
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<Error *>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
o_messages.cpp:208:13: note: in instantiation of member function 'fte::vector<Error *>::push_back' requested here
    ErrList.push_back(new Error(file, line, msg, text, hilit));
            ^
In file included from o_messages.cpp:10:
In file included from ./o_messages.h:13:
In file included from ./fte.h:39:
./stl_fte.h:197:41: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type capacity() const { return m_end - m_begin; }
                                 ~~~~~~ ^~~~~~~~~~~~~~~
./stl_fte.h:230:36: note: in instantiation of member function 'fte::vector<fte::string>::capacity' requested here
            internal_copy(m_begin, m_end, capacity() * 2);
                                          ^
o_messages.cpp:424:13: note: in instantiation of member function 'fte::vector<fte::string>::push_back' requested here
                        DirLevel.push_back(fn);
                                 ^
34 warnings generated.
g++ -c o_model.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c o_modemap.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_modemap.cpp:22:66: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        BList = (char **)realloc((void *)BList, sizeof(char *) * BCount);
                                                ~~~~~~           ^~~~~~
o_modemap.cpp:156:60: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveStr(B, 0, Width, BList[Line] + Col, color, Width);
            ~~~~~~~                                        ^~~~~
2 warnings generated.
g++ -c o_routine.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_routine.cpp:79:58: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            MoveStr(B, 0, Width, str + Col, color, len - Col);
                                                   ~~~   ^~~
In file included from o_routine.cpp:10:
In file included from ./o_routine.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c o_svn.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_svn.cpp:9:
./o_svn.h:32:22: warning: 'ESvn::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
In file included from o_svn.cpp:9:
In file included from ./o_svn.h:12:
In file included from ./o_svnbase.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c o_svnbase.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
o_svnbase.cpp:97:61: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Lines=(SvnLine **)realloc (Lines,sizeof (SvnLine *)*LineCount);
                                         ~~~~~~             ^~~~~~~~~
o_svnbase.cpp:166:70: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        rc = gui->ReadPipe(PipeId, MsgBuf + BufLen, sizeof(MsgBuf) - BufLen);
                                                    ~~~~~~           ^~~~~~
o_svnbase.cpp:174:9: warning: implicit conversion loses integer precision: 'unsigned long' to 'int' [-Wshorten-64-to-32]
    l = max - 1;
      ~ ^~~~~~~
o_svnbase.cpp:178:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    p = (char *)memchr(MsgBuf + BufPos, '\n', l);
                ~~~~~~                        ^
o_svnbase.cpp:182:13: warning: implicit conversion loses integer precision: 'size_t' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
        l = strlen(Line);
          ~ ^~~~~~~~~~~~
o_svnbase.cpp:185:18: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
        BufPos = p + 1 - MsgBuf;
               ~ ^~~~~~~~~~~~~~
o_svnbase.cpp:188:42: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
        ~~~~~~~                          ^~~~~~~~~~~~~~~
o_svnbase.cpp:196:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(Line, MsgBuf + BufPos, l);
        ~~~~~~                        ^
o_svnbase.cpp:203:38: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memmove(MsgBuf, MsgBuf + BufPos, BufLen - BufPos);
    ~~~~~~~                          ^~~~~~~~~~~~~~~
o_svnbase.cpp:323:66: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            if ((int)len > Col) MoveStr (B,0,Width,str+Col,color,Width);
                                ~~~~~~~                          ^~~~~
In file included from o_svnbase.cpp:10:
In file included from ./o_svnbase.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
11 warnings generated.
g++ -c o_svndiff.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from o_svndiff.cpp:10:
./o_svndiff.h:28:22: warning: 'ESvnDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
In file included from o_svndiff.cpp:10:
In file included from ./o_svndiff.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
2 warnings generated.
g++ -c stl_string.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
stl_string.cpp:191:18: warning: operand of ? changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    return (p) ? p - str : npos;
               ~ ^~~~~~~
stl_string.cpp:197:18: warning: operand of ? changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    return (p) ? p - str : npos;
               ~ ^~~~~~~
stl_string.cpp:203:18: warning: operand of ? changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    return (p) ? p - str : npos;
               ~ ^~~~~~~
stl_string.cpp:245:16: warning: implicit conversion changes signedness: 'int' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
        string tmp(s, r);
               ~~~    ^
4 warnings generated.
g++ -c s_direct.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_direct.cpp:306:19: warning: use of logical '&&' with constant operand [-Wconstant-logical-operand]
        if (Flags && ffLINK)
                  ^  ~~~~~~
s_direct.cpp:306:19: note: use '&' for a bitwise operation
        if (Flags && ffLINK)
                  ^~
                  &
s_direct.cpp:306:19: note: remove constant to silence this warning
s_direct.cpp:339:31: warning: implicit conversion changes signedness: '__mode_t' (aka 'unsigned int') to 'int' [-Wsign-conversion]
                           st.st_mode
                           ~~~^~~~~~~
2 warnings generated.
g++ -c s_util.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
s_util.cpp:40:18: warning: implicit conversion loses integer precision: 'ssize_t' (aka 'long') to 'int' [-Wshorten-64-to-32]
    while ((rd = read(fd1, buffer, BUF_SZ)) > 0) {
               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~
s_util.cpp:41:32: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (write(fd2, buffer, rd) != rd) {
            ~~~~~              ^~
s_util.cpp:99:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbEsc) { *Ch = 27; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:100:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbEnter) { *Ch = 13; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:101:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == (kbEnter | kfCtrl)) { *Ch = 10; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:102:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbBackSp) { *Ch = 8; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:103:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == (kbBackSp | kfCtrl)) { *Ch = 127; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:104:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbTab) { *Ch = 9; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
s_util.cpp:105:9: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    if (kbCode(E.Key.Code) == kbDel) { *Ch = 127; return 1; }
        ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
In file included from s_util.cpp:11:
In file included from ./s_util.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
10 warnings generated.
g++ -c view.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from view.cpp:20:
./o_cvs.h:34:22: warning: 'ECvs::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from view.cpp:21:
./o_cvsdiff.h:28:22: warning: 'ECvsDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_cvsbase.h:60:22: note: hidden overloaded virtual function 'ECvsBase::ParseLine' declared here
        virtual void ParseLine (const char *line, size_t len);
                     ^
In file included from view.cpp:26:
./o_svn.h:32:22: warning: 'ESvn::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
In file included from view.cpp:27:
./o_svndiff.h:28:22: warning: 'ESvnDiff::ParseLine' hides overloaded virtual function [-Woverloaded-virtual]
        virtual void ParseLine (char *line,int len);
                     ^
./o_svnbase.h:60:22: note: hidden overloaded virtual function 'ESvnBase::ParseLine' declared here
        virtual void ParseLine (char *line, size_t len);
                     ^
view.cpp:522:35: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveChar(B, 0, Cols, ' ', SColor, Cols);
        ~~~~~~~~                  ^~~~~~
view.cpp:522:43: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveChar(B, 0, Cols, ' ', SColor, Cols);
        ~~~~~~~~                          ^~~~
view.cpp:523:37: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        MoveStr(B, 0, Cols, CurMsg, SColor, Cols);
        ~~~~~~~                     ^~~~~~
view.cpp:523:45: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        MoveStr(B, 0, Cols, CurMsg, SColor, Cols);
        ~~~~~~~                             ^~~~
In file included from view.cpp:11:
In file included from ./c_history.h:12:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
9 warnings generated.
g++ -c e_unix.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
In file included from e_unix.cpp:12:
In file included from ./c_bind.h:14:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
1 warning generated.
g++ -c memicmp.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c clip_x11.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
clip_x11.cpp:35:37: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            SSBuffer->InsertLine(P, i - j - dx, data + j);
            ~~~~~~~~                ^~~~~~~~~~
clip_x11.cpp:45:41: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        SSBuffer->InsText(P.Row, P.Col, i - j - dx, data + j);
        ~~~~~~~~                        ^~~~~~~~~~
clip_x11.cpp:61:38: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        char *n = (char *)realloc(p, l + L->Count + 1);
                                     ^
In file included from clip_x11.cpp:10:
In file included from ./o_buflist.h:13:
In file included from ./o_list.h:14:
In file included from ./o_model.h:13:
In file included from ./console.h:13:
In file included from ./fte.h:39:
./stl_fte.h:243:37: warning: implicit conversion changes signedness: 'long' to 'size_type' (aka 'unsigned long') [-Wsign-conversion]
    size_type size() const { return m_end - m_begin; }
                             ~~~~~~ ^~~~~~~~~~~~~~~
./e_buffer.h:233:51: note: in instantiation of member function 'fte::vector<fte::string>::size' requested here
    size_t GetWordCount() const { return WordList.size(); }
                                                  ^
4 warnings generated.
g++ -c con_i18n.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c con_x11.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
con_x11.cpp:242:29: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                clr.pixel = j;
                          ~ ^
con_x11.cpp:262:27: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                    pix = j;
                        ~ ^
con_x11.cpp:289:26: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                         ((Colors[0].blue & 0xff00) << 8)
                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:478:32: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
    XSelectInput(display, win, mask);
    ~~~~~~~~~~~~               ^~~~
con_x11.cpp:589:43: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        long *iconBuffer = (long *)malloc(iconBufferSize * sizeof(long) + 16);
                                          ^~~~~~~~~~~~~~
con_x11.cpp:616:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    XResizeWindow(display, win, ScreenCols * FontCX, ScreenRows * FontCY);
    ~~~~~~~~~~~~~               ^~~~~~~~~~~~~~~~~~~
con_x11.cpp:616:54: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    XResizeWindow(display, win, ScreenCols * FontCX, ScreenRows * FontCY);
    ~~~~~~~~~~~~~                                    ^~~~~~~~~~~~~~~~~~~
con_x11.cpp:626:50: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    XFillRectangle(display, win, colorXGC->GetGC(clr),
                                 ~~~~~~~~        ^~~
con_x11.cpp:627:44: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                   X * FontCX, Y * FontCY, W * FontCX,
                                           ^~~~~~~~~~
con_x11.cpp:628:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                   H * FontCY / ((clr == 13) ? 2 : 1));
                   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:645:60: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            XDrawImageString(display, win, colorXGC->GetGC(attr),
                                           ~~~~~~~~        ^~~~
con_x11.cpp:651:72: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            XmbDrawImageString(display, win, font_set, colorXGC->GetGC(attr),
                                                       ~~~~~~~~        ^~~~
con_x11.cpp:697:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', 0x07, ScreenCols);
    ~~~~~~               ^~~~~~~~~~
con_x11.cpp:755:36: warning: implicit conversion changes signedness: 'int' to 'const unsigned int' [-Wsign-conversion]
                const unsigned p = x + l;
                               ~   ^~~~~
con_x11.cpp:769:31: warning: implicit conversion changes signedness: 'TChar' (aka 'unsigned char') to 'char' [-Wsign-conversion]
                default: ch = Cell[p].GetChar();
                            ~ ^~~~~~~~~~~~~~~~~
con_x11.cpp:801:45: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(Cell, CursorXYPos(X, Y + i), W * sizeof(TCell));
                                            ^
con_x11.cpp:834:19: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                  ^~~~~~~~~~
con_x11.cpp:834:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                              ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:838:74: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memcpy(CursorXYPos(X, Y + l), CursorXYPos(X, Y + l + Count), W * sizeof(TCell));
                                                                         ^
con_x11.cpp:848:19: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                  ^~~~~~~~~~
con_x11.cpp:848:31: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
                  W * FontCX, (H - Count) * FontCY,
                              ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:852:74: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            memcpy(CursorXYPos(X, Y + l), CursorXYPos(X, Y + l - Count), W * sizeof(TCell));
                                                                         ^
con_x11.cpp:869:54: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        memcpy(NewBuffer + X * i, CursorXYPos(0, i), MX * sizeof(TCell));
                                                     ^~
con_x11.cpp:1124:25: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
                key += ('A' - 'a');
                    ~~  ^~~~~~~~~
con_x11.cpp:1138:35: warning: implicit conversion changes signedness: 'long' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
                Event->Key.Code = k | myState;
                                ~ ^~~~~~~~~~~
con_x11.cpp:1206:42: warning: implicit conversion changes signedness: 'short' to 'unsigned short' [-Wsign-conversion]
                    Event->Mouse.Count = ++LastClickCount;
                                       ~ ^~~~~~~~~~~~~~~~
con_x11.cpp:1360:34: warning: implicit conversion changes signedness: 'short' to 'unsigned short' [-Wsign-conversion]
                    rect.width = (short) event.xexpose.width;
                               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1361:34: warning: implicit conversion changes signedness: 'short' to 'unsigned short' [-Wsign-conversion]
                    rect.height= (short) event.xexpose.height;
                               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1390:43: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                            event.xbutton.button, event.xbutton.state,
                            ~~~~~~~~~~~~~~^~~~~~
con_x11.cpp:1390:65: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                            event.xbutton.button, event.xbutton.state,
                                                  ~~~~~~~~~~~~~~^~~~~
con_x11.cpp:1406:34: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
            event1.xkey.state &= ~(ShiftMask | ControlMask | Mod1Mask /* | Mod2Mask*/ | Mod3Mask | Mod4Mask | Mod5Mask);
                              ~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1421:54: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                              event.type, event.xkey.state, Event);
                                          ~~~~~~~~~~~^~~~~
con_x11.cpp:1427:46: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                            0, event.xmotion.state, Event, event.xmotion.time);
                               ~~~~~~~~~~~~~~^~~~~
con_x11.cpp:1514:94: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
                                  (CurSelectionData[clip] ? CurSelectionData[clip] : empty), CurSelectionLen[clip], False);
                                                                                             ^~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1581:22: warning: implicit conversion changes signedness: 'long' to 'unsigned long' [-Wsign-conversion]
    CursorLastTime = tv.tv_sec * 1000 + tv.tv_usec / 1000;
                   ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1815:22: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        buffer_len = *(int *)d;
                   ~ ^~~~~~~~~
con_x11.cpp:1836:65: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
            XGetWindowProperty(display, win, prop_selection, 0, nitems + bytes_after, True, type,
            ~~~~~~~~~~~~~~~~~~                                  ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1868:65: warning: implicit conversion changes signedness: 'unsigned long' to 'long' [-Wsign-conversion]
        if (XGetWindowProperty(display, win, prop_selection, 0, nitems + bytes_after,
            ~~~~~~~~~~~~~~~~~~                                  ^~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1907:36: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            *data = (char *)malloc(*len + 1);
                            ~~~~~~ ^~~~~~~~
con_x11.cpp:1931:39: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        if (!(*data = (char *) malloc(CurSelectionLen[clipboard])))
                               ~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1933:52: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        memcpy(*data, CurSelectionData[clipboard], CurSelectionLen[clipboard]);
        ~~~~~~                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~
con_x11.cpp:1963:59: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    CurSelectionData[clipboard] = (unsigned char *)malloc(len + 1);
                                                   ~~~~~~ ^~~~~~~
con_x11.cpp:1971:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    memcpy(CurSelectionData[clipboard], data, CurSelectionLen[clipboard]);
    ~~~~~~                                    ^~~~~~~~~~~~~~~~~~~~~~~~~~
43 warnings generated.
g++ -c g_nodlg.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c g_text.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g_text.cpp:804:14: warning: explicitly assigning a variable of type 'GView *' to itself [-Wself-assign]
        view = view;
        ~~~~ ^ ~~~~
g_text.cpp:1201:46: warning: implicit conversion loses integer precision: 'long' to 'int' [-Wshorten-64-to-32]
                    if (::ExecVertMenu(x, y, id, E, 0) != 1) {
                        ~~                   ^~
2 warnings generated.
g++ -c g_unix_pipe.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c menu_text.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
menu_text.cpp:49:61: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            if (X >= pos && X <= pos + (int)len + 1) return i;
                                                     ~~~~~~ ^
menu_text.cpp:67:50: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, Cols, ' ', hcMenu_Background, Cols);
    ~~~~~~~~                                     ^~~~
menu_text.cpp:104:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    Y = Menus[id].Count;
      ~ ~~~~~~~~~~^~~~~
menu_text.cpp:128:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, w, ConGetDrawChar(DCH_H), hcMenu_Background, w);
    ~~~~~~~~                                                    ^
menu_text.cpp:151:44: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, w, ' ', color1, w);
            ~~~~~~~~                       ^
menu_text.cpp:162:73: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
            MoveChar(B, 0, w, ConGetDrawChar(DCH_H), hcMenu_Background, w);
            ~~~~~~~~                                                    ^
menu_text.cpp:167:22: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        ConPutBox(x, y + i + 1, w, 1, B);
        ~~~~~~~~~    ^~~~~~~~~
menu_text.cpp:167:22: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        ConPutBox(x, y + i + 1, w, 1, B);
                     ^
menu_text.cpp:169:65: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveChar(B, 0, w, ConGetDrawChar(DCH_H), hcMenu_Background, w);
    ~~~~~~~~                                                    ^
menu_text.cpp:172:18: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    ConPutBox(x, y + Menus[id].Count + 1, w, 1, B);
    ~~~~~~~~~    ^~~~~~~~~~~~~~~~~~~~~~~
menu_text.cpp:172:18: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    ConPutBox(x, y + Menus[id].Count + 1, w, 1, B);
                 ^
menu_text.cpp:229:24: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    c = (PCell) malloc(w * h * sizeof(TCell));
                       ^~~~~
menu_text.cpp:285:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            switch (kbCode(E.Key.Code)) {
                    ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
menu_text.cpp:287:41: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            case kbEnd: cur = Menus[id].Count;
                            ~ ~~~~~~~~~~^~~~~
menu_text.cpp:294:44: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                        if (cur < 0) cur = Menus[id].Count - 1;
                                         ~ ^~~~~~~~~~~~~~~~~~~
menu_text.cpp:315:62: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                        E.Msg.Command = Menus[id].Items[cur].Cmd;
                                      ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:344:82: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                                            E.Msg.Command = Menus[id].Items[cur].Cmd;
                                                          ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:450:58: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                    E.Msg.Command = Menus[id].Items[cur].Cmd;
                                  ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:539:21: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
            switch (kbCode(E.Key.Code)) {
                    ^~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
menu_text.cpp:540:41: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
            case kbEnd: cur = Menus[id].Count;
                            ~ ~~~~~~~~~~^~~~~
menu_text.cpp:547:44: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
                        if (cur < 0) cur = Menus[id].Count - 1;
                                         ~ ^~~~~~~~~~~~~~~~~~~
menu_text.cpp:568:62: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                        E.Msg.Command = Menus[id].Items[cur].Cmd;
                                      ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:592:82: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                                            E.Msg.Command = Menus[id].Items[cur].Cmd;
                                                          ~ ~~~~~~~~~~~~~~~~~~~~~^~~
menu_text.cpp:640:58: warning: implicit conversion changes signedness: 'int' to 'TCommand' (aka 'unsigned long') [-Wsign-conversion]
                    E.Msg.Command = Menus[id].Items[cur].Cmd;
                                  ~ ~~~~~~~~~~~~~~~~~~~~~^~~
24 warnings generated.
g++ -o xfte -g   commands.o c_bind.o c_color.o c_config.o c_desktop.o c_hilit.o c_history.o c_mode.o egui.o e_block.o e_buffer.o e_cmds.o e_cvslog.o e_file.o e_fold.o e_line.o e_loadsave.o e_mark.o e_print.o e_redraw.o e_regex.o e_search.o e_svnlog.o e_tags.o e_trans.o e_undo.o fte.o gui.o g_draw.o g_menu.o h_ada.o h_c.o h_catbs.o h_fte.o h_ipf.o h_make.o h_msg.o h_pascal.o h_perl.o h_plain.o h_rexx.o h_sh.o h_simple.o h_tex.o indent.o i_ascii.o i_choice.o i_complete.o i_input.o i_key.o i_modelview.o i_oview.o i_search.o i_view.o log.o o_buffer.o o_buflist.o o_cvs.o o_cvsbase.o o_cvsdiff.o o_directory.o o_list.o o_messages.o o_model.o o_modemap.o o_routine.o o_svn.o o_svnbase.o o_svndiff.o stl_string.o s_direct.o s_files.o s_string.o s_util.o view.o e_unix.o memicmp.o clip_x11.o con_i18n.o con_x11.o g_nodlg.o g_text.o g_unix_pipe.o menu_text.o  -lX11  -lXpm 
g++ -c clip_no.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
g++ -c con_linux.cpp   -Wall -Wpointer-arith -Wconversion -Wwrite-strings -Winline -g    -I/usr/include/qt3 -I/usr/lib64/qt-3.3/include  -I/usr/include/slang -DUNIX -DLINUX
con_linux.cpp:110:11: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
            ch = fromScreen[(unsigned char)s[n + (BYTE_ORDER == BIG_ENDIAN)]];
               ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:115:9: warning: implicit conversion changes signedness: 'char' to 'TChar' (aka 'unsigned char') [-Wsign-conversion]
        p->Set(ch, s[n + (BYTE_ORDER != BIG_ENDIAN)]);
        ~      ^~
con_linux.cpp:115:13: warning: implicit conversion changes signedness: 'char' to 'TAttr' (aka 'unsigned char') [-Wsign-conversion]
        p->Set(ch, s[n + (BYTE_ORDER != BIG_ENDIAN)]);
        ~          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:128:36: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
            c[BYTE_ORDER == BIG_ENDIAN] = toScreen[(unsigned char)p[n].GetChar()];
                                        ~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:131:36: warning: implicit conversion changes signedness: 'TChar' (aka 'unsigned char') to 'char' [-Wsign-conversion]
            c[BYTE_ORDER == BIG_ENDIAN] = p[n].GetChar();
                                        ~ ^~~~~~~~~~~~~~
con_linux.cpp:132:32: warning: implicit conversion changes signedness: 'TAttr' (aka 'unsigned char') to 'char' [-Wsign-conversion]
        c[BYTE_ORDER != BIG_ENDIAN] = p[n].GetAttr();
                                    ~ ^~~~~~~~~~~~~~
con_linux.cpp:135:27: warning: implicit conversion changes signedness: 'long' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    return write(fd, buf, c - buf);
           ~~~~~          ^~~~~~~
con_linux.cpp:141:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
            ~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:141:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                   ^~~~~~~~~~
con_linux.cpp:141:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                                ^~~~~~~~~~
con_linux.cpp:154:19: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
            ~~~   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:154:20: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                   ^~~~~~~~~~
con_linux.cpp:154:33: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        int pos = (LastMouseX + LastMouseY * VideoCols) * 2 + 4;
                                ^~~~~~~~~~
con_linux.cpp:255:39: warning: implicit conversion loses integer precision: 'unsigned int' to 'unsigned char' [-Wconversion]
            fromScreen[toScreen[c]] = c;
                                    ~ ^
con_linux.cpp:264:21: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    newt.c_lflag &= ~ (ICANON | ECHO | ISIG);
                 ~~ ^~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:346:20: warning: implicit conversion changes signedness: 'int' to 'tcflag_t' (aka 'unsigned int') [-Wsign-conversion]
    newt.c_lflag = ~ (ICANON | ECHO | ISIG);
                 ~ ^~~~~~~~~~~~~~~~~~~~~~~~
con_linux.cpp:394:31: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        conwrite(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
        ~~~~~~~~              ^
con_linux.cpp:394:40: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conwrite(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                      ~^~~~~
con_linux.cpp:394:61: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conwrite(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                      ~                     ^
con_linux.cpp:404:30: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
        conread(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
        ~~~~~~~              ^
con_linux.cpp:404:39: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conread(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                     ~^~~~~
con_linux.cpp:404:60: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
        conread(VcsFd, Cell, W, 4 + ((Y + i) * VideoCols + X) * 2);
                                     ~                     ^
con_linux.cpp:422:15: warning: implicit conversion changes signedness: 'TChar' (aka 'unsigned char') to 'char' [-Wsign-conversion]
    MoveCh(B, Cell.GetChar(), Cell.GetAttr(), W);
    ~~~~~~    ^~~~~~~~~~~~~~
con_linux.cpp:422:47: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, Cell.GetChar(), Cell.GetAttr(), W);
    ~~~~~~                                    ^
con_linux.cpp:434:12: error: variable length array of non-POD element type 'TCell'
    TCell C[W * H];
           ^
con_linux.cpp:438:26: warning: implicit conversion changes signedness: 'int' to 'size_t' (aka 'unsigned long') [-Wsign-conversion]
    MoveCh(B, ' ', Fill, W);
    ~~~~~~               ^
con_linux.cpp:459:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (X) *X = VideoCols;
              ~ ^~~~~~~~~
con_linux.cpp:460:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (Y) *Y = VideoRows;
              ~ ^~~~~~~~~
con_linux.cpp:468:49: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (X >= 0 && X < int(VideoCols)) CursorX = X;
                                              ~ ^
con_linux.cpp:469:49: warning: implicit conversion changes signedness: 'int' to 'unsigned int' [-Wsign-conversion]
    if (Y >= 0 && Y < int(VideoRows)) CursorY = Y;
                                              ~ ^
con_linux.cpp:479:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (X) *X = CursorX;
              ~ ^~~~~~~
con_linux.cpp:480:17: warning: implicit conversion changes signedness: 'unsigned int' to 'int' [-Wsign-conversion]
    if (Y) *Y = CursorY;
              ~ ^~~~~~~
con_linux.cpp:665:20: warning: implicit conversion loses integer precision: 'int' to 'unsigned char' [-Wconversion]
    kbe.kb_index = key;
                 ~ ^~~
con_linux.cpp:790:28: warning: implicit conversion loses integer precision: 'int' to 'unsigned char' [-Wconversion]
            kbe.kb_index = key;
                         ~ ^~~
con_linux.cpp:791:28: warning: implicit conversion loses integer precision: 'int' to 'unsigned char' [-Wconversion]
            kbe.kb_table = shift_final;
                         ~ ^~~~~~~~~~~
con_linux.cpp:805:27: warning: implicit conversion changes signedness: 'int' to 'TKeyCode' (aka 'unsigned long') [-Wsign-conversion]
                KeyCode = toupper(KeyCode);
                        ~ ^~~~~~~~~~~~~~~~
con_linux.cpp:805:35: warning: implicit conversion loses integer precision: 'TKeyCode' (aka 'unsigned long') to 'int' [-Wshorten-64-to-32]
                KeyCode = toupper(KeyCode);
                          ~~~~~~~ ^~~~~~~
con_linux.cpp:838:16: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    KeyCode |= ShiftFlags;
            ~~ ^~~~~~~~~~
con_linux.cpp:852:37: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        Event->Key.Code = KeyCode & ~kfKeyUp;
                          ~~~~~~~   ^~~~~~~~
con_linux.cpp:864:10: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
        switch (kbCode(Event->Key.Code)) {
                ^~~~~~~~~~~~~~~~~~~~~~~
./conkbd.h:30:41: note: expanded from:
#define kbCode(x) (((x) & 0x0FFFFFFF) & ~(kfGray | kfAltXXX))
                   ~                    ^~~~~~~~~~~~~~~~~~~~
con_linux.cpp:925:42: warning: implicit conversion loses integer precision: 'unsigned int' to 'short' [-Wconversion]
        if (e.x >= int(VideoCols)) e.x = VideoCols - 1;
                                       ~ ^~~~~~~~~~~~~
con_linux.cpp:926:42: warning: implicit conversion loses integer precision: 'unsigned int' to 'short' [-Wconversion]
        if (e.y >= int(VideoRows)) e.y = VideoRows - 1;
                                       ~ ^~~~~~~~~~~~~
con_linux.cpp:962:34: warning: implicit conversion changes signedness: 'int' to 'unsigned long' [-Wsign-conversion]
    SavedScreen = (PCell) malloc(SavedX * SavedY * sizeof(PCell));
                                 ^~~~~~~~~~~~~~~
con_linux.cpp:1065:12: warning: implicit conversion changes signedness: 'unsigned char' to 'char' [-Wsign-conversion]
    return fromScreen[(unsigned char)tab[idx]];
    ~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
43 warnings and 1 error generated.
make[1]: *** [con_linux.o] Error 1
make[1]: Leaving directory `/build/fte-3TmUY8/fte-0.50.2b6/src'
make: *** [build] Error 2
dpkg-buildpackage: error: debian/rules build gave error exit status 2
────────────────────────────────────────────────────────────────────────────────
Build finished at 20120113-0249

Finished
────────

E: Build failure (dpkg-buildpackage died)

┌──────────────────────────────────────────────────────────────────────────────┐
│ Cleanup                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Purging /var/lib/schroot/mount/lsid64b-8da0465f-b47c-45bc-9ff2-65e75410b08b/build/fte-3TmUY8
Not cleaning session: cloned chroot in use

┌──────────────────────────────────────────────────────────────────────────────┐
│ Summary                                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

Architecture: amd64
Build-Space: 15644
Build-Time: 18
Distribution: lsid64b
Fail-Stage: build
Install-Time: 8
Job: fte_0.50.2b6-1
Package: fte
Package-Time: 43
Source-Version: 0.50.2b6-1
Space: 15644
Status: attempted
Version: 0.50.2b6-1
────────────────────────────────────────────────────────────────────────────────
Finished at 20120113-0249
Build needed 00:00:43, 15644k disc space
DC-Build-Status: Failed 145.760538s
### Content of /var/log/daemon.log ###
Jan 12 21:02:56 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
Jan 12 21:03:31 stremi-22 approx: Concurrent download of debian/dists/sid/Release is taking too long
Jan 12 21:03:58 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
Jan 12 21:04:09 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
Jan 12 21:04:20 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
Jan 12 21:04:31 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
Jan 12 21:04:55 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
Jan 12 21:05:07 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
Jan 12 21:05:11 stremi-22 approx: Concurrent download of debian/dists/sid/main/binary-amd64/Packages.xz is taking too long
Jan 12 21:05:25 stremi-22 approx: Concurrent download of debian/dists/sid/main/i18n/Index is taking too long
Jan 12 21:05:45 stremi-22 approx: Concurrent download of debian/dists/sid/main/binary-amd64/Packages.xz is taking too long
Jan 12 21:05:56 stremi-22 approx: Concurrent download of debian/dists/sid/main/i18n/Translation-en.gz is taking too long
Jan 13 02:46:19 stremi-22 approx: Concurrent download of debian/dists/sid/Release.gpg is taking too long
### End of content of /var/log/daemon.log ###
DC-Time-Estimation: 145.760538 versus expected 35 (r/m: 3.1645868 ; m: 35.0)
DC-Build-Network: USED. See /tmp/rulesafter.y1ZFCt !
************************************************************
# Generated by iptables-save v1.4.8 on Fri Jan 13 02:49:05 2012
*filter
:INPUT ACCEPT [4599333:30888588262]
:FORWARD ACCEPT [0:0]
:OUTPUT DROP [0:0]
:LD - [0:0]
[2231852:27001874505] -A OUTPUT -o lo -j ACCEPT 
[0:0] -A OUTPUT -d 129.88.0.0/16 -j ACCEPT 
[0:0] -A OUTPUT -d 10.0.0.0/8 -j ACCEPT 
[0:0] -A OUTPUT -d 192.168.133.0/24 -j ACCEPT 
[0:0] -A OUTPUT -d 192.168.159.0/24 -j ACCEPT 
[0:0] -A OUTPUT -d 192.168.160.0/24 -j ACCEPT 
[0:0] -A OUTPUT -d 10.69.0.0/17 -j ACCEPT 
[0:0] -A OUTPUT -d 172.28.52.0/22 -j ACCEPT 
[0:0] -A OUTPUT -d 172.24.0.0/16 -j ACCEPT 
[0:0] -A OUTPUT -d 131.254.202.0/23 -j ACCEPT 
[0:0] -A OUTPUT -d 138.96.20.0/22 -j ACCEPT 
[0:0] -A OUTPUT -d 192.168.22.0/24 -j ACCEPT 
[384634:126391493] -A OUTPUT -d 172.16.0.0/16 -j ACCEPT 
[0:0] -A OUTPUT -d 192.168.67.0/24 -j ACCEPT 
[42229:5643576] -A OUTPUT -d 224.0.0.0/4 -p udp -j ACCEPT 
[6:360] -A OUTPUT -j LD 
[6:360] -A LD -j LOG 
[6:360] -A LD -j REJECT --reject-with icmp-port-unreachable 
COMMIT
# Completed on Fri Jan 13 02:49:05 2012
************************************************************
--- /tmp/rulesbefore.9Vg7RP	2012-01-13 02:46:39.706679551 +0100
+++ /tmp/rulesafter.y1ZFCt	2012-01-13 02:49:05.477597501 +0100
@@ -1,10 +1,10 @@
-# Generated by iptables-save v1.4.8 on Fri Jan 13 02:46:39 2012
+# Generated by iptables-save v1.4.8 on Fri Jan 13 02:49:05 2012
 *filter
-:INPUT ACCEPT [4538132:30384539904]
+:INPUT ACCEPT [4599333:30888588262]
 :FORWARD ACCEPT [0:0]
 :OUTPUT DROP [0:0]
 :LD - [0:0]
-[2192498:26551657949] -A OUTPUT -o lo -j ACCEPT 
+[2231852:27001874505] -A OUTPUT -o lo -j ACCEPT 
 [0:0] -A OUTPUT -d 129.88.0.0/16 -j ACCEPT 
 [0:0] -A OUTPUT -d 10.0.0.0/8 -j ACCEPT 
 [0:0] -A OUTPUT -d 192.168.133.0/24 -j ACCEPT 
@@ -16,11 +16,11 @@
 [0:0] -A OUTPUT -d 131.254.202.0/23 -j ACCEPT 
 [0:0] -A OUTPUT -d 138.96.20.0/22 -j ACCEPT 
 [0:0] -A OUTPUT -d 192.168.22.0/24 -j ACCEPT 
-[376539:124218949] -A OUTPUT -d 172.16.0.0/16 -j ACCEPT 
+[384634:126391493] -A OUTPUT -d 172.16.0.0/16 -j ACCEPT 
 [0:0] -A OUTPUT -d 192.168.67.0/24 -j ACCEPT 
-[41962:5607632] -A OUTPUT -d 224.0.0.0/4 -p udp -j ACCEPT 
+[42229:5643576] -A OUTPUT -d 224.0.0.0/4 -p udp -j ACCEPT 
 [6:360] -A OUTPUT -j LD 
 [6:360] -A LD -j LOG 
 [6:360] -A LD -j REJECT --reject-with icmp-port-unreachable 
 COMMIT
-# Completed on Fri Jan 13 02:46:39 2012
+# Completed on Fri Jan 13 02:49:05 2012
************************************************************
[    7.944351] hub 6-0:1.0: 3 ports detected
[    7.949043] ohci_hcd 0000:00:14.5: PCI INT C -> GSI 18 (level, low) -> IRQ 18
[    7.957123] ohci_hcd 0000:00:14.5: OHCI Host Controller
[    7.963062] ohci_hcd 0000:00:14.5: new USB bus registered, assigned bus number 7
[    7.971465] ohci_hcd 0000:00:14.5: irq 18, io mem 0xfe9ff000
[    8.036029] usb usb7: New USB device found, idVendor=1d6b, idProduct=0001
[    8.043713] usb usb7: New USB device strings: Mfr=3, Product=2, SerialNumber=1
[    8.051912] usb usb7: Product: OHCI Host Controller
[    8.057449] usb usb7: Manufacturer: Linux 2.6.32-5-amd64 ohci_hcd
[    8.064354] usb usb7: SerialNumber: 0000:00:14.5
[    8.069697] usb usb7: configuration #1 chosen from 1 choice
[    8.076054] hub 7-0:1.0: USB hub found
[    8.080347] hub 7-0:1.0: 2 ports detected
[   10.078591] Adding 3911788k swap on /dev/sda1.  Priority:-1 extents:1 across:3911788k 
[   10.100196] EXT3 FS on sda3, internal journal
[   10.377427] kjournald starting.  Commit interval 5 seconds
[   10.387547] EXT3 FS on sda5, internal journal
[   10.392599] EXT3-fs: mounted filesystem with ordered data mode.
[   10.739860] ADDRCONF(NETDEV_UP): eth0: link is not ready
[   13.012536] igb: eth0 NIC Link is Up 1000 Mbps Full Duplex, Flow Control: RX
[   13.023717] ADDRCONF(NETDEV_CHANGE): eth0: link becomes ready
[   14.174384] fuse init (API version 7.13)
[   23.308009] eth0: no IPv6 routers present
[  215.458684] RPC: Registered udp transport module.
[  215.464075] RPC: Registered tcp transport module.
[  215.469437] RPC: Registered tcp NFSv4.1 backchannel transport module.
[  215.511605] Slow work thread pool: Starting up
[  215.516792] Slow work thread pool: Ready
[  215.521362] FS-Cache: Loaded
[  215.546228] FS-Cache: Netfs 'nfs' registered for caching
[  215.650561] svc: failed to register lockdv1 RPC service (errno 97).
[  297.000126] Adding 228556712k swap on /dev/sda5.  Priority:-2 extents:1 across:228556712k 
[  344.694958] ip_tables: (C) 2000-2006 Netfilter Core Team
[ 2863.317455] IN= OUT=eth0 SRC=172.16.160.22 DST=193.51.224.42 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=64184 DF PROTO=TCP SPT=51341 DPT=80 WINDOW=5840 RES=0x00 SYN URGP=0 
[ 2866.332028] IN= OUT=eth0 SRC=172.16.160.22 DST=193.51.224.42 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=64185 DF PROTO=TCP SPT=51341 DPT=80 WINDOW=5840 RES=0x00 SYN URGP=0 
[10571.873854] conftest[2807]: segfault at 4003c800 ip 00000000004008b1 sp 00007fffe9de30f0 error 4 in conftest[400000+1000]
[10572.026540] conftest[2818]: segfault at 412cc800 ip 00000000004008b1 sp 00007fff7ca7be30 error 6 in conftest[400000+1000]
[10572.178694] conftest[2829]: segfault at 40a47800 ip 00000000004008c3 sp 00007fffba781550 error 7 in conftest[400000+1000]
[10624.213680] conftest[5810]: segfault at 40550800 ip 00000000004008b1 sp 00007fff55e55910 error 4 in conftest[400000+1000]
[10624.371087] conftest[5821]: segfault at 40eab800 ip 00000000004008b1 sp 00007fff62a98780 error 6 in conftest[400000+1000]
[10624.528252] conftest[5832]: segfault at 404b9800 ip 00000000004008c3 sp 00007fffbedd3750 error 7 in conftest[400000+1000]
[12516.590855] IN= OUT=eth0 SRC=172.16.160.22 DST=216.34.181.96 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=33165 DF PROTO=TCP SPT=41676 DPT=80 WINDOW=5840 RES=0x00 SYN URGP=0 
[12519.604028] IN= OUT=eth0 SRC=172.16.160.22 DST=216.34.181.96 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=33166 DF PROTO=TCP SPT=41676 DPT=80 WINDOW=5840 RES=0x00 SYN URGP=0 
[12570.158736] IN= OUT=eth0 SRC=172.16.160.22 DST=216.34.181.96 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=12709 DF PROTO=TCP SPT=41678 DPT=80 WINDOW=5840 RES=0x00 SYN URGP=0 
[12573.172043] IN= OUT=eth0 SRC=172.16.160.22 DST=216.34.181.96 LEN=60 TOS=0x00 PREC=0x00 TTL=64 ID=12710 DF PROTO=TCP SPT=41678 DPT=80 WINDOW=5840 RES=0x00 SYN URGP=0 
[18489.270180] gtest_break_on_[26238]: segfault at 0 ip 0000000000440aad sp 00007fff903995c0 error 6 in gtest_break_on_failure_unittest_[400000+77000]
[18489.300737] gtest_break_on_[26268]: segfault at 0 ip 0000000000440aad sp 00007fff6505c210 error 6 in gtest_break_on_failure_unittest_[400000+77000]
[18489.324540] gtest_break_on_[26294]: segfault at 0 ip 0000000000440aad sp 00007fffe53c8820 error 6 in gtest_break_on_failure_unittest_[400000+77000]
[18489.348609] gtest_break_on_[26319]: segfault at 0 ip 0000000000440aad sp 00007fffbfd86df0 error 6 in gtest_break_on_failure_unittest_[400000+77000]
[18489.372147] gtest_break_on_[26343]: segfault at 0 ip 0000000000440aad sp 00007fffe99c1220 error 6 in gtest_break_on_failure_unittest_[400000+77000]
************************************************************
